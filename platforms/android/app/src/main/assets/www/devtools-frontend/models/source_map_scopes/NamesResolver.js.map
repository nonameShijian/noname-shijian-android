{"version":3,"file":"NamesResolver.js","sourceRoot":"","sources":["../../../../../../front_end/models/source_map_scopes/NamesResolver.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Formatter from '../formatter/formatter.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport type * as Workspace from '../workspace/workspace.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Platform from '../../core/platform/platform.js';\n\ninterface CachedScopeMap {\n  sourceMap: SDK.SourceMap.SourceMap|undefined;\n  mappingPromise: Promise<{variableMapping: Map<string, string>, thisMapping: string|null}>;\n}\n\nconst scopeToCachedIdentifiersMap = new WeakMap<SDK.DebuggerModel.ScopeChainEntry, CachedScopeMap>();\nconst cachedMapByCallFrame = new WeakMap<SDK.DebuggerModel.CallFrame, Map<string, string>>();\nconst cachedTextByDeferredContent = new WeakMap<TextUtils.ContentProvider.DeferredContent, TextUtils.Text.Text|null>();\n\nasync function getTextFor(contentProvider: TextUtils.ContentProvider.ContentProvider):\n    Promise<TextUtils.Text.Text|null> {\n  // We intentionally cache based on the DeferredContent object rather\n  // than the ContentProvider object, which may appear as a more sensible\n  // choice, since the content of both Script and UISourceCode objects\n  // can change over time.\n  const deferredContent = await contentProvider.requestContent();\n  let text = cachedTextByDeferredContent.get(deferredContent);\n  if (text === undefined) {\n    const {content} = deferredContent;\n    text = content ? new TextUtils.Text.Text(content) : null;\n    cachedTextByDeferredContent.set(deferredContent, text);\n  }\n  return text;\n}\n\nexport class IdentifierPositions {\n  name: string;\n  positions: {lineNumber: number, columnNumber: number}[];\n\n  constructor(name: string, positions: {lineNumber: number, columnNumber: number}[] = []) {\n    this.name = name;\n    this.positions = positions;\n  }\n\n  addPosition(lineNumber: number, columnNumber: number): void {\n    this.positions.push({lineNumber, columnNumber});\n  }\n}\n\nconst tryParseScope = async function(scopeText: string): Promise<{\n  prefixLength: number, scopeTree: Formatter.FormatterWorkerPool.ScopeTreeNode,\n}|null> {\n  const prefixSuffixToTry = [\n    // We wrap the scope in a class constructor. This handles the case where the\n    // scope is a (non-arrow) function and the case where it is a constructor\n    // (so that parsing 'super' calls succeeds).\n    {prefix: 'class DummyClass extends DummyBase { constructor', suffix: '}'},\n    // Next, we try async generator, this handles functions with yield or await keywords.\n    {prefix: 'async function* __DEVTOOLS_DUMMY__', suffix: ''},\n    // Finally, try parse as an async arrow function.\n    {prefix: 'async ', suffix: ''},\n  ];\n  for (const {prefix, suffix} of prefixSuffixToTry) {\n    const scopeTree =\n        await Formatter.FormatterWorkerPool.formatterWorkerPool().javaScriptScopeTree(prefix + scopeText + suffix);\n    if (scopeTree) {\n      return {prefixLength: prefix.length, scopeTree};\n    }\n  }\n  return null;\n};\n\nconst computeScopeTree = async function(functionScope: SDK.DebuggerModel.ScopeChainEntry): Promise<{\n  scopeTree: Formatter.FormatterWorkerPool.ScopeTreeNode, text: TextUtils.Text.Text, slide: number,\n}|null> {\n  const functionStartLocation = functionScope.startLocation();\n  const functionEndLocation = functionScope.endLocation();\n  if (!functionStartLocation || !functionEndLocation) {\n    return null;\n  }\n  const script = functionStartLocation.script();\n  if (!script || !script.sourceMapURL || script !== functionEndLocation.script()) {\n    return null;\n  }\n  const text = await getTextFor(script);\n  if (!text) {\n    return null;\n  }\n  const scopeRange = new TextUtils.TextRange.TextRange(\n      functionStartLocation.lineNumber, functionStartLocation.columnNumber, functionEndLocation.lineNumber,\n      functionEndLocation.columnNumber);\n  const scopeText = text.extract(scopeRange);\n  const scopeStart = text.toSourceRange(scopeRange).offset;\n  const prefixLengthAndscopeTree = await tryParseScope(scopeText);\n  if (!prefixLengthAndscopeTree) {\n    return null;\n  }\n  const {prefixLength, scopeTree} = prefixLengthAndscopeTree;\n  return {scopeTree, text, slide: scopeStart - prefixLength};\n};\n\nexport const scopeIdentifiers = async function(\n    functionScope: SDK.DebuggerModel.ScopeChainEntry|null, scope: SDK.DebuggerModel.ScopeChainEntry): Promise<{\n  freeVariables: IdentifierPositions[], boundVariables: IdentifierPositions[],\n}|null> {\n  if (!functionScope) {\n    return null;\n  }\n\n  const startLocation = scope.startLocation();\n  const endLocation = scope.endLocation();\n  if (!startLocation || !endLocation) {\n    return null;\n  }\n\n  // Parse the function scope to get the scope tree.\n  const scopeTreeAndStart = await computeScopeTree(functionScope);\n  if (!scopeTreeAndStart) {\n    return null;\n  }\n  const {scopeTree, text, slide} = scopeTreeAndStart;\n\n  // Compute the offset within the scope tree coordinate space.\n  const scopeOffsets = {\n    start: text.offsetFromPosition(startLocation.lineNumber, startLocation.columnNumber) - slide,\n    end: text.offsetFromPosition(endLocation.lineNumber, endLocation.columnNumber) - slide,\n  };\n\n  if (!contains(scopeTree, scopeOffsets)) {\n    return null;\n  }\n\n  // Find the corresponding scope in the scope tree.\n  let containingScope = scopeTree;\n  const ancestorScopes = [];\n  while (true) {\n    let childFound = false;\n    for (const child of containingScope.children) {\n      if (contains(child, scopeOffsets)) {\n        // We found a nested containing scope, continue with search there.\n        ancestorScopes.push(containingScope);\n        containingScope = child;\n        childFound = true;\n        break;\n      }\n      // Sanity check: |scope| should not straddle any of the scopes in the tree. That is:\n      // Either |scope| is disjoint from |child| or |child| must be inside |scope|.\n      // (Or the |scope| is inside |child|, but that case is covered above.)\n      if (!disjoint(scopeOffsets, child) && !contains(scopeOffsets, child)) {\n        console.error('Wrong nesting of scopes');\n        return null;\n      }\n    }\n    if (!childFound) {\n      // We found the deepest scope in the tree that contains our scope chain entry.\n      break;\n    }\n  }\n\n  // Now we have containing scope. Collect all the scope variables.\n  const boundVariables = [];\n  const cursor = new TextUtils.TextCursor.TextCursor(text.lineEndings());\n  for (const variable of containingScope.variables) {\n    // Skip the fixed-kind variable (i.e., 'this' or 'arguments') if we only found their \"definition\"\n    // without any uses.\n    if (variable.kind === Formatter.FormatterWorkerPool.DefinitionKind.Fixed && variable.offsets.length <= 1) {\n      continue;\n    }\n\n    const identifier = new IdentifierPositions(variable.name);\n    for (const offset of variable.offsets) {\n      const start = offset + slide;\n      cursor.resetTo(start);\n      identifier.addPosition(cursor.lineNumber(), cursor.columnNumber());\n    }\n    boundVariables.push(identifier);\n  }\n\n  // Compute free variables by collecting all the ancestor variables that are used in |containingScope|.\n  const freeVariables = [];\n  for (const ancestor of ancestorScopes) {\n    for (const ancestorVariable of ancestor.variables) {\n      let identifier = null;\n      for (const offset of ancestorVariable.offsets) {\n        if (offset >= containingScope.start && offset < containingScope.end) {\n          if (!identifier) {\n            identifier = new IdentifierPositions(ancestorVariable.name);\n          }\n          const start = offset + slide;\n          cursor.resetTo(start);\n          identifier.addPosition(cursor.lineNumber(), cursor.columnNumber());\n        }\n      }\n      if (identifier) {\n        freeVariables.push(identifier);\n      }\n    }\n  }\n  return {boundVariables, freeVariables};\n\n  function contains(scope: {start: number, end: number}, candidate: {start: number, end: number}): boolean {\n    return (scope.start <= candidate.start) && (scope.end >= candidate.end);\n  }\n  function disjoint(scope: {start: number, end: number}, other: {start: number, end: number}): boolean {\n    return (scope.end <= other.start) || (other.end <= scope.start);\n  }\n};\n\nconst identifierAndPunctuationRegExp = /^\\s*([A-Za-z_$][A-Za-z_$0-9]*)\\s*([.;,=]?)\\s*$/;\n\nconst enum Punctuation {\n  None = 'none',\n  Comma = 'comma',\n  Dot = 'dot',\n  Semicolon = 'semicolon',\n  Equals = 'equals',\n}\n\nconst resolveScope =\n    async(scope: SDK.DebuggerModel\n              .ScopeChainEntry): Promise<{variableMapping: Map<string, string>, thisMapping: string | null}> => {\n  let cachedScopeMap = scopeToCachedIdentifiersMap.get(scope);\n  const script = scope.callFrame().script;\n  const sourceMap = script.debuggerModel.sourceMapManager().sourceMapForClient(script);\n\n  if (!cachedScopeMap || cachedScopeMap.sourceMap !== sourceMap) {\n    const identifiersPromise =\n        (async(): Promise<{variableMapping: Map<string, string>, thisMapping: string | null}> => {\n          const variableMapping = new Map<string, string>();\n          let thisMapping = null;\n\n          if (!sourceMap) {\n            return {variableMapping, thisMapping};\n          }\n          // Extract as much as possible from SourceMap and resolve\n          // missing identifier names from SourceMap ranges.\n          const promises: Promise<void>[] = [];\n\n          const resolveEntry = (id: IdentifierPositions, handler: (sourceName: string) => void): void => {\n            // First see if we have a source map entry with a name for the identifier.\n            for (const position of id.positions) {\n              const entry = sourceMap.findEntry(position.lineNumber, position.columnNumber);\n              if (entry && entry.name) {\n                handler(entry.name);\n                return;\n              }\n            }\n            // If there is no entry with the name field, try to infer the name from the source positions.\n            async function resolvePosition(): Promise<void> {\n              if (!sourceMap) {\n                return;\n              }\n              // Let us find the first non-empty mapping of |id| and return that. Ideally, we would\n              // try to compute all the mappings and only use the mapping if all the non-empty\n              // mappings agree. However, that can be expensive for identifiers with many uses,\n              // so we iterate sequentially, stopping at the first non-empty mapping.\n              for (const position of id.positions) {\n                const sourceName = await resolveSourceName(script, sourceMap, id.name, position);\n                if (sourceName) {\n                  handler(sourceName);\n                  return;\n                }\n              }\n            }\n            promises.push(resolvePosition());\n          };\n\n          const functionScope = findFunctionScope();\n          const parsedVariables = await scopeIdentifiers(functionScope, scope);\n          if (!parsedVariables) {\n            return {variableMapping, thisMapping};\n          }\n          for (const id of parsedVariables.boundVariables) {\n            resolveEntry(id, sourceName => {\n              // Let use ignore 'this' mappings - those are handled separately.\n              if (sourceName !== 'this') {\n                variableMapping.set(id.name, sourceName);\n              }\n            });\n          }\n          for (const id of parsedVariables.freeVariables) {\n            resolveEntry(id, sourceName => {\n              if (sourceName === 'this') {\n                thisMapping = id.name;\n              }\n            });\n          }\n          await Promise.all(promises).then(getScopeResolvedForTest());\n          return {variableMapping, thisMapping};\n        })();\n    cachedScopeMap = {sourceMap, mappingPromise: identifiersPromise};\n    scopeToCachedIdentifiersMap.set(scope, {sourceMap, mappingPromise: identifiersPromise});\n  }\n  return await cachedScopeMap.mappingPromise;\n\n  async function resolveSourceName(\n      script: SDK.Script.Script, sourceMap: SDK.SourceMap.SourceMap, name: string,\n      position: {lineNumber: number, columnNumber: number}): Promise<string|null> {\n    const ranges = sourceMap.findEntryRanges(position.lineNumber, position.columnNumber);\n    if (!ranges) {\n      return null;\n    }\n    // Extract the underlying text from the compiled code's range and make sure that\n    // it starts with the identifier |name|.\n    const uiSourceCode =\n        Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().uiSourceCodeForSourceMapSourceURL(\n            script.debuggerModel, ranges.sourceURL, script.isContentScript());\n    if (!uiSourceCode) {\n      return null;\n    }\n    const compiledText = await getTextFor(script);\n    if (!compiledText) {\n      return null;\n    }\n    const compiledToken = compiledText.extract(ranges.range);\n    const parsedCompiledToken = extractIdentifier(compiledToken);\n    if (!parsedCompiledToken) {\n      return null;\n    }\n    const {name: compiledName, punctuation: compiledPunctuation} = parsedCompiledToken;\n    if (compiledName !== name) {\n      return null;\n    }\n\n    // Extract the mapped name from the source code range and ensure that the punctuation\n    // matches the one from the compiled code.\n    const sourceText = await getTextFor(uiSourceCode);\n    if (!sourceText) {\n      return null;\n    }\n    const sourceToken = sourceText.extract(ranges.sourceRange);\n    const parsedSourceToken = extractIdentifier(sourceToken);\n    if (!parsedSourceToken) {\n      return null;\n    }\n    const {name: sourceName, punctuation: sourcePunctuation} = parsedSourceToken;\n    // Accept the source name if it is followed by the same punctuation.\n    if (compiledPunctuation === sourcePunctuation) {\n      return sourceName;\n    }\n    // Let us also allow semicolons into commas since that it is a common transformation.\n    if (compiledPunctuation === Punctuation.Comma && sourcePunctuation === Punctuation.Semicolon) {\n      return sourceName;\n    }\n\n    return null;\n\n    function extractIdentifier(token: string): {name: string, punctuation: Punctuation}|null {\n      const match = token.match(identifierAndPunctuationRegExp);\n      if (!match) {\n        return null;\n      }\n\n      const name = match[1];\n      let punctuation: Punctuation|null = null;\n      switch (match[2]) {\n        case '.':\n          punctuation = Punctuation.Dot;\n          break;\n        case ',':\n          punctuation = Punctuation.Comma;\n          break;\n        case ';':\n          punctuation = Punctuation.Semicolon;\n          break;\n        case '=':\n          punctuation = Punctuation.Equals;\n          break;\n        case '':\n          punctuation = Punctuation.None;\n          break;\n        default:\n          console.error(`Name token parsing error: unexpected token \"${match[2]}\"`);\n          return null;\n      }\n\n      return {name, punctuation};\n    }\n  }\n\n  function findFunctionScope(): SDK.DebuggerModel.ScopeChainEntry|null {\n    // First find the scope in the callframe's scope chain and then find the containing function scope (closure or local).\n    const scopeChain = scope.callFrame().scopeChain();\n    let scopeIndex = 0;\n    for (scopeIndex; scopeIndex < scopeChain.length; scopeIndex++) {\n      if (scopeChain[scopeIndex] === scope) {\n        break;\n      }\n    }\n    for (scopeIndex; scopeIndex < scopeChain.length; scopeIndex++) {\n      const kind = scopeChain[scopeIndex].type();\n      if (kind === Protocol.Debugger.ScopeType.Local || kind === Protocol.Debugger.ScopeType.Closure) {\n        break;\n      }\n    }\n    return scopeIndex === scopeChain.length ? null : scopeChain[scopeIndex];\n  }\n};\n\nexport const resolveScopeChain =\n    async function(callFrame: SDK.DebuggerModel.CallFrame|null): Promise<SDK.DebuggerModel.ScopeChainEntry[]|null> {\n  if (!callFrame) {\n    return null;\n  }\n  const {pluginManager} = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n  if (pluginManager) {\n    const scopeChain = await pluginManager.resolveScopeChain(callFrame);\n    if (scopeChain) {\n      return scopeChain;\n    }\n  }\n  return callFrame.scopeChain();\n};\n\nexport const allVariablesInCallFrame = async(callFrame: SDK.DebuggerModel.CallFrame): Promise<Map<string, string>> => {\n  const cachedMap = cachedMapByCallFrame.get(callFrame);\n  if (cachedMap) {\n    return cachedMap;\n  }\n\n  const scopeChain = callFrame.scopeChain();\n  const nameMappings = await Promise.all(scopeChain.map(resolveScope));\n  const reverseMapping = new Map<string, string>();\n  for (const {variableMapping} of nameMappings) {\n    for (const [compiledName, originalName] of variableMapping) {\n      if (originalName && !reverseMapping.has(originalName)) {\n        reverseMapping.set(originalName, compiledName);\n      }\n    }\n  }\n  cachedMapByCallFrame.set(callFrame, reverseMapping);\n  return reverseMapping;\n};\n\nexport const resolveExpression = async(\n    callFrame: SDK.DebuggerModel.CallFrame, originalText: string, uiSourceCode: Workspace.UISourceCode.UISourceCode,\n    lineNumber: number, startColumnNumber: number, endColumnNumber: number): Promise<string> => {\n  if (uiSourceCode.mimeType() === 'application/wasm') {\n    // For WebAssembly disassembly, lookup the different possiblities.\n    return `memories[\"${originalText}\"] ?? locals[\"${originalText}\"] ?? tables[\"${originalText}\"] ?? functions[\"${\n        originalText}\"] ?? globals[\"${originalText}\"]`;\n  }\n  if (!uiSourceCode.contentType().isFromSourceMap()) {\n    return '';\n  }\n  const reverseMapping = await allVariablesInCallFrame(callFrame);\n  if (reverseMapping.has(originalText)) {\n    return reverseMapping.get(originalText) as string;\n  }\n  const rawLocations =\n      await Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().uiLocationToRawLocations(\n          uiSourceCode, lineNumber, startColumnNumber);\n  const rawLocation = rawLocations.find(location => location.debuggerModel === callFrame.debuggerModel);\n  if (!rawLocation) {\n    return '';\n  }\n  const script = rawLocation.script();\n  if (!script) {\n    return '';\n  }\n  const sourceMap = script.debuggerModel.sourceMapManager().sourceMapForClient(script);\n  if (!sourceMap) {\n    return '';\n  }\n  const text = await getTextFor(script);\n  if (!text) {\n    return '';\n  }\n  const textRanges = sourceMap.reverseMapTextRanges(\n      uiSourceCode.url(),\n      new TextUtils.TextRange.TextRange(lineNumber, startColumnNumber, lineNumber, endColumnNumber));\n  if (textRanges.length !== 1) {\n    return '';\n  }\n  const [compiledRange] = textRanges;\n  const subjectText = text.extract(compiledRange);\n  if (!subjectText) {\n    return '';\n  }\n  // Map `subjectText` back to the authored code and check that the source map spits out\n  // `originalText` again modulo some whitespace/punctuation.\n  const authoredText = await getTextFor(uiSourceCode);\n  if (!authoredText) {\n    return '';\n  }\n\n  // Take the \"start point\" and the \"end point - 1\" of the compiled range and map them\n  // with the source map. Note that for \"end point - 1\" we need the line endings array to potentially\n  // move to the end of the previous line.\n  const startRange = sourceMap.findEntryRanges(compiledRange.startLine, compiledRange.startColumn);\n  const endLine = compiledRange.endColumn === 0 ? compiledRange.endLine - 1 : compiledRange.endLine;\n  const endColumn = compiledRange.endColumn === 0 ? text.lineEndings()[endLine] : compiledRange.endColumn - 1;\n  const endRange = sourceMap.findEntryRanges(endLine, endColumn);\n  if (!startRange || !endRange) {\n    return '';\n  }\n\n  // Merge `startRange` with `endRange`. This might not be 100% correct if there are interleaved ranges inbetween.\n  const mappedAuthoredText = authoredText.extract(new TextUtils.TextRange.TextRange(\n      startRange.sourceRange.startLine, startRange.sourceRange.startColumn, endRange.sourceRange.endLine,\n      endRange.sourceRange.endColumn));\n\n  // Check that what we found after applying the source map roughly matches `originalText`.\n  const originalTextRegex = new RegExp(`^[\\\\s,;]*${Platform.StringUtilities.escapeForRegExp(originalText)}`, 'g');\n  if (!originalTextRegex.test(mappedAuthoredText)) {\n    return '';\n  }\n  return await Formatter.FormatterWorkerPool.formatterWorkerPool().evaluatableJavaScriptSubstring(subjectText);\n};\n\nexport const resolveThisObject =\n    async(callFrame: SDK.DebuggerModel.CallFrame|null): Promise<SDK.RemoteObject.RemoteObject|null> => {\n  if (!callFrame) {\n    return null;\n  }\n  const scopeChain = callFrame.scopeChain();\n  if (scopeChain.length === 0) {\n    return callFrame.thisObject();\n  }\n\n  const {thisMapping} = await resolveScope(scopeChain[0]);\n  if (!thisMapping) {\n    return callFrame.thisObject();\n  }\n\n  const result = await callFrame.evaluate(({\n    expression: thisMapping,\n    objectGroup: 'backtrace',\n    includeCommandLineAPI: false,\n    silent: true,\n    returnByValue: false,\n    generatePreview: true,\n  } as SDK.RuntimeModel.EvaluationOptions));\n  if ('exceptionDetails' in result) {\n    return !result.exceptionDetails && result.object ? result.object : callFrame.thisObject();\n  }\n  return null;\n};\n\nexport const resolveScopeInObject = function(scope: SDK.DebuggerModel.ScopeChainEntry): SDK.RemoteObject.RemoteObject {\n  const startLocation = scope.startLocation();\n  const endLocation = scope.endLocation();\n  const startLocationScript = startLocation ? startLocation.script() : null;\n\n  if (scope.type() === Protocol.Debugger.ScopeType.Global || !startLocationScript || !endLocation ||\n      !startLocationScript.sourceMapURL || startLocationScript !== endLocation.script()) {\n    return scope.object();\n  }\n\n  return new RemoteObject(scope);\n};\n\nexport class RemoteObject extends SDK.RemoteObject.RemoteObject {\n  private readonly scope: SDK.DebuggerModel.ScopeChainEntry;\n  private readonly object: SDK.RemoteObject.RemoteObject;\n  constructor(scope: SDK.DebuggerModel.ScopeChainEntry) {\n    super();\n    this.scope = scope;\n    this.object = scope.object();\n  }\n\n  override customPreview(): Protocol.Runtime.CustomPreview|null {\n    return this.object.customPreview();\n  }\n\n  override get objectId(): Protocol.Runtime.RemoteObjectId|undefined {\n    return this.object.objectId;\n  }\n\n  override get type(): string {\n    return this.object.type;\n  }\n\n  override get subtype(): string|undefined {\n    return this.object.subtype;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  override get value(): any {\n    return this.object.value;\n  }\n\n  override get description(): string|undefined {\n    return this.object.description;\n  }\n\n  override get hasChildren(): boolean {\n    return this.object.hasChildren;\n  }\n\n  override get preview(): Protocol.Runtime.ObjectPreview|undefined {\n    return this.object.preview;\n  }\n\n  override arrayLength(): number {\n    return this.object.arrayLength();\n  }\n\n  override getOwnProperties(generatePreview: boolean): Promise<SDK.RemoteObject.GetPropertiesResult> {\n    return this.object.getOwnProperties(generatePreview);\n  }\n\n  override async getAllProperties(accessorPropertiesOnly: boolean, generatePreview: boolean):\n      Promise<SDK.RemoteObject.GetPropertiesResult> {\n    const allProperties = await this.object.getAllProperties(accessorPropertiesOnly, generatePreview);\n    const {variableMapping} = await resolveScope(this.scope);\n\n    const properties = allProperties.properties;\n    const internalProperties = allProperties.internalProperties;\n    const newProperties = [];\n    if (properties) {\n      for (let i = 0; i < properties.length; ++i) {\n        const property = properties[i];\n        const name = variableMapping.get(property.name) || properties[i].name;\n        if (!property.value) {\n          continue;\n        }\n        newProperties.push(new SDK.RemoteObject.RemoteObjectProperty(\n            name, property.value, property.enumerable, property.writable, property.isOwn, property.wasThrown,\n            property.symbol, property.synthetic));\n      }\n    }\n    return {properties: newProperties, internalProperties: internalProperties};\n  }\n\n  override async setPropertyValue(argumentName: string|Protocol.Runtime.CallArgument, value: string): Promise<string|undefined> {\n    const {variableMapping} = await resolveScope(this.scope);\n\n    let name;\n    if (typeof argumentName === 'string') {\n      name = argumentName;\n    } else {\n      name = (argumentName.value as string);\n    }\n\n    let actualName: string = name;\n    for (const compiledName of variableMapping.keys()) {\n      if (variableMapping.get(compiledName) === name) {\n        actualName = compiledName;\n        break;\n      }\n    }\n    return this.object.setPropertyValue(actualName, value);\n  }\n\n  override async deleteProperty(name: Protocol.Runtime.CallArgument): Promise<string|undefined> {\n    return this.object.deleteProperty(name);\n  }\n\n  override callFunction<T>(functionDeclaration: (this: Object, ...arg1: unknown[]) => T, args?: Protocol.Runtime.CallArgument[]):\n      Promise<SDK.RemoteObject.CallFunctionResult> {\n    return this.object.callFunction(functionDeclaration, args);\n  }\n\n  override callFunctionJSON<T>(\n      functionDeclaration: (this: Object, ...arg1: unknown[]) => T,\n      args?: Protocol.Runtime.CallArgument[]): Promise<T> {\n    return this.object.callFunctionJSON(functionDeclaration, args);\n  }\n\n  override release(): void {\n    this.object.release();\n  }\n\n  override debuggerModel(): SDK.DebuggerModel.DebuggerModel {\n    return this.object.debuggerModel();\n  }\n\n  override runtimeModel(): SDK.RuntimeModel.RuntimeModel {\n    return this.object.runtimeModel();\n  }\n\n  override isNode(): boolean {\n    return this.object.isNode();\n  }\n}\n\n// Resolve the frame's function name using the name associated with the opening\n// paren that starts the scope. If there is no name associated with the scope\n// start or if the function scope does not start with a left paren (e.g., arrow\n// function with one parameter), the resolution returns null.\nasync function getFunctionNameFromScopeStart(\n    script: SDK.Script.Script, lineNumber: number, columnNumber: number): Promise<string|null> {\n  // To reduce the overhead of resolving function names,\n  // we check for source maps first and immediately leave\n  // this function if the script doesn't have a sourcemap.\n  const sourceMap = script.debuggerModel.sourceMapManager().sourceMapForClient(script);\n  if (!sourceMap) {\n    return null;\n  }\n\n  const name = sourceMap.findEntry(lineNumber, columnNumber)?.name;\n  if (!name) {\n    return null;\n  }\n\n  const text = await getTextFor(script);\n  if (!text) {\n    return null;\n  }\n\n  const openRange = new TextUtils.TextRange.TextRange(lineNumber, columnNumber, lineNumber, columnNumber + 1);\n\n  if (text.extract(openRange) !== '(') {\n    return null;\n  }\n\n  return name;\n}\n\nexport async function resolveDebuggerFrameFunctionName(frame: SDK.DebuggerModel.CallFrame): Promise<string|null> {\n  const startLocation = frame.localScope()?.startLocation();\n  if (!startLocation) {\n    return null;\n  }\n  return await getFunctionNameFromScopeStart(frame.script, startLocation.lineNumber, startLocation.columnNumber);\n}\n\nexport async function resolveProfileFrameFunctionName(\n    {scriptId, lineNumber, columnNumber}: Partial<Protocol.Runtime.CallFrame>,\n    target: SDK.Target.Target|null): Promise<string|null> {\n  if (!target || lineNumber === undefined || columnNumber === undefined || scriptId === undefined) {\n    return null;\n  }\n  const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n  const script = debuggerModel?.scriptForId(String(scriptId));\n\n  if (!debuggerModel || !script) {\n    return null;\n  }\n\n  const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n  const location = new SDK.DebuggerModel.Location(debuggerModel, scriptId, lineNumber, columnNumber);\n  const functionInfoFromPlugin = await debuggerWorkspaceBinding.pluginManager?.getFunctionInfo(script, location);\n  if (functionInfoFromPlugin && 'frames' in functionInfoFromPlugin) {\n    const last = functionInfoFromPlugin.frames.at(-1);\n    if (last?.name) {\n      return last.name;\n    }\n  }\n  return await getFunctionNameFromScopeStart(script, lineNumber, columnNumber);\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _scopeResolvedForTest: (...arg0: unknown[]) => void = function(): void {};\n\nexport const getScopeResolvedForTest = (): (...arg0: unknown[]) => void => {\n  return _scopeResolvedForTest;\n};\n\nexport const setScopeResolvedForTest = (scope: (...arg0: unknown[]) => void): void => {\n  _scopeResolvedForTest = scope;\n};\n"]}