{"version":3,"file":"TimelineLoader.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineLoader.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Timeline Loader of the Performance panel\n   */\n  malformedTimelineDataUnknownJson: 'Malformed timeline data: Unknown JSON format',\n  /**\n   *@description Text in Timeline Loader of the Performance panel\n   */\n  malformedTimelineInputWrongJson: 'Malformed timeline input, wrong JSON brackets balance',\n  /**\n   *@description Text in Timeline Loader of the Performance panel\n   *@example {Unknown JSON format} PH1\n   */\n  malformedTimelineDataS: 'Malformed timeline data: {PH1}',\n  /**\n   *@description Text in Timeline Loader of the Performance panel\n   */\n  legacyTimelineFormatIsNot: 'Legacy Timeline format is not supported.',\n  /**\n   *@description Text in Timeline Loader of the Performance panel\n   */\n  malformedCpuProfileFormat: 'Malformed CPU profile format',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineLoader.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * This class handles loading traces from file and URL, and from the Lighthouse panel\n * It also handles loading cpuprofiles from file, url and console.profileEnd()\n *\n * Meanwhile, the normal trace recording flow bypasses TimelineLoader entirely,\n * as it's handled from TracingManager => TimelineController.\n */\nexport class TimelineLoader implements Common.StringOutputStream.OutputStream {\n  private client: Client|null;\n  private tracingModel: SDK.TracingModel.TracingModel|null;\n  private canceledCallback: (() => void)|null;\n  private state: State;\n  private buffer: string;\n  private firstRawChunk: boolean;\n  private firstChunk: boolean;\n  private loadedBytes: number;\n  private totalSize!: number;\n  private readonly jsonTokenizer: TextUtils.TextUtils.BalancedJSONTokenizer;\n  private filter: TimelineModel.TimelineModelFilter.TimelineModelFilter|null;\n  constructor(client: Client, title?: string) {\n    this.client = client;\n    this.tracingModel = new SDK.TracingModel.TracingModel(title);\n    this.canceledCallback = null;\n    this.state = State.Initial;\n    this.buffer = '';\n    this.firstRawChunk = true;\n    this.firstChunk = true;\n    this.loadedBytes = 0;\n    this.jsonTokenizer = new TextUtils.TextUtils.BalancedJSONTokenizer(this.writeBalancedJSON.bind(this), true);\n    this.filter = null;\n  }\n\n  static async loadFromFile(file: File, client: Client): Promise<TimelineLoader> {\n    const loader = new TimelineLoader(client);\n    const fileReader = new Bindings.FileUtils.ChunkedFileReader(file, TransferChunkLengthBytes);\n    loader.canceledCallback = fileReader.cancel.bind(fileReader);\n    loader.totalSize = file.size;\n    const success = await fileReader.read(loader);\n    if (!success && fileReader.error()) {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      loader.reportErrorAndCancelLoading((fileReader.error() as any).message);\n    }\n    return loader;\n  }\n\n  static loadFromEvents(events: SDK.TracingManager.EventPayload[], client: Client): TimelineLoader {\n    const loader = new TimelineLoader(client);\n    window.setTimeout(async () => {\n      void loader.addEvents(events);\n    });\n    return loader;\n  }\n\n  static getCpuProfileFilter(): TimelineModel.TimelineModelFilter.TimelineVisibleEventsFilter {\n    const visibleTypes = [];\n    visibleTypes.push(TimelineModel.TimelineModel.RecordType.JSFrame);\n    visibleTypes.push(TimelineModel.TimelineModel.RecordType.JSIdleFrame);\n    visibleTypes.push(TimelineModel.TimelineModel.RecordType.JSSystemFrame);\n    return new TimelineModel.TimelineModelFilter.TimelineVisibleEventsFilter(visibleTypes);\n  }\n\n  static loadFromCpuProfile(profile: Protocol.Profiler.Profile|null, client: Client, title?: string): TimelineLoader {\n    const loader = new TimelineLoader(client, title);\n\n    try {\n      const events = TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.createFakeTraceFromCpuProfile(\n          profile, /* tid */ 1, /* injectPageEvent */ true);\n\n      loader.filter = TimelineLoader.getCpuProfileFilter();\n\n      window.setTimeout(async () => {\n        void loader.addEvents(events);\n      });\n    } catch (e) {\n      console.error(e.stack);\n    }\n    return loader;\n  }\n\n  static async loadFromURL(url: Platform.DevToolsPath.UrlString, client: Client): Promise<TimelineLoader> {\n    const loader = new TimelineLoader(client);\n    const stream = new Common.StringOutputStream.StringOutputStream();\n    await client.loadingStarted();\n\n    const allowRemoteFilePaths =\n        Common.Settings.Settings.instance().moduleSetting('network.enable-remote-file-loading').get();\n    Host.ResourceLoader.loadAsStream(url, null, stream, finishedCallback, allowRemoteFilePaths);\n\n    async function finishedCallback(\n        success: boolean, _headers: {[x: string]: string},\n        errorDescription: Host.ResourceLoader.LoadErrorDescription): Promise<void> {\n      if (!success) {\n        return loader.reportErrorAndCancelLoading(errorDescription.message);\n      }\n      const txt = stream.data();\n      const trace = JSON.parse(txt);\n      if (Array.isArray(trace.nodes)) {\n        loader.state = State.LoadingCPUProfileFormat;\n        loader.buffer = txt;\n        await loader.close();\n        return;\n      }\n      const events = Array.isArray(trace.traceEvents) ? trace.traceEvents : trace;\n      void loader.addEvents(events);\n    }\n\n    return loader;\n  }\n\n  async addEvents(events: SDK.TracingManager.EventPayload[]): Promise<void> {\n    await this.client?.loadingStarted();\n    const eventsPerChunk = 15_000;\n    for (let i = 0; i < events.length; i += eventsPerChunk) {\n      const chunk = events.slice(i, i + eventsPerChunk);\n      (this.tracingModel as SDK.TracingModel.TracingModel).addEvents(chunk);\n      await this.client?.loadingProgress((i + chunk.length) / events.length);\n      await new Promise(r => window.setTimeout(r));  // Yield event loop to paint.\n    }\n    void this.close();\n  }\n\n  async cancel(): Promise<void> {\n    this.tracingModel = null;\n    if (this.client) {\n      await this.client.loadingComplete(null, null);\n      this.client = null;\n    }\n    if (this.canceledCallback) {\n      this.canceledCallback();\n    }\n  }\n\n  async write(chunk: string): Promise<void> {\n    if (!this.client) {\n      return Promise.resolve();\n    }\n    this.loadedBytes += chunk.length;\n    if (this.firstRawChunk) {\n      await this.client.loadingStarted();\n      // Ensure we paint the loading dialog before continuing\n      await new Promise(resolve => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n    } else {\n      let progress = undefined;\n      if (this.totalSize) {\n        progress = this.loadedBytes / this.totalSize;\n        // For compressed traces, we can't provide a definite progress percentage. So, just keep it moving.\n        progress = progress > 1 ? progress - Math.floor(progress) : progress;\n      }\n      await this.client.loadingProgress(progress);\n    }\n    this.firstRawChunk = false;\n\n    if (this.state === State.Initial) {\n      if (chunk.match(/^{(\\s)*\"nodes\":(\\s)*\\[/)) {\n        this.state = State.LoadingCPUProfileFormat;\n      } else if (chunk[0] === '{') {\n        this.state = State.LookingForEvents;\n      } else if (chunk[0] === '[') {\n        this.state = State.ReadingEvents;\n      } else {\n        this.reportErrorAndCancelLoading(i18nString(UIStrings.malformedTimelineDataUnknownJson));\n        return Promise.resolve();\n      }\n    }\n\n    if (this.state === State.LoadingCPUProfileFormat) {\n      this.buffer += chunk;\n      return Promise.resolve();\n    }\n\n    if (this.state === State.LookingForEvents) {\n      const objectName = '\"traceEvents\":';\n      const startPos = this.buffer.length - objectName.length;\n      this.buffer += chunk;\n      const pos = this.buffer.indexOf(objectName, startPos);\n      if (pos === -1) {\n        return Promise.resolve();\n      }\n      chunk = this.buffer.slice(pos + objectName.length);\n      this.state = State.ReadingEvents;\n    }\n\n    if (this.state !== State.ReadingEvents) {\n      return Promise.resolve();\n    }\n    // This is where we actually do the loading of events from JSON: the JSON\n    // Tokenizer writes the JSON to a buffer, and then as a callback the\n    // writeBalancedJSON method below is invoked. It then parses this chunk\n    // of JSON as a set of events, and adds them to the TracingModel via\n    // addEvents()\n    if (this.jsonTokenizer.write(chunk)) {\n      return Promise.resolve();\n    }\n    this.state = State.SkippingTail;\n    if (this.firstChunk) {\n      this.reportErrorAndCancelLoading(i18nString(UIStrings.malformedTimelineInputWrongJson));\n    }\n    return Promise.resolve();\n  }\n\n  private writeBalancedJSON(data: string): void {\n    let json: string = data + ']';\n\n    if (!this.firstChunk) {\n      const commaIndex = json.indexOf(',');\n      if (commaIndex !== -1) {\n        json = json.slice(commaIndex + 1);\n      }\n      json = '[' + json;\n    }\n\n    let items;\n    try {\n      items = (JSON.parse(json) as SDK.TracingManager.EventPayload[]);\n    } catch (e) {\n      this.reportErrorAndCancelLoading(i18nString(UIStrings.malformedTimelineDataS, {PH1: e.toString()}));\n      return;\n    }\n\n    if (this.firstChunk) {\n      this.firstChunk = false;\n      if (this.looksLikeAppVersion(items[0])) {\n        this.reportErrorAndCancelLoading(i18nString(UIStrings.legacyTimelineFormatIsNot));\n        return;\n      }\n    }\n\n    try {\n      (this.tracingModel as SDK.TracingModel.TracingModel).addEvents(items);\n    } catch (e) {\n      this.reportErrorAndCancelLoading(i18nString(UIStrings.malformedTimelineDataS, {PH1: e.toString()}));\n    }\n  }\n\n  private reportErrorAndCancelLoading(message?: string): void {\n    if (message) {\n      Common.Console.Console.instance().error(message);\n    }\n    void this.cancel();\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private looksLikeAppVersion(item: any): boolean {\n    return typeof item === 'string' && item.indexOf('Chrome') !== -1;\n  }\n\n  async close(): Promise<void> {\n    if (!this.client) {\n      return;\n    }\n    await this.client.processingStarted();\n    await this.finalizeTrace();\n  }\n\n  private async finalizeTrace(): Promise<void> {\n    if (this.state === State.LoadingCPUProfileFormat) {\n      this.parseCPUProfileFormat(this.buffer);\n      this.buffer = '';\n    }\n    (this.tracingModel as SDK.TracingModel.TracingModel).tracingComplete();\n    await (this.client as Client).loadingComplete(this.tracingModel, this.filter);\n  }\n\n  private parseCPUProfileFormat(text: string): void {\n    let traceEvents;\n    try {\n      const profile = JSON.parse(text);\n      traceEvents = TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.createFakeTraceFromCpuProfile(\n          profile, /* tid */ 1, /* injectPageEvent */ true);\n    } catch (e) {\n      this.reportErrorAndCancelLoading(i18nString(UIStrings.malformedCpuProfileFormat));\n      return;\n    }\n    this.filter = TimelineLoader.getCpuProfileFilter();\n    (this.tracingModel as SDK.TracingModel.TracingModel).addEvents(traceEvents);\n  }\n}\n\nexport const TransferChunkLengthBytes = 5000000;\n\nexport interface Client {\n  loadingStarted(): Promise<void>;\n\n  loadingProgress(progress?: number): Promise<void>;\n\n  processingStarted(): Promise<void>;\n\n  loadingComplete(\n      tracingModel: SDK.TracingModel.TracingModel|null,\n      exclusiveFilter: TimelineModel.TimelineModelFilter.TimelineModelFilter|null): Promise<void>;\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum State {\n  Initial = 'Initial',\n  LookingForEvents = 'LookingForEvents',\n  ReadingEvents = 'ReadingEvents',\n  SkippingTail = 'SkippingTail',\n  LoadingCPUProfileFormat = 'LoadingCPUProfileFormat',\n}\n"]}