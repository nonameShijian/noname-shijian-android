{"version":3,"file":"Script.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Script.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\n\nimport {\n  Location,\n  type DebuggerModel,\n  COND_BREAKPOINT_SOURCE_URL,\n  LOGPOINT_SOURCE_URL,\n  Events,\n} from './DebuggerModel.js';\nimport {type FrameAssociated} from './FrameAssociated.js';\nimport {type PageResourceLoadInitiator} from './PageResourceLoader.js';\nimport {ResourceTreeModel} from './ResourceTreeModel.js';\nimport {type ExecutionContext} from './RuntimeModel.js';\nimport {type Target} from './Target.js';\n\nconst UIStrings = {\n  /**\n   *@description Error message for when a script can't be loaded which had been previously\n   */\n  scriptRemovedOrDeleted: 'Script removed or deleted.',\n  /**\n   *@description Error message when failing to load a script source text\n   */\n  unableToFetchScriptSource: 'Unable to fetch script source.',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/Script.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet scriptCacheInstance: {\n  cache: Map<string, WeakRef<Promise<TextUtils.ContentProvider.DeferredContent>>>,\n  registry: FinalizationRegistry<string>,\n}|null = null;\n\nexport class Script implements TextUtils.ContentProvider.ContentProvider, FrameAssociated {\n  debuggerModel: DebuggerModel;\n  scriptId: Protocol.Runtime.ScriptId;\n  sourceURL: Platform.DevToolsPath.UrlString;\n  lineOffset: number;\n  columnOffset: number;\n  endLine: number;\n  endColumn: number;\n  executionContextId: number;\n  hash: string;\n  readonly #isContentScriptInternal: boolean;\n  readonly #isLiveEditInternal: boolean;\n  sourceMapURL?: string;\n  debugSymbols: Protocol.Debugger.DebugSymbols|null;\n  hasSourceURL: boolean;\n  contentLength: number;\n  originStackTrace: Protocol.Runtime.StackTrace|null;\n  readonly #codeOffsetInternal: number|null;\n  readonly #language: string|null;\n  #contentPromise: Promise<TextUtils.ContentProvider.DeferredContent>|null;\n  readonly #embedderNameInternal: Platform.DevToolsPath.UrlString|null;\n  readonly isModule: boolean|null;\n  constructor(\n      debuggerModel: DebuggerModel, scriptId: Protocol.Runtime.ScriptId, sourceURL: Platform.DevToolsPath.UrlString,\n      startLine: number, startColumn: number, endLine: number, endColumn: number, executionContextId: number,\n      hash: string, isContentScript: boolean, isLiveEdit: boolean, sourceMapURL: string|undefined,\n      hasSourceURL: boolean, length: number, isModule: boolean|null, originStackTrace: Protocol.Runtime.StackTrace|null,\n      codeOffset: number|null, scriptLanguage: string|null, debugSymbols: Protocol.Debugger.DebugSymbols|null,\n      embedderName: Platform.DevToolsPath.UrlString|null) {\n    this.debuggerModel = debuggerModel;\n    this.scriptId = scriptId;\n    this.sourceURL = sourceURL;\n    this.lineOffset = startLine;\n    this.columnOffset = startColumn;\n    this.endLine = endLine;\n    this.endColumn = endColumn;\n    this.isModule = isModule;\n\n    this.executionContextId = executionContextId;\n    this.hash = hash;\n    this.#isContentScriptInternal = isContentScript;\n    this.#isLiveEditInternal = isLiveEdit;\n    this.sourceMapURL = sourceMapURL;\n    this.debugSymbols = debugSymbols;\n    this.hasSourceURL = hasSourceURL;\n    this.contentLength = length;\n    this.originStackTrace = originStackTrace;\n    this.#codeOffsetInternal = codeOffset;\n    this.#language = scriptLanguage;\n    this.#contentPromise = null;\n    this.#embedderNameInternal = embedderName;\n  }\n\n  embedderName(): Platform.DevToolsPath.UrlString|null {\n    return this.#embedderNameInternal;\n  }\n\n  target(): Target {\n    return this.debuggerModel.target();\n  }\n\n  private static trimSourceURLComment(source: string): string {\n    let sourceURLIndex = source.lastIndexOf('//# sourceURL=');\n    if (sourceURLIndex === -1) {\n      sourceURLIndex = source.lastIndexOf('//@ sourceURL=');\n      if (sourceURLIndex === -1) {\n        return source;\n      }\n    }\n    const sourceURLLineIndex = source.lastIndexOf('\\n', sourceURLIndex);\n    if (sourceURLLineIndex === -1) {\n      return source;\n    }\n    const sourceURLLine = source.substr(sourceURLLineIndex + 1);\n    if (!sourceURLLine.match(sourceURLRegex)) {\n      return source;\n    }\n    return source.substr(0, sourceURLLineIndex);\n  }\n\n  isContentScript(): boolean {\n    return this.#isContentScriptInternal;\n  }\n\n  codeOffset(): number|null {\n    return this.#codeOffsetInternal;\n  }\n\n  isJavaScript(): boolean {\n    return this.#language === Protocol.Debugger.ScriptLanguage.JavaScript;\n  }\n\n  isWasm(): boolean {\n    return this.#language === Protocol.Debugger.ScriptLanguage.WebAssembly;\n  }\n\n  scriptLanguage(): string|null {\n    return this.#language;\n  }\n\n  executionContext(): ExecutionContext|null {\n    return this.debuggerModel.runtimeModel().executionContext(this.executionContextId);\n  }\n\n  isLiveEdit(): boolean {\n    return this.#isLiveEditInternal;\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.sourceURL;\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    return Common.ResourceType.resourceTypes.Script;\n  }\n\n  private async loadTextContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    const result = await this.debuggerModel.target().debuggerAgent().invoke_getScriptSource({scriptId: this.scriptId});\n    if (result.getError()) {\n      throw new Error(result.getError());\n    }\n    const {scriptSource, bytecode} = result;\n    if (bytecode) {\n      return {content: bytecode, isEncoded: true};\n    }\n    let content: string = scriptSource || '';\n    if (this.hasSourceURL && this.sourceURL.startsWith('snippet://')) {\n      // TODO(crbug.com/1330846): Find a better way to establish the snippet automapping binding then adding\n      // a sourceURL comment before evaluation and removing it here.\n      content = Script.trimSourceURLComment(content);\n    }\n    return {content, isEncoded: false};\n  }\n\n  private async loadWasmContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    if (!this.isWasm()) {\n      throw new Error('Not a wasm script');\n    }\n    const result =\n        await this.debuggerModel.target().debuggerAgent().invoke_disassembleWasmModule({scriptId: this.scriptId});\n\n    if (result.getError()) {\n      // Fall through to text content loading if v8-based disassembly fails. This is to ensure backwards compatibility with\n      // older v8 versions;\n      return this.loadTextContent();\n    }\n\n    const {streamId, functionBodyOffsets, chunk: {lines, bytecodeOffsets}} = result;\n    const lineChunks = [];\n    const bytecodeOffsetChunks = [];\n    let totalLength = lines.reduce<number>((sum, line) => sum + line.length + 1, 0);\n    const truncationMessage = '<truncated>';\n    // This is a magic number used in code mirror which, when exceeded, sends it into an infinite loop.\n    const cmSizeLimit = 1000000000 - truncationMessage.length;\n    if (streamId) {\n      while (true) {\n        const result = await this.debuggerModel.target().debuggerAgent().invoke_nextWasmDisassemblyChunk({streamId});\n\n        if (result.getError()) {\n          throw new Error(result.getError());\n        }\n\n        const {chunk: {lines: linesChunk, bytecodeOffsets: bytecodeOffsetsChunk}} = result;\n        totalLength += linesChunk.reduce<number>((sum, line) => sum + line.length + 1, 0);\n        if (linesChunk.length === 0) {\n          break;\n        }\n        if (totalLength >= cmSizeLimit) {\n          lineChunks.push([truncationMessage]);\n          bytecodeOffsetChunks.push([0]);\n          break;\n        }\n\n        lineChunks.push(linesChunk);\n        bytecodeOffsetChunks.push(bytecodeOffsetsChunk);\n      }\n    }\n    const functionBodyRanges: Array<{start: number, end: number}> = [];\n    // functionBodyOffsets contains a sequence of pairs of start and end offsets\n    for (let i = 0; i < functionBodyOffsets.length; i += 2) {\n      functionBodyRanges.push({start: functionBodyOffsets[i], end: functionBodyOffsets[i + 1]});\n    }\n    const wasmDisassemblyInfo = new Common.WasmDisassembly.WasmDisassembly(\n        lines.concat(...lineChunks), bytecodeOffsets.concat(...bytecodeOffsetChunks), functionBodyRanges);\n    return {content: '', isEncoded: false, wasmDisassemblyInfo};\n  }\n\n  requestContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    if (!this.#contentPromise) {\n      const fileSizeToCache = 65535;  // We won't bother cacheing files under 64K\n      if (this.hash && !this.#isLiveEditInternal && this.contentLength > fileSizeToCache) {\n        // For large files that aren't live edits and have a hash, we keep a content-addressed cache\n        // so we don't need to load multiple copies or disassemble wasm modules multiple times.\n        if (!scriptCacheInstance) {\n          // Initialize script cache singleton. Add a finalizer for removing keys from the map.\n          scriptCacheInstance = {\n            cache: new Map(),\n            registry: new FinalizationRegistry(hashCode => scriptCacheInstance?.cache.delete(hashCode)),\n          };\n        }\n        // This key should be sufficient to identify scripts that are known to have the same content.\n        const fullHash = [\n          this.#language,\n          this.contentLength,\n          this.lineOffset,\n          this.columnOffset,\n          this.endLine,\n          this.endColumn,\n          this.#codeOffsetInternal,\n          this.hash,\n        ].join(':');\n        const cachedContentPromise = scriptCacheInstance.cache.get(fullHash)?.deref();\n        if (cachedContentPromise) {\n          this.#contentPromise = cachedContentPromise;\n        } else {\n          this.#contentPromise = this.requestContentInternal();\n          scriptCacheInstance.cache.set(fullHash, new WeakRef(this.#contentPromise));\n          scriptCacheInstance.registry.register(this.#contentPromise, fullHash);\n        }\n      } else {\n        this.#contentPromise = this.requestContentInternal();\n      }\n    }\n    return this.#contentPromise;\n  }\n\n  private async requestContentInternal(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    if (!this.scriptId) {\n      return {content: null, error: i18nString(UIStrings.scriptRemovedOrDeleted), isEncoded: false};\n    }\n    try {\n      return this.isWasm() ? await this.loadWasmContent() : await this.loadTextContent();\n    } catch (err) {\n      // TODO(bmeurer): Propagate errors as exceptions / rejections.\n      return {content: null, error: i18nString(UIStrings.unableToFetchScriptSource), isEncoded: false};\n    }\n  }\n\n  async getWasmBytecode(): Promise<ArrayBuffer> {\n    const base64 = await this.debuggerModel.target().debuggerAgent().invoke_getWasmBytecode({scriptId: this.scriptId});\n    const response = await fetch(`data:application/wasm;base64,${base64.bytecode}`);\n    return response.arrayBuffer();\n  }\n\n  originalContentProvider(): TextUtils.ContentProvider.ContentProvider {\n    return new TextUtils.StaticContentProvider.StaticContentProvider(\n        this.contentURL(), this.contentType(), () => this.requestContent());\n  }\n\n  async searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    if (!this.scriptId) {\n      return [];\n    }\n\n    const matches = await this.debuggerModel.target().debuggerAgent().invoke_searchInContent(\n        {scriptId: this.scriptId, query, caseSensitive, isRegex});\n    return (matches.result || [])\n        .map(match => new TextUtils.ContentProvider.SearchMatch(match.lineNumber, match.lineContent));\n  }\n\n  private appendSourceURLCommentIfNeeded(source: string): string {\n    if (!this.hasSourceURL) {\n      return source;\n    }\n    return source + '\\n //# sourceURL=' + this.sourceURL;\n  }\n\n  async editSource(newSource: string): Promise<{\n    changed: boolean,\n    status: Protocol.Debugger.SetScriptSourceResponseStatus,\n    exceptionDetails?: Protocol.Runtime.ExceptionDetails,\n  }> {\n    newSource = Script.trimSourceURLComment(newSource);\n    // We append correct #sourceURL to script for consistency only. It's not actually needed for things to work correctly.\n    newSource = this.appendSourceURLCommentIfNeeded(newSource);\n\n    const {content: oldSource} = await this.requestContent();\n    if (oldSource === newSource) {\n      return {changed: false, status: Protocol.Debugger.SetScriptSourceResponseStatus.Ok};\n    }\n    const response = await this.debuggerModel.target().debuggerAgent().invoke_setScriptSource(\n        {scriptId: this.scriptId, scriptSource: newSource, allowTopFrameEditing: true});\n    if (response.getError()) {\n      // Something went seriously wrong, like the V8 inspector no longer knowing about this script without\n      // shutting down the Debugger agent etc.\n      throw new Error(`Script#editSource failed for script with id ${this.scriptId}: ${response.getError()}`);\n    }\n\n    if (!response.getError() && response.status === Protocol.Debugger.SetScriptSourceResponseStatus.Ok) {\n      this.#contentPromise = Promise.resolve({content: newSource, isEncoded: false});\n    }\n\n    this.debuggerModel.dispatchEventToListeners(Events.ScriptSourceWasEdited, {script: this, status: response.status});\n    return {changed: true, status: response.status, exceptionDetails: response.exceptionDetails};\n  }\n\n  rawLocation(lineNumber: number, columnNumber: number): Location|null {\n    if (this.containsLocation(lineNumber, columnNumber)) {\n      return new Location(this.debuggerModel, this.scriptId, lineNumber, columnNumber);\n    }\n    return null;\n  }\n\n  isInlineScript(): boolean {\n    const startsAtZero = !this.lineOffset && !this.columnOffset;\n    return !this.isWasm() && Boolean(this.sourceURL) && !startsAtZero;\n  }\n\n  isAnonymousScript(): boolean {\n    return !this.sourceURL;\n  }\n\n  async setBlackboxedRanges(positions: Protocol.Debugger.ScriptPosition[]): Promise<boolean> {\n    const response = await this.debuggerModel.target().debuggerAgent().invoke_setBlackboxedRanges(\n        {scriptId: this.scriptId, positions});\n    return !response.getError();\n  }\n\n  containsLocation(lineNumber: number, columnNumber: number): boolean {\n    const afterStart =\n        (lineNumber === this.lineOffset && columnNumber >= this.columnOffset) || lineNumber > this.lineOffset;\n    const beforeEnd = lineNumber < this.endLine || (lineNumber === this.endLine && columnNumber <= this.endColumn);\n    return afterStart && beforeEnd;\n  }\n\n  get frameId(): Protocol.Page.FrameId {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-expect-error\n    if (typeof this[frameIdSymbol] !== 'string') {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // @ts-expect-error\n      this[frameIdSymbol] = frameIdForScript(this);\n    }\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-expect-error\n    return this[frameIdSymbol];\n  }\n\n  /**\n   * @returns true, iff this script originates from a breakpoint/logpoint condition\n   */\n  get isBreakpointCondition(): boolean {\n    return [COND_BREAKPOINT_SOURCE_URL, LOGPOINT_SOURCE_URL].includes(this.sourceURL);\n  }\n\n  createPageResourceLoadInitiator(): PageResourceLoadInitiator {\n    return {target: this.target(), frameId: this.frameId, initiatorUrl: this.embedderName()};\n  }\n\n  /**\n   * Translates the `rawLocation` from line and column number in terms of what V8 understands\n   * to a script relative location. Specifically this means that for inline `<script>`'s\n   * without a `//# sourceURL=` annotation, the line and column offset of the script\n   * content is subtracted to make the location within the script independent of the\n   * location of the `<script>` tag within the surrounding document.\n   *\n   * @param rawLocation the raw location in terms of what V8 understands.\n   * @returns the script relative line and column number for the {@link rawLocation}.\n   */\n  rawLocationToRelativeLocation(rawLocation: {lineNumber: number, columnNumber: number}):\n      {lineNumber: number, columnNumber: number};\n  rawLocationToRelativeLocation(rawLocation: {lineNumber: number, columnNumber: number|undefined}):\n      {lineNumber: number, columnNumber: number|undefined};\n  rawLocationToRelativeLocation(rawLocation: {lineNumber: number, columnNumber: number|undefined}):\n      {lineNumber: number, columnNumber: number|undefined} {\n    let {lineNumber, columnNumber} = rawLocation;\n    if (!this.hasSourceURL && this.isInlineScript()) {\n      lineNumber -= this.lineOffset;\n      if (lineNumber === 0 && columnNumber !== undefined) {\n        columnNumber -= this.columnOffset;\n      }\n    }\n    return {lineNumber, columnNumber};\n  }\n\n  /**\n   * Translates the `relativeLocation` from script relative line and column number to\n   * the raw location in terms of what V8 understands. Specifically this means that for\n   * inline `<script>`'s without a `//# sourceURL=` annotation, the line and column offset\n   * of the script content is added to make the location relative to the start of the\n   * surrounding document.\n   *\n   * @param relativeLocation the script relative location.\n   * @returns the raw location in terms of what V8 understands for the {@link relativeLocation}.\n   */\n  relativeLocationToRawLocation(relativeLocation: {lineNumber: number, columnNumber: number}):\n      {lineNumber: number, columnNumber: number};\n  relativeLocationToRawLocation(relativeLocation: {lineNumber: number, columnNumber: number|undefined}):\n      {lineNumber: number, columnNumber: number|undefined};\n  relativeLocationToRawLocation(relativeLocation: {lineNumber: number, columnNumber: number|undefined}):\n      {lineNumber: number, columnNumber: number|undefined} {\n    let {lineNumber, columnNumber} = relativeLocation;\n    if (!this.hasSourceURL && this.isInlineScript()) {\n      if (lineNumber === 0 && columnNumber !== undefined) {\n        columnNumber += this.columnOffset;\n      }\n      lineNumber += this.lineOffset;\n    }\n    return {lineNumber, columnNumber};\n  }\n}\n\nconst frameIdSymbol = Symbol('frameid');\n\nfunction frameIdForScript(script: Script): Protocol.Page.FrameId|null {\n  const executionContext = script.executionContext();\n  if (executionContext) {\n    return executionContext.frameId || null;\n  }\n  // This is to overcome compilation cache which doesn't get reset.\n  const resourceTreeModel = script.debuggerModel.target().model(ResourceTreeModel);\n  if (!resourceTreeModel || !resourceTreeModel.mainFrame) {\n    return null;\n  }\n  return resourceTreeModel.mainFrame.id;\n}\n\nexport const sourceURLRegex = /^[\\040\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/;\n"]}