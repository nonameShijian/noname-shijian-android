{"version":3,"file":"FrameworkIgnoreListSettingsTab.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/FrameworkIgnoreListSettingsTab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport frameworkIgnoreListSettingsTabStyles from './frameworkIgnoreListSettingsTab.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Header text content in Framework Ignore List Settings Tab of the Settings\n   */\n  frameworkIgnoreList: 'Framework Ignore List',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  debuggerWillSkipThroughThe: 'Debugger will skip through the scripts and will not stop on exceptions thrown by them.',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  ignoreListContentScripts: 'Content scripts injected by extensions',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  automaticallyIgnoreListKnownThirdPartyScripts: 'Known third-party scripts from source maps',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  enableIgnoreListing: 'Enable Ignore Listing',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  enableIgnoreListingTooltip: 'Uncheck to disable all ignore listing',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  generalExclusionRules: 'General exclusion rules:',\n  /**\n   *@description Text in Framework Ignore List Settings Tab of the Settings\n   */\n  customExclusionRules: 'Custom exclusion rules:',\n  /**\n   *@description Text of the add pattern button in Framework Ignore List Settings Tab of the Settings\n   */\n  addPattern: 'Add pattern...',\n  /**\n   *@description Aria accessible name in Framework Ignore List Settings Tab of the Settings\n   */\n  addFilenamePattern: 'Add filename pattern',\n  /**\n   *@description Pattern title in Framework Ignore List Settings Tab of the Settings\n   *@example {ad.*?} PH1\n   */\n  ignoreScriptsWhoseNamesMatchS: 'Ignore scripts whose names match \\'\\'{PH1}\\'\\'',\n  /**\n   *@description Aria accessible name in Framework Ignore List Settings Tab of the Settings. It labels the input\n   * field used to add new or edit existing regular expressions that match file names to ignore in the debugger.\n   */\n  pattern: 'Add Pattern',\n  /**\n   *@description Error message in Framework Ignore List settings pane that declares pattern must not be empty\n   */\n  patternCannotBeEmpty: 'Pattern cannot be empty',\n  /**\n   *@description Error message in Framework Ignore List settings pane that declares pattern already exits\n   */\n  patternAlreadyExists: 'Pattern already exists',\n  /**\n   *@description Error message in Framework Ignore List settings pane that declares pattern must be a valid regular expression\n   */\n  patternMustBeAValidRegular: 'Pattern must be a valid regular expression',\n  /**\n   *@description Text that is usually a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/FrameworkIgnoreListSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet frameworkIgnoreListSettingsTabInstance: FrameworkIgnoreListSettingsTab;\nexport class FrameworkIgnoreListSettingsTab extends UI.Widget.VBox implements\n    UI.ListWidget.Delegate<Common.Settings.RegExpSettingItem> {\n  private readonly list: UI.ListWidget.ListWidget<Common.Settings.RegExpSettingItem>;\n  private readonly setting: Common.Settings.RegExpSetting;\n  private editor?: UI.ListWidget.Editor<Common.Settings.RegExpSettingItem>;\n\n  constructor() {\n    super(true);\n\n    const header = this.contentElement.createChild('div', 'header');\n    header.textContent = i18nString(UIStrings.frameworkIgnoreList);\n    UI.ARIAUtils.markAsHeading(header, 1);\n\n    this.contentElement.createChild('div', 'intro').textContent = i18nString(UIStrings.debuggerWillSkipThroughThe);\n\n    const enabledSetting =\n        Common.Settings.Settings.instance().moduleSetting('enableIgnoreListing') as Common.Settings.Setting<boolean>;\n    const enableIgnoreListing = this.contentElement.createChild('div', 'ignore-list-global-enable');\n    enableIgnoreListing.appendChild(\n        UI.SettingsUI.createSettingCheckbox(i18nString(UIStrings.enableIgnoreListing), enabledSetting, true));\n    UI.Tooltip.Tooltip.install(enableIgnoreListing, i18nString(UIStrings.enableIgnoreListingTooltip));\n\n    const ignoreListOptions = this.contentElement.createChild('div', 'ignore-list-options');\n\n    ignoreListOptions.createChild('div', 'ignore-list-option-group').textContent =\n        i18nString(UIStrings.generalExclusionRules);\n\n    const ignoreListContentScripts = ignoreListOptions.createChild('div', 'ignore-list-option');\n    ignoreListContentScripts.appendChild(UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.ignoreListContentScripts),\n        Common.Settings.Settings.instance().moduleSetting('skipContentScripts'), true));\n\n    const automaticallyIgnoreList = ignoreListOptions.createChild('div', 'ignore-list-option');\n    automaticallyIgnoreList.appendChild(UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.automaticallyIgnoreListKnownThirdPartyScripts),\n        Common.Settings.Settings.instance().moduleSetting('automaticallyIgnoreListKnownThirdPartyScripts'), true));\n\n    const automaticallyIgnoreLink = UI.XLink.XLink.create('http://goo.gle/skip-third-party');\n    automaticallyIgnoreLink.textContent = '';\n    automaticallyIgnoreLink.setAttribute('aria-label', i18nString(UIStrings.learnMore));\n\n    const automaticallyIgnoreLinkIcon = new IconButton.Icon.Icon();\n    automaticallyIgnoreLinkIcon.data = {iconName: 'help', color: 'var(--icon-default)', width: '16px', height: '16px'};\n    automaticallyIgnoreLink.prepend(automaticallyIgnoreLinkIcon);\n    automaticallyIgnoreList.appendChild(automaticallyIgnoreLink);\n\n    ignoreListOptions.createChild('div', 'ignore-list-option-group').textContent =\n        i18nString(UIStrings.customExclusionRules);\n\n    this.list = new UI.ListWidget.ListWidget(this);\n    this.list.element.classList.add('ignore-list');\n\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('ignore-list-empty');\n    this.list.setEmptyPlaceholder(placeholder);\n    this.list.show(ignoreListOptions);\n    const addPatternButton =\n        UI.UIUtils.createTextButton(i18nString(UIStrings.addPattern), this.addButtonClicked.bind(this), 'add-button');\n    UI.ARIAUtils.setLabel(addPatternButton, i18nString(UIStrings.addFilenamePattern));\n    ignoreListOptions.appendChild(addPatternButton);\n    this.setting =\n        Common.Settings.Settings.instance().moduleSetting('skipStackFramesPattern') as Common.Settings.RegExpSetting;\n    this.setting.addChangeListener(this.settingUpdated, this);\n\n    this.setDefaultFocusedElement(addPatternButton);\n\n    enabledSetting.addChangeListener(enabledChanged);\n    enabledChanged();\n\n    function enabledChanged(): void {\n      const enabled = enabledSetting.get();\n      if (enabled) {\n        ignoreListOptions.classList.remove('ignore-listing-disabled');\n      } else {\n        ignoreListOptions.classList.add('ignore-listing-disabled');\n      }\n    }\n  }\n\n  static instance(opts = {forceNew: null}): FrameworkIgnoreListSettingsTab {\n    const {forceNew} = opts;\n    if (!frameworkIgnoreListSettingsTabInstance || forceNew) {\n      frameworkIgnoreListSettingsTabInstance = new FrameworkIgnoreListSettingsTab();\n    }\n\n    return frameworkIgnoreListSettingsTabInstance;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.list.registerCSSFiles([frameworkIgnoreListSettingsTabStyles]);\n    this.registerCSSFiles([frameworkIgnoreListSettingsTabStyles]);\n    this.settingUpdated();\n  }\n\n  private settingUpdated(): void {\n    this.list.clear();\n    const patterns = this.setting.getAsArray();\n    for (let i = 0; i < patterns.length; ++i) {\n      this.list.appendItem(patterns[i], true);\n    }\n  }\n\n  private addButtonClicked(): void {\n    this.list.addNewItem(this.setting.getAsArray().length, {pattern: '', disabled: false});\n  }\n\n  renderItem(item: Common.Settings.RegExpSettingItem, _editable: boolean): Element {\n    const element = document.createElement('div');\n\n    const listSetting = this.setting;\n\n    const checkbox = UI.UIUtils.CheckboxLabel.create(item.pattern, !item.disabled);\n    const helpText = i18nString(UIStrings.ignoreScriptsWhoseNamesMatchS, {PH1: item.pattern});\n    UI.Tooltip.Tooltip.install(checkbox, helpText);\n    checkbox.checkboxElement.ariaLabel = helpText;\n    checkbox.checkboxElement.addEventListener('change', inputChanged, false);\n    element.appendChild(checkbox);\n    element.classList.add('ignore-list-item');\n\n    return element;\n\n    function inputChanged(): void {\n      const disabled = !checkbox.checkboxElement.checked;\n      if (item.disabled !== disabled) {\n        item.disabled = disabled;\n        item.disabledForUrl = undefined;\n        // Send changed event\n        listSetting.setAsArray(listSetting.getAsArray());\n      }\n    }\n  }\n\n  removeItemRequested(item: Common.Settings.RegExpSettingItem, index: number): void {\n    const patterns = this.setting.getAsArray();\n    patterns.splice(index, 1);\n    this.setting.setAsArray(patterns);\n  }\n\n  commitEdit(\n      item: Common.Settings.RegExpSettingItem, editor: UI.ListWidget.Editor<Common.Settings.RegExpSettingItem>,\n      isNew: boolean): void {\n    item.pattern = editor.control('pattern').value.trim();\n\n    const list = this.setting.getAsArray();\n    if (isNew) {\n      list.push(item);\n    }\n    this.setting.setAsArray(list);\n  }\n\n  beginEdit(item: Common.Settings.RegExpSettingItem): UI.ListWidget.Editor<Common.Settings.RegExpSettingItem> {\n    const editor = this.createEditor();\n    editor.control('pattern').value = item.pattern;\n    return editor;\n  }\n\n  private createEditor(): UI.ListWidget.Editor<Common.Settings.RegExpSettingItem> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<Common.Settings.RegExpSettingItem>();\n    this.editor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'ignore-list-edit-row');\n    titles.createChild('div', 'ignore-list-pattern').textContent = i18nString(UIStrings.pattern);\n\n    const fields = content.createChild('div', 'ignore-list-edit-row');\n    const pattern = editor.createInput('pattern', 'text', '/framework\\\\.js$', patternValidator.bind(this));\n    UI.ARIAUtils.setLabel(pattern, i18nString(UIStrings.pattern));\n    fields.createChild('div', 'ignore-list-pattern').appendChild(pattern);\n\n    return editor;\n\n    function patternValidator(\n        this: FrameworkIgnoreListSettingsTab, item: Common.Settings.RegExpSettingItem, index: number,\n        input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      const pattern = input.value.trim();\n      const patterns = this.setting.getAsArray();\n\n      if (!pattern.length) {\n        return {valid: false, errorMessage: i18nString(UIStrings.patternCannotBeEmpty)};\n      }\n\n      for (let i = 0; i < patterns.length; ++i) {\n        if (i !== index && patterns[i].pattern === pattern) {\n          return {valid: false, errorMessage: i18nString(UIStrings.patternAlreadyExists)};\n        }\n      }\n\n      let regex;\n      try {\n        regex = new RegExp(pattern);\n      } catch (e) {\n      }\n      if (!regex) {\n        return {valid: false, errorMessage: i18nString(UIStrings.patternMustBeAValidRegular)};\n      }\n      return {valid: true, errorMessage: undefined};\n    }\n  }\n}\n"]}