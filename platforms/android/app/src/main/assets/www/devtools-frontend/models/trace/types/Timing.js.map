{"version":3,"file":"Timing.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/types/Timing.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,oDAAoD;AAEpD,MAAM,eAAe;IACV,gBAAgB,CAAqB;CAC/C;AAED,gEAAgE;AAChE,MAAM,UAAU,YAAY,CAAC,KAAa;IACxC,OAAO,KAAqB,CAAC;AAC/B,CAAC;AAED,MAAM,eAAe;IACV,gBAAgB,CAAqB;CAC/C;AAED,gEAAgE;AAChE,MAAM,UAAU,YAAY,CAAC,KAAa;IACxC,OAAO,KAAqB,CAAC;AAC/B,CAAC;AAED,MAAM,UAAU;IACL,WAAW,CAAqB;CAC1C;AAED,gEAAgE;AAChE,MAAM,UAAU,OAAO,CAAC,KAAa;IACnC,OAAO,KAAgB,CAAC;AAC1B,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable no-unused-private-class-members */\n\nclass MicroSecondsTag {\n  readonly #microSecondsTag: (symbol|undefined);\n}\nexport type MicroSeconds = number&MicroSecondsTag;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function MicroSeconds(value: number): MicroSeconds {\n  return value as MicroSeconds;\n}\n\nclass MilliSecondsTag {\n  readonly #milliSecondsTag: (symbol|undefined);\n}\nexport type MilliSeconds = number&MilliSecondsTag;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function MilliSeconds(value: number): MilliSeconds {\n  return value as MilliSeconds;\n}\n\nclass SecondsTag {\n  readonly #secondsTag: (symbol|undefined);\n}\nexport type Seconds = number&SecondsTag;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function Seconds(value: number): Seconds {\n  return value as Seconds;\n}\n\nexport const enum TimeUnit {\n  MICROSECONDS = 0,\n  MILLISECONDS = 1,\n  SECONDS = 2,\n  MINUTES = 3,\n}\n\n// Other types.\n\nexport interface TraceWindow {\n  min: MicroSeconds;\n  max: MicroSeconds;\n  range: MicroSeconds;\n}\n"]}