{"version":3,"file":"DebuggerLanguagePlugins.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/DebuggerLanguagePlugins.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {type Chrome} from '../../../extension-api/ExtensionAPI.js';  // eslint-disable-line rulesdir/es_modules_import\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\n\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport {type DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\n\nconst UIStrings = {\n  /**\n   *@description Error message that is displayed in the Console when language #plugins report errors\n   *@example {File not found} PH1\n   */\n  errorInDebuggerLanguagePlugin: 'Error in debugger language plugin: {PH1}',\n  /**\n   *@description Status message that is shown in the Console when debugging information is being\n   *loaded. The 2nd and 3rd placeholders are URLs.\n   *@example {C/C++ DevTools Support (DWARF)} PH1\n   *@example {http://web.dev/file.wasm} PH2\n   *@example {http://web.dev/file.wasm.debug.wasm} PH3\n   */\n  loadingDebugSymbolsForVia: '[{PH1}] Loading debug symbols for {PH2} (via {PH3})...',\n  /**\n   *@description Status message that is shown in the Console when debugging information is being loaded\n   *@example {C/C++ DevTools Support (DWARF)} PH1\n   *@example {http://web.dev/file.wasm} PH2\n   */\n  loadingDebugSymbolsFor: '[{PH1}] Loading debug symbols for {PH2}...',\n  /**\n   *@description Warning message that is displayed in the Console when debugging information was loaded, but no source files were found\n   *@example {C/C++ DevTools Support (DWARF)} PH1\n   *@example {http://web.dev/file.wasm} PH2\n   */\n  loadedDebugSymbolsForButDidnt: '[{PH1}] Loaded debug symbols for {PH2}, but didn\\'t find any source files',\n  /**\n   *@description Status message that is shown in the Console when debugging information is successfully loaded\n   *@example {C/C++ DevTools Support (DWARF)} PH1\n   *@example {http://web.dev/file.wasm} PH2\n   *@example {42} PH3\n   */\n  loadedDebugSymbolsForFound: '[{PH1}] Loaded debug symbols for {PH2}, found {PH3} source file(s)',\n  /**\n   *@description Error message that is displayed in the Console when debugging information cannot be loaded\n   *@example {C/C++ DevTools Support (DWARF)} PH1\n   *@example {http://web.dev/file.wasm} PH2\n   *@example {File not found} PH3\n   */\n  failedToLoadDebugSymbolsFor: '[{PH1}] Failed to load debug symbols for {PH2} ({PH3})',\n  /**\n   *@description Error message that is displayed in UI debugging information cannot be found for a call frame\n   *@example {main} PH1\n   */\n  failedToLoadDebugSymbolsForFunction: 'No debug information for function \"{PH1}\"',\n  /**\n   *@description Error message that is displayed in UI when a file needed for debugging information for a call frame is missing\n   *@example {mainp.debug.wasm.dwp} PH1\n   */\n  debugSymbolsIncomplete: 'The debug information for function {PH1} is incomplete',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/bindings/DebuggerLanguagePlugins.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * Generates the raw module ID for a script, which is used\n * to uniquely identify the debugging data for a script on\n * the responsible language #plugin.\n *\n * @param script the unique raw module ID for the script.\n */\nfunction rawModuleIdForScript(script: SDK.Script.Script): string {\n  return `${script.sourceURL}@${script.hash}`;\n}\n\nfunction getRawLocation(callFrame: SDK.DebuggerModel.CallFrame): Chrome.DevTools.RawLocation {\n  const {script} = callFrame;\n  return {\n    rawModuleId: rawModuleIdForScript(script),\n    codeOffset: callFrame.location().columnNumber - (script.codeOffset() || 0),\n    inlineFrameIndex: callFrame.inlineFrameIndex,\n  };\n}\n\nclass FormattingError extends Error {\n  exception: SDK.RemoteObject.RemoteObject;\n  exceptionDetails: Protocol.Runtime.ExceptionDetails;\n  constructor(exception: SDK.RemoteObject.RemoteObject, exceptionDetails: Protocol.Runtime.ExceptionDetails) {\n    const {description} = exceptionDetails.exception || {};\n    super(description || exceptionDetails.text);\n    this.exception = exception;\n    this.exceptionDetails = exceptionDetails;\n  }\n\n  static makeLocal(callFrame: SDK.DebuggerModel.CallFrame, message: string): FormattingError {\n    const exception: Protocol.Runtime.RemoteObject = {\n      type: Protocol.Runtime.RemoteObjectType.Object,\n      subtype: Protocol.Runtime.RemoteObjectSubtype.Error,\n      description: message,\n    };\n    const exceptionDetails: Protocol.Runtime\n        .ExceptionDetails = {text: 'Uncaught', exceptionId: -1, columnNumber: 0, lineNumber: 0, exception};\n    const errorObject = callFrame.debuggerModel.runtimeModel().createRemoteObject(exception);\n    return new FormattingError(errorObject, exceptionDetails);\n  }\n}\n\nclass NamespaceObject extends SDK.RemoteObject.LocalJSONObject {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(value: any) {\n    super(value);\n  }\n\n  override get description(): string {\n    return this.type;\n  }\n\n  override get type(): string {\n    return 'namespace';\n  }\n}\n\nclass SourceScopeRemoteObject extends SDK.RemoteObject.RemoteObjectImpl {\n  variables: Chrome.DevTools.Variable[];\n  #callFrame: SDK.DebuggerModel.CallFrame;\n  #plugin: DebuggerLanguagePlugin;\n  stopId: StopId;\n\n  constructor(callFrame: SDK.DebuggerModel.CallFrame, stopId: StopId, plugin: DebuggerLanguagePlugin) {\n    super(callFrame.debuggerModel.runtimeModel(), undefined, 'object', undefined, null);\n    this.variables = [];\n    this.#callFrame = callFrame;\n    this.#plugin = plugin;\n    this.stopId = stopId;\n  }\n\n  override async doGetProperties(ownProperties: boolean, accessorPropertiesOnly: boolean, _generatePreview: boolean):\n      Promise<SDK.RemoteObject.GetPropertiesResult> {\n    if (accessorPropertiesOnly) {\n      return {properties: [], internalProperties: []} as SDK.RemoteObject.GetPropertiesResult;\n    }\n\n    const properties = [];\n    const namespaces: {\n      [x: string]: SDK.RemoteObject.RemoteObject,\n    } = {};\n\n    function makeProperty(name: string, obj: SDK.RemoteObject.RemoteObject): SDK.RemoteObject.RemoteObjectProperty {\n      return new SDK.RemoteObject.RemoteObjectProperty(\n          name, obj,\n          /* enumerable=*/ false, /* writable=*/ false, /* isOwn=*/ true, /* wasThrown=*/ false);\n    }\n\n    for (const variable of this.variables) {\n      let sourceVar: SDK.RemoteObject.RemoteObject|undefined;\n      try {\n        const evalResult = await this.#plugin.evaluate(variable.name, getRawLocation(this.#callFrame), this.stopId);\n        sourceVar = evalResult ? new ExtensionRemoteObject(this.#callFrame, evalResult, this.#plugin) :\n                                 new SDK.RemoteObject.LocalJSONObject(undefined);\n      } catch (e) {\n        console.warn(e);\n        sourceVar = new SDK.RemoteObject.LocalJSONObject(undefined);\n      }\n      if (variable.nestedName && variable.nestedName.length > 1) {\n        let parent: {\n          [x: string]: SDK.RemoteObject.RemoteObject,\n        } = namespaces;\n        for (let index = 0; index < variable.nestedName.length - 1; index++) {\n          const nestedName = variable.nestedName[index];\n          let child: NamespaceObject|SDK.RemoteObject.RemoteObject = parent[nestedName];\n          if (!child) {\n            child = new NamespaceObject({});\n            parent[nestedName] = child;\n          }\n          parent = child.value;\n        }\n        const name = variable.nestedName[variable.nestedName.length - 1];\n        parent[name] = sourceVar;\n      } else {\n        properties.push(makeProperty(variable.name, sourceVar));\n      }\n    }\n\n    for (const namespace in namespaces) {\n      properties.push(makeProperty(namespace, (namespaces[namespace] as SDK.RemoteObject.RemoteObject)));\n    }\n\n    return {properties: properties, internalProperties: []};\n  }\n}\n\nexport class SourceScope implements SDK.DebuggerModel.ScopeChainEntry {\n  readonly #callFrameInternal: SDK.DebuggerModel.CallFrame;\n  readonly #typeInternal: string;\n  readonly #typeNameInternal: string;\n  readonly #iconInternal: string|undefined;\n  readonly #objectInternal: SourceScopeRemoteObject;\n  readonly #startLocationInternal: SDK.DebuggerModel.Location|null;\n  readonly #endLocationInternal: SDK.DebuggerModel.Location|null;\n  constructor(\n      callFrame: SDK.DebuggerModel.CallFrame, stopId: StopId, type: string, typeName: string, icon: string|undefined,\n      plugin: DebuggerLanguagePlugin) {\n    if (icon && new URL(icon).protocol !== 'data:') {\n      throw new Error('The icon must be a data:-URL');\n    }\n    this.#callFrameInternal = callFrame;\n    this.#typeInternal = type;\n    this.#typeNameInternal = typeName;\n    this.#iconInternal = icon;\n    this.#objectInternal = new SourceScopeRemoteObject(callFrame, stopId, plugin);\n    this.#startLocationInternal = null;\n    this.#endLocationInternal = null;\n  }\n\n  async getVariableValue(name: string): Promise<SDK.RemoteObject.RemoteObject|null> {\n    for (let v = 0; v < this.#objectInternal.variables.length; ++v) {\n      if (this.#objectInternal.variables[v].name !== name) {\n        continue;\n      }\n      const properties = await this.#objectInternal.getAllProperties(false, false);\n      if (!properties.properties) {\n        continue;\n      }\n      const {value} = properties.properties[v];\n      if (value) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n  callFrame(): SDK.DebuggerModel.CallFrame {\n    return this.#callFrameInternal;\n  }\n\n  type(): string {\n    return this.#typeInternal;\n  }\n\n  typeName(): string {\n    return this.#typeNameInternal;\n  }\n\n  name(): string|undefined {\n    return undefined;\n  }\n\n  startLocation(): SDK.DebuggerModel.Location|null {\n    return this.#startLocationInternal;\n  }\n\n  endLocation(): SDK.DebuggerModel.Location|null {\n    return this.#endLocationInternal;\n  }\n\n  object(): SourceScopeRemoteObject {\n    return this.#objectInternal;\n  }\n\n  description(): string {\n    return '';\n  }\n\n  icon(): string|undefined {\n    return this.#iconInternal;\n  }\n}\n\nexport class ExtensionRemoteObject extends SDK.RemoteObject.RemoteObject {\n  private readonly extensionObject: Chrome.DevTools.RemoteObject;\n  private readonly plugin: DebuggerLanguagePlugin;\n  readonly callFrame: SDK.DebuggerModel.CallFrame;\n  constructor(\n      callFrame: SDK.DebuggerModel.CallFrame, extensionObject: Chrome.DevTools.RemoteObject,\n      plugin: DebuggerLanguagePlugin) {\n    super();\n    this.extensionObject = extensionObject;\n    this.plugin = plugin;\n    this.callFrame = callFrame;\n  }\n\n  get linearMemoryAddress(): number|undefined {\n    return this.extensionObject.linearMemoryAddress;\n  }\n\n  get linearMemorySize(): number|undefined {\n    return this.extensionObject.linearMemorySize;\n  }\n\n  override get objectId(): Protocol.Runtime.RemoteObjectId|undefined {\n    return this.extensionObject.objectId as Protocol.Runtime.RemoteObjectId;\n  }\n\n  override get type(): string {\n    if (this.extensionObject.type === 'array' || this.extensionObject.type === 'null') {\n      return 'object';\n    }\n    return this.extensionObject.type;\n  }\n\n  override get subtype(): string|undefined {\n    if (this.extensionObject.type === 'array' || this.extensionObject.type === 'null') {\n      return this.extensionObject.type;\n    }\n    return undefined;\n  }\n\n  override get value(): unknown {\n    return this.extensionObject.value;\n  }\n\n  override unserializableValue(): string|undefined {\n    return undefined;\n  }\n\n  override get description(): string|undefined {\n    return this.extensionObject.description;\n  }\n\n  override set description(description: string|undefined) {\n  }\n\n  override get hasChildren(): boolean {\n    return this.extensionObject.hasChildren;\n  }\n\n  override get preview(): Protocol.Runtime.ObjectPreview|undefined {\n    return undefined;\n  }\n\n  override get className(): string|null {\n    return this.extensionObject.className ?? null;\n  }\n\n  override arrayLength(): number {\n    return 0;\n  }\n\n  override arrayBufferByteLength(): number {\n    return 0;\n  }\n\n  override getOwnProperties(_generatePreview: boolean, _nonIndexedPropertiesOnly?: boolean):\n      Promise<SDK.RemoteObject.GetPropertiesResult> {\n    return this.getAllProperties(false, _generatePreview, _nonIndexedPropertiesOnly);\n  }\n\n  override async getAllProperties(\n      _accessorPropertiesOnly: boolean, _generatePreview: boolean,\n      _nonIndexedPropertiesOnly?: boolean): Promise<SDK.RemoteObject.GetPropertiesResult> {\n    const {objectId} = this.extensionObject;\n    if (objectId) {\n      assertNotNullOrUndefined(this.plugin.getProperties);\n      const extensionObjectProperties = await this.plugin.getProperties(objectId);\n      const properties = extensionObjectProperties.map(\n          p => new SDK.RemoteObject.RemoteObjectProperty(\n              p.name, new ExtensionRemoteObject(this.callFrame, p.value, this.plugin)));\n      return {properties, internalProperties: null};\n    }\n\n    return {properties: null, internalProperties: null};\n  }\n\n  override release(): void {\n    const {objectId} = this.extensionObject;\n    if (objectId) {\n      assertNotNullOrUndefined(this.plugin.releaseObject);\n      void this.plugin.releaseObject(objectId);\n    }\n  }\n\n  override debuggerModel(): SDK.DebuggerModel.DebuggerModel {\n    return this.callFrame.debuggerModel;\n  }\n\n  override runtimeModel(): SDK.RuntimeModel.RuntimeModel {\n    return this.callFrame.debuggerModel.runtimeModel();\n  }\n}\n\nexport type StopId = bigint;\nexport class DebuggerLanguagePluginManager implements\n    SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel> {\n  readonly #workspace: Workspace.Workspace.WorkspaceImpl;\n  readonly #debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  #plugins: DebuggerLanguagePlugin[];\n  readonly #debuggerModelToData: Map<SDK.DebuggerModel.DebuggerModel, ModelData>;\n  readonly #rawModuleHandles: Map<string, {\n    rawModuleId: string,\n    plugin: DebuggerLanguagePlugin,\n    scripts: Array<SDK.Script.Script>,\n    addRawModulePromise: Promise<Array<Platform.DevToolsPath.UrlString>|{missingSymbolFiles: string[]}>,\n  }>;\n  private readonly callFrameByStopId: Map<StopId, SDK.DebuggerModel.CallFrame> = new Map();\n  private readonly stopIdByCallFrame: Map<SDK.DebuggerModel.CallFrame, StopId> = new Map();\n  private nextStopId: StopId = 0n;\n\n  constructor(\n      targetManager: SDK.TargetManager.TargetManager, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.#workspace = workspace;\n    this.#debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this.#plugins = [];\n\n    this.#debuggerModelToData = new Map();\n    targetManager.observeModels(SDK.DebuggerModel.DebuggerModel, this);\n\n    this.#rawModuleHandles = new Map();\n  }\n\n  private async evaluateOnCallFrame(\n      callFrame: SDK.DebuggerModel.CallFrame, options: SDK.RuntimeModel.EvaluationOptions): Promise<{\n    object: SDK.RemoteObject.RemoteObject,\n    exceptionDetails: Protocol.Runtime.ExceptionDetails|undefined,\n  }|{\n    error: string,\n  }|null> {\n    const {script} = callFrame;\n    const {expression, returnByValue, throwOnSideEffect} = options;\n    const {plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n    const location = getRawLocation(callFrame);\n    const sourceLocations = await plugin.rawLocationToSourceLocation(location);\n    if (sourceLocations.length === 0) {\n      return null;\n    }\n\n    if (returnByValue) {\n      return {error: 'Cannot return by value'};\n    }\n    if (throwOnSideEffect) {\n      return {error: 'Cannot guarantee side-effect freedom'};\n    }\n\n    try {\n      const object = await plugin.evaluate(expression, location, this.stopIdForCallFrame(callFrame));\n      if (object) {\n        return {object: new ExtensionRemoteObject(callFrame, object, plugin), exceptionDetails: undefined};\n      }\n      return {object: new SDK.RemoteObject.LocalJSONObject(undefined), exceptionDetails: undefined};\n    } catch (error) {\n      if (error instanceof FormattingError) {\n        const {exception: object, exceptionDetails} = error;\n        return {object, exceptionDetails};\n      }\n      const {exception: object, exceptionDetails} = FormattingError.makeLocal(callFrame, error.message);\n      return {object, exceptionDetails};\n    }\n  }\n\n  stopIdForCallFrame(callFrame: SDK.DebuggerModel.CallFrame): StopId {\n    let stopId = this.stopIdByCallFrame.get(callFrame);\n    if (stopId !== undefined) {\n      return stopId;\n    }\n\n    stopId = this.nextStopId++;\n    this.stopIdByCallFrame.set(callFrame, stopId);\n    this.callFrameByStopId.set(stopId, callFrame);\n    return stopId;\n  }\n\n  callFrameForStopId(stopId: StopId): SDK.DebuggerModel.CallFrame|undefined {\n    return this.callFrameByStopId.get(stopId);\n  }\n\n  private expandCallFrames(callFrames: SDK.DebuggerModel.CallFrame[]): Promise<SDK.DebuggerModel.CallFrame[]> {\n    return Promise\n        .all(callFrames.map(async callFrame => {\n          const functionInfo = await this.getFunctionInfo(callFrame.script, callFrame.location());\n          if (functionInfo) {\n            if ('frames' in functionInfo && functionInfo.frames.length) {\n              return functionInfo.frames.map(({name}, index) => callFrame.createVirtualCallFrame(index, name));\n            }\n            if ('missingSymbolFiles' in functionInfo && functionInfo.missingSymbolFiles.length) {\n              const resources = functionInfo.missingSymbolFiles;\n              const details = i18nString(UIStrings.debugSymbolsIncomplete, {PH1: callFrame.functionName});\n              callFrame.setMissingDebugInfoDetails({details, resources});\n            } else {\n              callFrame.setMissingDebugInfoDetails({\n                resources: [],\n                details: i18nString(UIStrings.failedToLoadDebugSymbolsForFunction, {PH1: callFrame.functionName}),\n              });\n            }\n          }\n          return callFrame;\n        }))\n        .then(callFrames => callFrames.flat());\n  }\n\n  modelAdded(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    this.#debuggerModelToData.set(debuggerModel, new ModelData(debuggerModel, this.#workspace));\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this);\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this.parsedScriptSource, this);\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.DebuggerResumed, this.debuggerResumed, this);\n    debuggerModel.setEvaluateOnCallFrameCallback(this.evaluateOnCallFrame.bind(this));\n    debuggerModel.setExpandCallFramesCallback(this.expandCallFrames.bind(this));\n  }\n\n  modelRemoved(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this);\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this.parsedScriptSource, this);\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.DebuggerResumed, this.debuggerResumed, this);\n    debuggerModel.setEvaluateOnCallFrameCallback(null);\n    debuggerModel.setExpandCallFramesCallback(null);\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData.dispose();\n      this.#debuggerModelToData.delete(debuggerModel);\n    }\n    this.#rawModuleHandles.forEach((rawModuleHandle, rawModuleId) => {\n      const scripts = rawModuleHandle.scripts.filter(script => script.debuggerModel !== debuggerModel);\n      if (scripts.length === 0) {\n        rawModuleHandle.plugin.removeRawModule(rawModuleId).catch(error => {\n          Common.Console.Console.instance().error(\n              i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n        });\n        this.#rawModuleHandles.delete(rawModuleId);\n      } else {\n        rawModuleHandle.scripts = scripts;\n      }\n    });\n  }\n\n  private globalObjectCleared(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    const debuggerModel = event.data;\n    this.modelRemoved(debuggerModel);\n    this.modelAdded(debuggerModel);\n  }\n\n  addPlugin(plugin: DebuggerLanguagePlugin): void {\n    this.#plugins.push(plugin);\n    for (const debuggerModel of this.#debuggerModelToData.keys()) {\n      for (const script of debuggerModel.scripts()) {\n        if (this.hasPluginForScript(script)) {\n          continue;\n        }\n        this.parsedScriptSource({data: script});\n      }\n    }\n  }\n\n  removePlugin(plugin: DebuggerLanguagePlugin): void {\n    this.#plugins = this.#plugins.filter(p => p !== plugin);\n    const scripts = new Set<SDK.Script.Script>();\n    this.#rawModuleHandles.forEach((rawModuleHandle, rawModuleId) => {\n      if (rawModuleHandle.plugin !== plugin) {\n        return;\n      }\n      rawModuleHandle.scripts.forEach(script => scripts.add(script));\n      this.#rawModuleHandles.delete(rawModuleId);\n    });\n    for (const script of scripts) {\n      const modelData = (this.#debuggerModelToData.get(script.debuggerModel) as ModelData);\n      modelData.removeScript(script);\n\n      // Let's see if we have another #plugin that's happy to\n      // take this orphaned script now. This is important to\n      // get right, since the same #plugin might race during\n      // unregister/register and we might already have the\n      // new instance of the #plugin added before we remove\n      // the previous instance.\n      this.parsedScriptSource({data: script});\n    }\n  }\n\n  hasPluginForScript(script: SDK.Script.Script): boolean {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n    return rawModuleHandle !== undefined && rawModuleHandle.scripts.includes(script);\n  }\n\n  /**\n   * Returns the responsible language #plugin and the raw module ID for a script.\n   *\n   * This ensures that the `addRawModule` call finishes first such that the\n   * caller can immediately issue calls to the returned #plugin without the\n   * risk of racing with the `addRawModule` call. The returned #plugin will be\n   * set to undefined to indicate that there's no #plugin for the script.\n   */\n  private async rawModuleIdAndPluginForScript(script: SDK.Script.Script): Promise<{\n    rawModuleId: string,\n    plugin: DebuggerLanguagePlugin|null,\n  }> {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n    if (rawModuleHandle) {\n      await rawModuleHandle.addRawModulePromise;\n      if (rawModuleHandle === this.#rawModuleHandles.get(rawModuleId)) {\n        return {rawModuleId, plugin: rawModuleHandle.plugin};\n      }\n    }\n    return {rawModuleId, plugin: null};\n  }\n\n  uiSourceCodeForURL(debuggerModel: SDK.DebuggerModel.DebuggerModel, url: Platform.DevToolsPath.UrlString):\n      Workspace.UISourceCode.UISourceCode|null {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      return modelData.getProject().uiSourceCodeForURL(url);\n    }\n    return null;\n  }\n\n  async rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location):\n      Promise<Workspace.UISourceCode.UILocation|null> {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.#columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: rawLocation.inlineFrameIndex,\n    };\n\n    try {\n      const sourceLocations = await plugin.rawLocationToSourceLocation(pluginLocation);\n      for (const sourceLocation of sourceLocations) {\n        const uiSourceCode = this.uiSourceCodeForURL(\n            script.debuggerModel, sourceLocation.sourceFileURL as Platform.DevToolsPath.UrlString);\n        if (!uiSourceCode) {\n          continue;\n        }\n        // Absence of column information is indicated by the value `-1` in talking to language #plugins.\n        return uiSourceCode.uiLocation(\n            sourceLocation.lineNumber, sourceLocation.columnNumber >= 0 ? sourceLocation.columnNumber : undefined);\n      }\n    } catch (error) {\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n    }\n    return null;\n  }\n\n  uiLocationToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber: number|undefined = -1): Promise<{\n    start: SDK.DebuggerModel.Location,\n    end: SDK.DebuggerModel.Location,\n  }[]|null> {\n    const locationPromises: Promise<{\n      start: SDK.DebuggerModel.Location,\n      end: SDK.DebuggerModel.Location,\n    }[]>[] = [];\n    this.scriptsForUISourceCode(uiSourceCode).forEach(script => {\n      const rawModuleId = rawModuleIdForScript(script);\n      const rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n      if (!rawModuleHandle) {\n        return;\n      }\n      const {plugin} = rawModuleHandle;\n      locationPromises.push(getLocations(rawModuleId, plugin, script));\n    });\n    if (locationPromises.length === 0) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.all(locationPromises).then(locations => locations.flat()).catch(error => {\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return null;\n    });\n\n    async function getLocations(\n        rawModuleId: string, plugin: DebuggerLanguagePlugin, script: SDK.Script.Script): Promise<{\n      start: SDK.DebuggerModel.Location,\n      end: SDK.DebuggerModel.Location,\n    }[]> {\n      const pluginLocation = {rawModuleId, sourceFileURL: uiSourceCode.url(), lineNumber, columnNumber};\n\n      const rawLocations = await plugin.sourceLocationToRawLocation(pluginLocation);\n      if (!rawLocations) {\n        return [];\n      }\n      return rawLocations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0)),\n          }));\n    }\n  }\n\n  async uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): Promise<SDK.DebuggerModel.Location[]|null> {\n    const locationRanges = await this.uiLocationToRawLocationRanges(uiSourceCode, lineNumber, columnNumber);\n    if (!locationRanges) {\n      return null;\n    }\n    return locationRanges.map(({start}) => start);\n  }\n\n  async uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): Promise<SDK.DebuggerModel.LocationRange[]|null> {\n    const locationRangesPromises = [];\n    for (let line = textRange.startLine; line <= textRange.endLine; ++line) {\n      locationRangesPromises.push(this.uiLocationToRawLocationRanges(uiSourceCode, line));\n    }\n    const ranges = [];\n    for (const locationRanges of await Promise.all(locationRangesPromises)) {\n      if (locationRanges === null) {\n        return null;\n      }\n      for (const range of locationRanges) {\n        const [startLocation, endLocation] = await Promise.all([\n          this.rawLocationToUILocation(range.start),\n          this.rawLocationToUILocation(range.end),\n        ]);\n        if (startLocation === null || endLocation === null) {\n          continue;\n        }\n        // Report all ranges that somehow intersect with the `textRange`. It's the\n        // responsibility of the caller to filter / clamp these ranges appropriately.\n        const overlap = textRange.intersection(new TextUtils.TextRange.TextRange(\n            startLocation.lineNumber, startLocation.columnNumber ?? 0, endLocation.lineNumber,\n            endLocation.columnNumber ?? Infinity));\n        if (!overlap.isEmpty()) {\n          ranges.push(range);\n        }\n      }\n    }\n    return ranges;\n  }\n\n  scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const scripts = modelData.uiSourceCodeToScripts.get(uiSourceCode);\n      if (scripts) {\n        return scripts;\n      }\n    }\n    return [];\n  }\n\n  setDebugInfoURL(script: SDK.Script.Script, externalURL: Platform.DevToolsPath.UrlString): void {\n    if (this.hasPluginForScript(script)) {\n      return;\n    }\n    script.debugSymbols = {type: Protocol.Debugger.DebugSymbolsType.ExternalDWARF, externalURL};\n    this.parsedScriptSource({data: script});\n    void script.debuggerModel.setDebugInfoURL(script, externalURL);\n  }\n\n  private parsedScriptSource(event: Common.EventTarget.EventTargetEvent<SDK.Script.Script>): void {\n    const script = event.data;\n    if (!script.sourceURL) {\n      return;\n    }\n\n    for (const plugin of this.#plugins) {\n      if (!plugin.handleScript(script)) {\n        continue;\n      }\n      const rawModuleId = rawModuleIdForScript(script);\n      let rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n      if (!rawModuleHandle) {\n        const sourceFileURLsPromise =\n            (async(): Promise<Platform.DevToolsPath.UrlString[]|{missingSymbolFiles: string[]}> => {\n              const console = Common.Console.Console.instance();\n              const url = script.sourceURL;\n              const symbolsUrl = (script.debugSymbols && script.debugSymbols.externalURL) || '';\n              if (symbolsUrl) {\n                console.log(\n                    i18nString(UIStrings.loadingDebugSymbolsForVia, {PH1: plugin.name, PH2: url, PH3: symbolsUrl}));\n              } else {\n                console.log(i18nString(UIStrings.loadingDebugSymbolsFor, {PH1: plugin.name, PH2: url}));\n              }\n              try {\n                const code = (!symbolsUrl && url.startsWith('wasm://')) ? await script.getWasmBytecode() : undefined;\n                const addModuleResult = await plugin.addRawModule(rawModuleId, symbolsUrl, {url, code});\n                // Check that the handle isn't stale by now. This works because the code that assigns to\n                // `rawModuleHandle` below will run before this code because of the `await` in the preceding\n                // line. This is primarily to avoid logging the message below, which would give the developer\n                // the misleading information that we're done, while in reality it was a stale call that finished.\n                if (rawModuleHandle !== this.#rawModuleHandles.get(rawModuleId)) {\n                  return [];\n                }\n                if ('missingSymbolFiles' in addModuleResult) {\n                  return {missingSymbolFiles: addModuleResult.missingSymbolFiles};\n                }\n                const sourceFileURLs = addModuleResult as Platform.DevToolsPath.UrlString[];\n                if (sourceFileURLs.length === 0) {\n                  console.warn(i18nString(UIStrings.loadedDebugSymbolsForButDidnt, {PH1: plugin.name, PH2: url}));\n                } else {\n                  console.log(i18nString(\n                      UIStrings.loadedDebugSymbolsForFound, {PH1: plugin.name, PH2: url, PH3: sourceFileURLs.length}));\n                }\n                return sourceFileURLs;\n              } catch (error) {\n                console.error(i18nString(\n                    UIStrings.failedToLoadDebugSymbolsFor, {PH1: plugin.name, PH2: url, PH3: error.message}));\n                this.#rawModuleHandles.delete(rawModuleId);\n                return [];\n              }\n            })();\n        rawModuleHandle = {rawModuleId, plugin, scripts: [script], addRawModulePromise: sourceFileURLsPromise};\n        this.#rawModuleHandles.set(rawModuleId, rawModuleHandle);\n      } else {\n        rawModuleHandle.scripts.push(script);\n      }\n\n      // Wait for the addRawModule call to finish and\n      // update the #project. It's important to check\n      // for the DebuggerModel again, which may disappear\n      // in the meantime...\n      void rawModuleHandle.addRawModulePromise.then(sourceFileURLs => {\n        if (!('missingSymbolFiles' in sourceFileURLs)) {\n          // The script might have disappeared meanwhile...\n          if (script.debuggerModel.scriptForId(script.scriptId) === script) {\n            const modelData = this.#debuggerModelToData.get(script.debuggerModel);\n            if (modelData) {  // The DebuggerModel could have disappeared meanwhile...\n              modelData.addSourceFiles(script, sourceFileURLs);\n              void this.#debuggerWorkspaceBinding.updateLocations(script);\n            }\n          }\n        }\n      });\n      return;\n    }\n  }\n\n  private debuggerResumed(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    const resumedFrames =\n        Array.from(this.callFrameByStopId.values()).filter(callFrame => callFrame.debuggerModel === event.data);\n    for (const callFrame of resumedFrames) {\n      const stopId = this.stopIdByCallFrame.get(callFrame);\n      assertNotNullOrUndefined(stopId);\n      this.stopIdByCallFrame.delete(callFrame);\n      this.callFrameByStopId.delete(stopId);\n    }\n  }\n\n  getSourcesForScript(script: SDK.Script.Script):\n      Promise<Array<Platform.DevToolsPath.UrlString>|{missingSymbolFiles: string[]}|undefined> {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this.#rawModuleHandles.get(rawModuleId);\n    if (rawModuleHandle) {\n      return rawModuleHandle.addRawModulePromise;\n    }\n    return Promise.resolve(undefined);\n  }\n\n  async resolveScopeChain(callFrame: SDK.DebuggerModel.CallFrame): Promise<SourceScope[]|null> {\n    const script = callFrame.script;\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const location = {\n      rawModuleId,\n      codeOffset: callFrame.location().columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: callFrame.inlineFrameIndex,\n    };\n\n    const stopId = this.stopIdForCallFrame(callFrame);\n\n    try {\n      const sourceMapping = await plugin.rawLocationToSourceLocation(location);\n      if (sourceMapping.length === 0) {\n        return null;\n      }\n      const scopes = new Map<string, SourceScope>();\n      const variables = await plugin.listVariablesInScope(location);\n      for (const variable of variables || []) {\n        let scope = scopes.get(variable.scope);\n        if (!scope) {\n          const {type, typeName, icon} = await plugin.getScopeInfo(variable.scope);\n          scope = new SourceScope(callFrame, stopId, type, typeName, icon, plugin);\n          scopes.set(variable.scope, scope);\n        }\n        scope.object().variables.push(variable);\n      }\n      return Array.from(scopes.values());\n    } catch (error) {\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return null;\n    }\n  }\n\n  async getFunctionInfo(script: SDK.Script.Script, location: SDK.DebuggerModel.Location):\n      Promise<{frames: Array<Chrome.DevTools.FunctionInfo>}|{missingSymbolFiles: string[]}|null> {\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const rawLocation: Chrome.DevTools.RawLocation = {\n      rawModuleId,\n      codeOffset: location.columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: 0,\n    };\n\n    try {\n      const functionInfo = await plugin.getFunctionInfo(rawLocation);\n      return functionInfo;\n    } catch (error) {\n      Common.Console.Console.instance().warn(i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return {frames: []};\n    }\n  }\n\n  async getInlinedFunctionRanges(rawLocation: SDK.DebuggerModel.Location): Promise<{\n    start: SDK.DebuggerModel.Location,\n    end: SDK.DebuggerModel.Location,\n  }[]> {\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return [];\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.#columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n    };\n\n    try {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-ignore\n      const locations = await plugin.getInlinedFunctionRanges(pluginLocation);\n      return locations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0)),\n          }));\n    } catch (error) {\n      Common.Console.Console.instance().warn(i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return [];\n    }\n  }\n\n  async getInlinedCalleesRanges(rawLocation: SDK.DebuggerModel.Location): Promise<{\n    start: SDK.DebuggerModel.Location,\n    end: SDK.DebuggerModel.Location,\n  }[]> {\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const {rawModuleId, plugin} = await this.rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return [];\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.#columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n    };\n\n    try {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-ignore\n      const locations = await plugin.getInlinedCalleesRanges(pluginLocation);\n      return locations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0)),\n          }));\n    } catch (error) {\n      Common.Console.Console.instance().warn(i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return [];\n    }\n  }\n\n  async getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<Set<number>|null> {\n    const rawModuleIds =\n        await Promise.all(this.scriptsForUISourceCode(uiSourceCode).map(s => this.rawModuleIdAndPluginForScript(s)));\n\n    let mappedLines: Set<number>|null = null;\n    for (const {rawModuleId, plugin} of rawModuleIds) {\n      if (!plugin) {\n        continue;\n      }\n      const lines = await plugin.getMappedLines(rawModuleId, uiSourceCode.url());\n\n      if (lines === undefined) {\n        continue;\n      }\n      if (mappedLines === null) {\n        mappedLines = new Set(lines);\n      } else {\n        lines.forEach(l => (mappedLines as Set<number>).add(l));\n      }\n    }\n    return mappedLines;\n  }\n}\n\nclass ModelData {\n  project: ContentProviderBasedProject;\n  readonly uiSourceCodeToScripts: Map<Workspace.UISourceCode.UISourceCode, SDK.Script.Script[]>;\n  constructor(debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.project = new ContentProviderBasedProject(\n        workspace, 'language_plugins::' + debuggerModel.target().id(), Workspace.Workspace.projectTypes.Network, '',\n        false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this.project, debuggerModel.target());\n\n    this.uiSourceCodeToScripts = new Map();\n  }\n\n  addSourceFiles(script: SDK.Script.Script, urls: Platform.DevToolsPath.UrlString[]): void {\n    const initiator = script.createPageResourceLoadInitiator();\n    for (const url of urls) {\n      let uiSourceCode = this.project.uiSourceCodeForURL(url);\n      if (!uiSourceCode) {\n        uiSourceCode = this.project.createUISourceCode(url, Common.ResourceType.resourceTypes.SourceMapScript);\n        NetworkProject.setInitialFrameAttribution(uiSourceCode, script.frameId);\n\n        // Bind the uiSourceCode to the script first before we add the\n        // uiSourceCode to the #project and thereby notify the rest of\n        // the system about the new source file.\n        // https://crbug.com/1150295 is an example where the breakpoint\n        // resolution logic kicks in right after adding the uiSourceCode\n        // and at that point we already need to have the mapping in place\n        // otherwise we will not get the breakpoint right.\n        this.uiSourceCodeToScripts.set(uiSourceCode, [script]);\n\n        const contentProvider = new SDK.CompilerSourceMappingContentProvider.CompilerSourceMappingContentProvider(\n            url, Common.ResourceType.resourceTypes.SourceMapScript, initiator);\n        const mimeType = Common.ResourceType.ResourceType.mimeFromURL(url) || 'text/javascript';\n        this.project.addUISourceCodeWithProvider(uiSourceCode, contentProvider, null, mimeType);\n      } else {\n        // The same uiSourceCode can be provided by different scripts,\n        // but we don't expect that to happen frequently.\n        const scripts = (this.uiSourceCodeToScripts.get(uiSourceCode) as SDK.Script.Script[]);\n        if (!scripts.includes(script)) {\n          scripts.push(script);\n        }\n      }\n    }\n  }\n\n  removeScript(script: SDK.Script.Script): void {\n    this.uiSourceCodeToScripts.forEach((scripts, uiSourceCode) => {\n      scripts = scripts.filter(s => s !== script);\n      if (scripts.length === 0) {\n        this.uiSourceCodeToScripts.delete(uiSourceCode);\n        this.project.removeUISourceCode(uiSourceCode.url());\n      } else {\n        this.uiSourceCodeToScripts.set(uiSourceCode, scripts);\n      }\n    });\n  }\n\n  dispose(): void {\n    this.project.dispose();\n  }\n\n  getProject(): ContentProviderBasedProject {\n    return this.project;\n  }\n}\n\nexport interface DebuggerLanguagePlugin extends Chrome.DevTools.LanguageExtensionPlugin {\n  name: string;\n  handleScript(script: SDK.Script.Script): boolean;\n}\n"]}