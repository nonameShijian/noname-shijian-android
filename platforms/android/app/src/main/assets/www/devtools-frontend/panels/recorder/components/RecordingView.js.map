{"version":3,"file":"RecordingView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/components/RecordingView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as CodeHighlighter from '../../../ui/components/code_highlighter/code_highlighter.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as TextEditor from '../../../ui/components/text_editor/text_editor.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as Menus from '../../../ui/components/menus/menus.js';\n\nimport type * as PuppeteerReplay from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport type * as PublicExtensions from '../../../models/extensions/extensions.js';\n\nimport type * as Extensions from '../extensions/extensions.js';\nimport type * as Converters from '../converters/converters.js';\nimport * as Models from '../models/models.js';\nimport * as Actions from '../recorder-actions.js';  // eslint-disable-line rulesdir/es_modules_import\n\nimport recordingViewStyles from './recordingView.css.js';\n\nimport {\n  State,\n  StepView,\n  type StepViewData,\n  type CopyStepEvent,\n} from './StepView.js';\n\nimport {PlayRecordingSpeed} from '../models/RecordingPlayer.js';\nimport {\n  ReplayButton,\n  type ReplayButtonData,\n  type StartReplayEvent,\n} from './ReplayButton.js';\nimport {SplitView} from './SplitView.js';\nimport {ExtensionView} from './ExtensionView.js';\n\nconst UIStrings = {\n  /**\n   * @description Depicts that the recording was done on a mobile device (e.g., a smartphone or tablet).\n   */\n  mobile: 'Mobile',\n  /**\n   * @description Depicts that the recording was done on a desktop device (e.g., on a PC or laptop).\n   */\n  desktop: 'Desktop',\n  /**\n   * @description Network latency in milliseconds.\n   * @example {10} value\n   */\n  latency: 'Latency: {value} ms',\n  /**\n   * @description Upload speed.\n   * @example {42 kB} value\n   */\n  upload: 'Upload: {value}',\n  /**\n   * @description Download speed.\n   * @example {8 kB} value\n   */\n  download: 'Download: {value}',\n  /**\n   * @description Title of the button to edit replay settings.\n   */\n  editReplaySettings: 'Edit replay settings',\n  /**\n   * @description Title of the section that contains replay settings.\n   */\n  replaySettings: 'Replay settings',\n  /**\n   * @description The string is shown when a default value is used for some replay settings.\n   */\n  default: 'Default',\n  /**\n   * @description The title of the section with environment settings.\n   */\n  environment: 'Environment',\n  /**\n   * @description The title of the screenshot image that is shown for every section in the recordign view.\n   */\n  screenshotForSection: 'Screenshot for this section',\n  /**\n   * @description The title of the button that edits the current recording's title.\n   */\n  editTitle: 'Edit title',\n  /**\n   * @description The error for when the title is missing.\n   */\n  requiredTitleError: 'Title is required',\n  /**\n   * @description The status text that is shown while the recording is ongoing.\n   */\n  recording: 'Recording…',\n  /**\n   * @description The title of the button to end the current recording.\n   */\n  endRecording: 'End recording',\n  /**\n   * @description The title of the button while the recording is being ended.\n   */\n  recordingIsBeingStopped: 'Stopping recording…',\n  /**\n   * @description The text that describes a timeout setting of {value} milliseconds.\n   * @example {1000} value\n   */\n  timeout: 'Timeout: {value} ms',\n  /**\n   * @description The label for the input that allows entering network throttling configuration.\n   */\n  network: 'Network',\n  /**\n   * @description The label for the input that allows entering timeout (a number in ms) configuration.\n   */\n  timeoutLabel: 'Timeout',\n  /**\n   * @description The text in a tooltip for the timeout input that explains what timeout settings do.\n   */\n  timeoutExplanation:\n      'The timeout setting (in milliseconds) applies to every action when replaying the recording. For example, if a DOM element identified by a CSS selector does not appear on the page within the specified timeout, the replay fails with an error.',\n  /**\n   * @description The label for the button that cancels replaying.\n   */\n  cancelReplay: 'Cancel replay',\n  /**\n   * @description Button title that shows the code view when clicked.\n   */\n  showCode: 'Show code',\n  /**\n   * @description Button title that hides the code view when clicked.\n   */\n  hideCode: 'Hide code',\n  /**\n   * @description Button title that adds an assertion to the step editor.\n   */\n  addAssertion: 'Add assertion',\n  /**\n   * @description The title of the button that open current recording in Performance panel.\n   */\n  performancePanel: 'Performance panel',\n};\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/recorder/components/RecordingView.ts',\n    UIStrings,\n);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-recording-view': RecordingView;\n  }\n}\n\nexport interface ReplayState {\n  isPlaying: boolean;             // Replay is in progress\n  isPausedOnBreakpoint: boolean;  // Replay is in progress and is in stopped state\n}\n\nexport interface RecordingViewData {\n  replayState: ReplayState;\n  isRecording: boolean;\n  recordingTogglingInProgress: boolean;\n  recording: Models.Schema.UserFlow;\n  currentStep?: Models.Schema.Step;\n  currentError?: Error;\n  sections: Models.Section.Section[];\n  settings?: Models.RecordingSettings.RecordingSettings;\n  recorderSettings?: Models.RecorderSettings.RecorderSettings;\n  lastReplayResult?: Models.RecordingPlayer.ReplayResult;\n  replayAllowed: boolean;\n  breakpointIndexes: Set<number>;\n  builtInConverters: Converters.Converter.Converter[];\n  extensionConverters: Converters.Converter.Converter[];\n  replayExtensions: Extensions.ExtensionManager.Extension[];\n  extensionDescriptor?: PublicExtensions.RecorderPluginManager.ViewDescriptor;\n}\n\nexport class RecordingFinishedEvent extends Event {\n  static readonly eventName = 'recordingfinished';\n\n  constructor() {\n    super(RecordingFinishedEvent.eventName);\n  }\n}\n\nexport const enum TargetPanel {\n  PerformancePanel = 'timeline',\n  Default = 'chrome_recorder',\n}\n\ninterface PlayRecordingEventData {\n  targetPanel: TargetPanel;\n  speed: PlayRecordingSpeed;\n  extension?: Extensions.ExtensionManager.Extension;\n}\n\nexport class PlayRecordingEvent extends Event {\n  static readonly eventName = 'playrecording';\n  readonly data: PlayRecordingEventData;\n  constructor(\n      data: PlayRecordingEventData = {\n        targetPanel: TargetPanel.Default,\n        speed: PlayRecordingSpeed.Normal,\n      },\n  ) {\n    super(PlayRecordingEvent.eventName);\n    this.data = data;\n  }\n}\n\nexport class AbortReplayEvent extends Event {\n  static readonly eventName = 'abortreplay';\n  constructor() {\n    super(AbortReplayEvent.eventName);\n  }\n}\n\nexport class RecordingChangedEvent extends Event {\n  static readonly eventName = 'recordingchanged';\n  data: {currentStep: Models.Schema.Step, newStep: Models.Schema.Step};\n  constructor(currentStep: Models.Schema.Step, newStep: Models.Schema.Step) {\n    super(RecordingChangedEvent.eventName);\n    this.data = {currentStep, newStep};\n  }\n}\n\nexport class AddAssertionEvent extends Event {\n  static readonly eventName = 'addassertion';\n  constructor() {\n    super(AddAssertionEvent.eventName);\n  }\n}\n\nexport class RecordingTitleChangedEvent extends Event {\n  static readonly eventName = 'recordingtitlechanged';\n  title: string;\n\n  constructor(title: string) {\n    super(RecordingTitleChangedEvent.eventName, {});\n    this.title = title;\n  }\n}\n\nexport class NetworkConditionsChanged extends Event {\n  static readonly eventName = 'networkconditionschanged';\n  data?: SDK.NetworkManager.Conditions;\n  constructor(data?: SDK.NetworkManager.Conditions) {\n    super(NetworkConditionsChanged.eventName, {\n      composed: true,\n      bubbles: true,\n    });\n    this.data = data;\n  }\n}\n\nexport class TimeoutChanged extends Event {\n  static readonly eventName = 'timeoutchanged';\n  data?: number;\n  constructor(data?: number) {\n    super(TimeoutChanged.eventName, {composed: true, bubbles: true});\n    this.data = data;\n  }\n}\n\nconst networkConditionPresets = [\n  SDK.NetworkManager.NoThrottlingConditions,\n  SDK.NetworkManager.OfflineConditions,\n  SDK.NetworkManager.Slow3GConditions,\n  SDK.NetworkManager.Fast3GConditions,\n];\n\nfunction converterIdToFlowMetric(\n    converterId: string,\n    ): Host.UserMetrics.RecordingCopiedToClipboard {\n  switch (converterId) {\n    case Models.ConverterIds.ConverterIds.Puppeteer:\n      return Host.UserMetrics.RecordingCopiedToClipboard.CopiedRecordingWithPuppeteer;\n    case Models.ConverterIds.ConverterIds.JSON:\n      return Host.UserMetrics.RecordingCopiedToClipboard.CopiedRecordingWithJSON;\n    case Models.ConverterIds.ConverterIds.Replay:\n      return Host.UserMetrics.RecordingCopiedToClipboard.CopiedRecordingWithReplay;\n    default:\n      return Host.UserMetrics.RecordingCopiedToClipboard.CopiedRecordingWithExtension;\n  }\n}\n\nfunction converterIdToStepMetric(\n    converterId: string,\n    ): Host.UserMetrics.RecordingCopiedToClipboard {\n  switch (converterId) {\n    case Models.ConverterIds.ConverterIds.Puppeteer:\n      return Host.UserMetrics.RecordingCopiedToClipboard.CopiedStepWithPuppeteer;\n    case Models.ConverterIds.ConverterIds.JSON:\n      return Host.UserMetrics.RecordingCopiedToClipboard.CopiedStepWithJSON;\n    case Models.ConverterIds.ConverterIds.Replay:\n      return Host.UserMetrics.RecordingCopiedToClipboard.CopiedStepWithReplay;\n    default:\n      return Host.UserMetrics.RecordingCopiedToClipboard.CopiedStepWithExtension;\n  }\n}\n\nexport class RecordingView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-recording-view`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #replayState: ReplayState = {isPlaying: false, isPausedOnBreakpoint: false};\n  #userFlow: Models.Schema.UserFlow|null = null;\n  #isRecording: boolean = false;\n  #recordingTogglingInProgress: boolean = false;\n  #isTitleInvalid = false;\n  #currentStep?: Models.Schema.Step;\n  #steps: Models.Schema.Step[] = [];\n  #currentError?: Error;\n  #sections: Models.Section.Section[] = [];\n  #settings?: Models.RecordingSettings.RecordingSettings;\n  #recorderSettings?: Models.RecorderSettings.RecorderSettings;\n  #lastReplayResult?: Models.RecordingPlayer.ReplayResult;\n  #breakpointIndexes: Set<number> = new Set();\n  #selectedStep?: Models.Schema.Step|null;\n\n  #replaySettingsExpanded = false;\n  #replayAllowed = true;\n  #builtInConverters: Converters.Converter.Converter[] = [];\n  #extensionConverters: Converters.Converter.Converter[] = [];\n  #replayExtensions?: Extensions.ExtensionManager.Extension[];\n  #showCodeView = false;\n  #code: string = '';\n  #converterId: string = '';\n  #editorState?: CodeMirror.EditorState;\n  #sourceMap: PuppeteerReplay.SourceMap|undefined;\n  #extensionDescriptor?: PublicExtensions.RecorderPluginManager.ViewDescriptor;\n\n  #onCopyBound = this.#onCopy.bind(this);\n\n  set data(data: RecordingViewData) {\n    this.#isRecording = data.isRecording;\n    this.#replayState = data.replayState;\n    this.#recordingTogglingInProgress = data.recordingTogglingInProgress;\n    this.#currentStep = data.currentStep;\n\n    this.#userFlow = data.recording;\n    this.#steps = this.#userFlow.steps;\n    this.#sections = data.sections;\n    this.#settings = data.settings;\n    this.#recorderSettings = data.recorderSettings;\n\n    this.#currentError = data.currentError;\n    this.#lastReplayResult = data.lastReplayResult;\n    this.#replayAllowed = data.replayAllowed;\n    this.#isTitleInvalid = false;\n    this.#breakpointIndexes = data.breakpointIndexes;\n    this.#builtInConverters = data.builtInConverters;\n    this.#extensionConverters = data.extensionConverters;\n    this.#replayExtensions = data.replayExtensions;\n    this.#extensionDescriptor = data.extensionDescriptor;\n\n    this.#converterId = this.#recorderSettings?.preferredCopyFormat ?? data.builtInConverters[0]?.getId();\n    void this.#convertToCode();\n\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [\n      recordingViewStyles,\n      Input.textInputStyles,\n    ];\n    document.addEventListener('copy', this.#onCopyBound);\n    this.#render();\n  }\n\n  disconnectedCallback(): void {\n    document.removeEventListener('copy', this.#onCopyBound);\n  }\n\n  scrollToBottom(): void {\n    const wrapper = this.shadowRoot?.querySelector('.sections');\n    if (!wrapper) {\n      return;\n    }\n    wrapper.scrollTop = wrapper.scrollHeight;\n  }\n\n  #dispatchAddAssertionEvent(): void {\n    this.dispatchEvent(new AddAssertionEvent());\n  }\n\n  #dispatchRecordingFinished(): void {\n    this.dispatchEvent(new RecordingFinishedEvent());\n  }\n\n  #handleAbortReplay(): void {\n    this.dispatchEvent(new AbortReplayEvent());\n  }\n\n  #handleTogglePlaying(event: StartReplayEvent): void {\n    this.dispatchEvent(\n        new PlayRecordingEvent({\n          targetPanel: TargetPanel.Default,\n          speed: event.speed,\n          extension: event.extension,\n        }),\n    );\n  }\n\n  #getStepState(step: Models.Schema.Step): State {\n    if (!this.#currentStep) {\n      return State.Default;\n    }\n    if (step === this.#currentStep) {\n      if (this.#currentError) {\n        return State.Error;\n      }\n      if (!this.#replayState.isPlaying) {\n        return State.Success;\n      }\n\n      if (this.#replayState.isPausedOnBreakpoint) {\n        return State.Stopped;\n      }\n\n      return State.Current;\n    }\n    const currentIndex = this.#steps.indexOf(this.#currentStep);\n    if (currentIndex === -1) {\n      return State.Default;\n    }\n\n    const index = this.#steps.indexOf(step);\n    return index < currentIndex ? State.Success : State.Outstanding;\n  }\n\n  #getSectionState(section: Models.Section.Section): State {\n    const currentStep = this.#currentStep;\n    if (!currentStep) {\n      return State.Default;\n    }\n\n    const currentSection = this.#sections.find(\n                               section => section.steps.includes(currentStep),\n                               ) as Models.Section.Section;\n\n    if (!currentSection) {\n      if (this.#currentError) {\n        return State.Error;\n      }\n    }\n\n    if (section === currentSection) {\n      return State.Success;\n    }\n\n    const index = this.#sections.indexOf(currentSection);\n    const ownIndex = this.#sections.indexOf(section);\n    return index >= ownIndex ? State.Success : State.Outstanding;\n  }\n\n  #renderStep(\n      section: Models.Section.Section,\n      step: Models.Schema.Step,\n      isLastSection: boolean,\n      ): LitHtml.TemplateResult {\n    const stepIndex = this.#steps.indexOf(step);\n    // clang-format off\n    return LitHtml.html`\n      <${StepView.litTagName}\n      @click=${this.#onStepClick}\n      @mouseover=${this.#onStepHover}\n      @copystep=${this.#onCopyStepEvent}\n      .data=${\n        {\n          step,\n          state: this.#getStepState(step),\n          error: this.#currentStep === step ? this.#currentError : undefined,\n          isFirstSection: false,\n          isLastSection:\n            isLastSection && this.#steps[this.#steps.length - 1] === step,\n          isStartOfGroup: false,\n          isEndOfGroup: section.steps[section.steps.length - 1] === step,\n          stepIndex,\n          hasBreakpoint: this.#breakpointIndexes.has(stepIndex),\n          sectionIndex: -1,\n          isRecording: this.#isRecording,\n          isPlaying: this.#replayState.isPlaying,\n          removable: this.#steps.length > 1,\n          builtInConverters: this.#builtInConverters,\n          extensionConverters: this.#extensionConverters,\n          isSelected: this.#selectedStep === step,\n          recorderSettings: this.#recorderSettings,\n        } as StepViewData\n      }\n      ></${StepView.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #onStepHover = (event: MouseEvent): void => {\n    const stepView = event.target as StepView;\n    const step = stepView.step || stepView.section?.causingStep;\n    if (!step || this.#selectedStep) {\n      return;\n    }\n    this.#highlightCodeForStep(step);\n  };\n\n  #onStepClick(event: Event): void {\n    event.stopPropagation();\n    const stepView = event.target as StepView;\n    const selectedStep = stepView.step || stepView.section?.causingStep || null;\n    if (this.#selectedStep === selectedStep) {\n      return;\n    }\n    this.#selectedStep = selectedStep;\n    this.#render();\n    if (selectedStep) {\n      this.#highlightCodeForStep(selectedStep, /* scroll=*/ true);\n    }\n  }\n\n  #onWrapperClick(): void {\n    if (this.#selectedStep === undefined) {\n      return;\n    }\n    this.#selectedStep = undefined;\n    this.#render();\n  }\n\n  #onReplaySettingsKeydown(event: Event): void {\n    if ((event as KeyboardEvent).key !== 'Enter') {\n      return;\n    }\n    event.preventDefault();\n    this.#onToggleReplaySettings(event);\n  }\n\n  #onToggleReplaySettings(event: Event): void {\n    event.stopPropagation();\n    this.#replaySettingsExpanded = !this.#replaySettingsExpanded;\n    this.#render();\n  }\n\n  #onNetworkConditionsChange(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    const preset = networkConditionPresets.find(\n        preset => preset.i18nTitleKey === event.itemValue,\n    );\n    this.dispatchEvent(\n        new NetworkConditionsChanged(\n            preset?.i18nTitleKey === SDK.NetworkManager.NoThrottlingConditions.i18nTitleKey ? undefined : preset,\n            ),\n    );\n  }\n\n  #onTimeoutInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    if (!target.checkValidity()) {\n      target.reportValidity();\n      return;\n    }\n    this.dispatchEvent(new TimeoutChanged(Number(target.value)));\n  }\n\n  #onTitleBlur = (event: Event): void => {\n    const target = event.target as HTMLElement;\n    const title = target.innerText.trim();\n    if (!title) {\n      this.#isTitleInvalid = true;\n      this.#render();\n      return;\n    }\n    this.dispatchEvent(new RecordingTitleChangedEvent(title));\n  };\n\n  #onTitleInputKeyDown = (event: KeyboardEvent): void => {\n    switch (event.code) {\n      case 'Escape':\n      case 'Enter':\n        (event.target as HTMLElement).blur();\n        event.stopPropagation();\n        break;\n    }\n  };\n\n  #onEditTitleButtonClick = (): void => {\n    const input = this.#shadow.getElementById('title-input') as HTMLElement;\n    input.focus();\n    const range = document.createRange();\n    range.selectNodeContents(input);\n    range.collapse(false);\n    const selection = window.getSelection();\n    selection?.removeAllRanges();\n    selection?.addRange(range);\n  };\n\n  #onSelectMenuLabelClick = (event: Event): void => {\n    const target = event.target as HTMLElement;\n    if (target.matches('.wrapping-label')) {\n      target.querySelector('devtools-select-menu')?.click();\n    }\n  };\n\n  async #copyCurrentSelection(step?: Models.Schema.Step|null): Promise<void> {\n    let converter =\n        [\n          ...this.#builtInConverters,\n          ...this.#extensionConverters,\n        ]\n            .find(\n                converter => converter.getId() === this.#recorderSettings?.preferredCopyFormat,\n            );\n    if (!converter) {\n      converter = this.#builtInConverters[0];\n    }\n    if (!converter) {\n      throw new Error('No default converter found');\n    }\n\n    let text = '';\n    if (step) {\n      text = await converter.stringifyStep(step);\n    } else if (this.#userFlow) {\n      [text] = await converter.stringify(this.#userFlow);\n    }\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(text);\n    const metric = step ? converterIdToStepMetric(converter.getId()) : converterIdToFlowMetric(converter.getId());\n    Host.userMetrics.recordingCopiedToClipboard(metric);\n  }\n\n  #onCopyStepEvent(event: CopyStepEvent): void {\n    event.stopPropagation();\n    void this.#copyCurrentSelection(event.step);\n  }\n\n  async #onCopy(event: ClipboardEvent): Promise<void> {\n    if (event.target !== document.body) {\n      return;\n    }\n\n    event.preventDefault();\n    await this.#copyCurrentSelection(this.#selectedStep);\n    Host.userMetrics.keyboardShortcutFired(\n        'chrome_recorder.copy-recording-or-step',\n    );\n  }\n\n  #renderSettings(): LitHtml.TemplateResult {\n    if (!this.#settings) {\n      return LitHtml.html``;\n    }\n    const environmentFragments = [];\n    if (this.#settings.viewportSettings) {\n      // clang-format off\n      environmentFragments.push(\n        LitHtml.html`<div>${\n          this.#settings.viewportSettings.isMobile\n            ? i18nString(UIStrings.mobile)\n            : i18nString(UIStrings.desktop)\n        }</div>`,\n      );\n      environmentFragments.push(LitHtml.html`<div class=\"separator\"></div>`);\n      environmentFragments.push(\n        LitHtml.html`<div>${this.#settings.viewportSettings.width}×${\n          this.#settings.viewportSettings.height\n        } px</div>`,\n      );\n      // clang-format on\n    }\n    const replaySettingsFragments = [];\n    if (!this.#replaySettingsExpanded) {\n      if (this.#settings.networkConditionsSettings) {\n        if (this.#settings.networkConditionsSettings.title) {\n          // clang-format off\n          replaySettingsFragments.push(\n            LitHtml.html`<div>${\n              this.#settings.networkConditionsSettings.title\n            }</div>`,\n          );\n          // clang-format on\n        } else {\n          // clang-format off\n          replaySettingsFragments.push(LitHtml.html`<div>\n            ${i18nString(UIStrings.download, {\n              value: Platform.NumberUtilities.bytesToString(\n                this.#settings.networkConditionsSettings.download,\n              ),\n            })},\n            ${i18nString(UIStrings.upload, {\n              value: Platform.NumberUtilities.bytesToString(\n                this.#settings.networkConditionsSettings.upload,\n              ),\n            })},\n            ${i18nString(UIStrings.latency, {\n              value: this.#settings.networkConditionsSettings.latency,\n            })}\n          </div>`);\n          // clang-format on\n        }\n      } else {\n        // clang-format off\n        replaySettingsFragments.push(\n          LitHtml.html`<div>${\n            SDK.NetworkManager.NoThrottlingConditions.title instanceof Function\n              ? SDK.NetworkManager.NoThrottlingConditions.title()\n              : SDK.NetworkManager.NoThrottlingConditions.title\n          }</div>`,\n        );\n        // clang-format on\n      }\n      // clang-format off\n      replaySettingsFragments.push(LitHtml.html`<div class=\"separator\"></div>`);\n      replaySettingsFragments.push(\n        LitHtml.html`<div>${i18nString(UIStrings.timeout, {\n          value: this.#settings.timeout || Models.RecordingPlayer.defaultTimeout,\n        })}</div>`,\n      );\n      // clang-format on\n    } else {\n      // clang-format off\n      const selectedOption =\n        this.#settings.networkConditionsSettings?.i18nTitleKey ||\n        SDK.NetworkManager.NoThrottlingConditions.i18nTitleKey;\n      const selectedOptionTitle = networkConditionPresets.find(\n        preset => preset.i18nTitleKey === selectedOption,\n      );\n      let menuButtonTitle = '';\n      if (selectedOptionTitle) {\n        menuButtonTitle =\n          selectedOptionTitle.title instanceof Function\n            ? selectedOptionTitle.title()\n            : selectedOptionTitle.title;\n      }\n\n      replaySettingsFragments.push(LitHtml.html`<div class=\"editable-setting\">\n        <label class=\"wrapping-label\" @click=${this.#onSelectMenuLabelClick}>\n          ${i18nString(UIStrings.network)}\n          <${Menus.SelectMenu.SelectMenu.litTagName}\n            @selectmenuselected=${this.#onNetworkConditionsChange}\n            .disabled=${!this.#steps.find(step => step.type === 'navigate')}\n            .showDivider=${true}\n            .showArrow=${true}\n            .sideButton=${false}\n            .showSelectedItem=${true}\n            .showConnector=${false}\n            .position=${Dialogs.Dialog.DialogVerticalPosition.BOTTOM}\n            .buttonTitle=${menuButtonTitle}\n          >\n            ${networkConditionPresets.map(condition => {\n              return LitHtml.html`<${Menus.Menu.MenuItem.litTagName}\n                .value=${condition.i18nTitleKey}\n                .selected=${selectedOption === condition.i18nTitleKey}\n              >\n                ${\n                  condition.title instanceof Function\n                    ? condition.title()\n                    : condition.title\n                }\n              </${Menus.Menu.MenuItem.litTagName}>`;\n            })}\n          </${Menus.SelectMenu.SelectMenu.litTagName}>\n        </label>\n      </div>`);\n      replaySettingsFragments.push(LitHtml.html`<div class=\"editable-setting\">\n        <label class=\"wrapping-label\" title=${i18nString(\n          UIStrings.timeoutExplanation,\n        )}>\n          ${i18nString(UIStrings.timeoutLabel)}\n          <input\n            @input=${this.#onTimeoutInput}\n            required\n            min=${Models.SchemaUtils.minTimeout}\n            max=${Models.SchemaUtils.maxTimeout}\n            value=${\n              this.#settings.timeout || Models.RecordingPlayer.defaultTimeout\n            }\n            class=\"devtools-text-input\"\n            type=\"number\">\n        </label>\n      </div>`);\n      // clang-format on\n    }\n    const isEditable = !this.#isRecording && !this.#replayState.isPlaying;\n    const replaySettingsButtonClassMap = {\n      'settings-title': true,\n      expanded: this.#replaySettingsExpanded,\n    };\n    const replaySettingsClassMap = {\n      expanded: this.#replaySettingsExpanded,\n      settings: true,\n    };\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"settings-row\">\n        <div class=\"settings-container\">\n          <div\n            class=${LitHtml.Directives.classMap(replaySettingsButtonClassMap)}\n            @keydown=${isEditable && this.#onReplaySettingsKeydown}\n            @click=${isEditable && this.#onToggleReplaySettings}\n            tabindex=\"0\"\n            role=\"button\"\n            aria-label=${i18nString(UIStrings.editReplaySettings)}>\n            <span>${i18nString(UIStrings.replaySettings)}</span>\n            ${\n              isEditable\n                ? LitHtml.html`<${IconButton.Icon.Icon.litTagName}\n                    class=\"chevron\"\n                    .data=${\n                      {\n                        iconName: 'triangle-down',\n                        color: 'var(--color-text-primary)',\n                      } as IconButton.Icon.IconData\n                    }>\n                  </${IconButton.Icon.Icon.litTagName}>`\n                : ''\n            }\n          </div>\n          <div class=${LitHtml.Directives.classMap(replaySettingsClassMap)}>\n            ${\n              replaySettingsFragments.length\n                ? replaySettingsFragments\n                : LitHtml.html`<div>${i18nString(UIStrings.default)}</div>`\n            }\n          </div>\n        </div>\n        <div class=\"settings-container\">\n          <div class=\"settings-title\">${i18nString(UIStrings.environment)}</div>\n          <div class=\"settings\">\n            ${\n              environmentFragments.length\n                ? environmentFragments\n                : LitHtml.html`<div>${i18nString(UIStrings.default)}</div>`\n            }\n          </div>\n        </div>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #getCurrentConverter(): Converters.Converter.Converter|undefined {\n    const currentConverter = [\n      ...(this.#builtInConverters || []),\n      ...(this.#extensionConverters || []),\n    ].find(converter => converter.getId() === this.#converterId);\n    if (!currentConverter) {\n      return this.#builtInConverters[0];\n    }\n    return currentConverter;\n  }\n\n  #renderTimelineArea(): LitHtml.LitTemplate {\n    if (this.#extensionDescriptor) {\n      // clang-format off\n      return LitHtml.html`\n        <${ExtensionView.litTagName} .descriptor=${this.#extensionDescriptor}>\n        </${ExtensionView.litTagName}>\n      `;\n      // clang-format on\n    }\n    const currentConverter = this.#getCurrentConverter();\n    const converterFormatName = currentConverter?.getFormatName();\n    // clang-format off\n    return !this.#showCodeView\n      ? this.#renderSections()\n      : LitHtml.html`\n        <${SplitView.litTagName}>\n          <div slot=\"main\">\n            ${this.#renderSections()}\n          </div>\n          <div slot=\"sidebar\">\n            <div class=\"section-toolbar\">\n              <${Menus.SelectMenu.SelectMenu.litTagName}\n                @selectmenuselected=${this.#onCodeFormatChange}\n                .showDivider=${true}\n                .showArrow=${true}\n                .sideButton=${false}\n                .showSelectedItem=${true}\n                .showConnector=${false}\n                .position=${Dialogs.Dialog.DialogVerticalPosition.BOTTOM}\n                .buttonTitle=${converterFormatName}\n              >\n                ${this.#builtInConverters.map(converter => {\n                  return LitHtml.html`<${Menus.Menu.MenuItem.litTagName}\n                    .value=${converter.getId()}\n                    .selected=${this.#converterId === converter.getId()}\n                  >\n                    ${converter.getFormatName()}\n                  </${Menus.Menu.MenuItem.litTagName}>`;\n                })}\n                ${this.#extensionConverters.map(converter => {\n                  return LitHtml.html`<${Menus.Menu.MenuItem.litTagName}\n                    .value=${converter.getId()}\n                    .selected=${this.#converterId === converter.getId()}\n                  >\n                    ${converter.getFormatName()}\n                  </${Menus.Menu.MenuItem.litTagName}>`;\n                })}\n              </${Menus.SelectMenu.SelectMenu.litTagName}>\n              <${Buttons.Button.Button.litTagName}\n                title=${Models.Tooltip.getTooltipForActions(\n                  i18nString(UIStrings.hideCode),\n                  Actions.RecorderActions.ToggleCodeView,\n                )}\n                .data=${\n                  {\n                    variant: Buttons.Button.Variant.ROUND,\n                    size: Buttons.Button.Size.SMALL,\n                    iconName: 'cross',\n                  } as Buttons.Button.ButtonData\n                }\n                @click=${this.showCodeToggle}\n              ></${Buttons.Button.Button.litTagName}>\n            </div>\n            <div class=\"text-editor\">\n              <${TextEditor.TextEditor.TextEditor.litTagName} .state=${\n          this.#editorState\n        }></${TextEditor.TextEditor.TextEditor.litTagName}>\n            </div>\n          </div>\n        </${SplitView.litTagName}>\n      `;\n    // clang-format on\n  }\n\n  #renderScreenshot(\n      section: Models.Section.Section,\n      ): LitHtml.TemplateResult|null {\n    if (!section.screenshot) {\n      return null;\n    }\n\n    // clang-format off\n    return LitHtml.html`\n      <img class=\"screenshot\" src=${section.screenshot} alt=${i18nString(\n      UIStrings.screenshotForSection,\n    )} />\n    `;\n    // clang-format on\n  }\n\n  #renderReplayOrAbortButton(): LitHtml.TemplateResult {\n    if (this.#replayState.isPlaying) {\n      return LitHtml.html`\n        <${Buttons.Button.Button.litTagName} @click=${this.#handleAbortReplay} .iconName=${'pause'} .variant=${\n          Buttons.Button.Variant.SECONDARY}>\n          ${i18nString(UIStrings.cancelReplay)}\n        </${Buttons.Button.Button.litTagName}>`;\n    }\n\n    // clang-format off\n    return LitHtml.html`<${ReplayButton.litTagName}\n        .data=${\n          {\n            settings: this.#recorderSettings,\n            replayExtensions: this.#replayExtensions,\n          } as ReplayButtonData\n        }\n        .disabled=${this.#replayState.isPlaying}\n        @startreplay=${this.#handleTogglePlaying}\n        >\n      </${ReplayButton.litTagName}>`;\n    // clang-format on\n  }\n\n  #handleMeasurePerformanceClickEvent(event: Event): void {\n    event.stopPropagation();\n\n    this.dispatchEvent(\n        new PlayRecordingEvent({\n          targetPanel: TargetPanel.PerformancePanel,\n          speed: PlayRecordingSpeed.Normal,\n        }),\n    );\n  }\n\n  showCodeToggle = (): void => {\n    this.#showCodeView = !this.#showCodeView;\n    Host.userMetrics.recordingCodeToggled(\n        this.#showCodeView ? Host.UserMetrics.RecordingCodeToggled.CodeShown :\n                             Host.UserMetrics.RecordingCodeToggled.CodeHidden,\n    );\n    void this.#convertToCode();\n  };\n\n  #convertToCode = async(): Promise<void> => {\n    if (!this.#userFlow) {\n      return;\n    }\n    const converter = this.#getCurrentConverter();\n    if (!converter) {\n      return;\n    }\n    const [code, sourceMap] = await converter.stringify(this.#userFlow);\n    this.#code = code;\n    this.#sourceMap = sourceMap;\n    this.#sourceMap?.shift();\n    const mediaType = converter.getMediaType();\n    const languageSupport = mediaType ? await CodeHighlighter.CodeHighlighter.languageFromMIME(mediaType) : null;\n    this.#editorState = CodeMirror.EditorState.create({\n      doc: this.#code,\n      extensions: [\n        TextEditor.Config.baseConfiguration(this.#code),\n        CodeMirror.EditorState.readOnly.of(true),\n        CodeMirror.EditorView.lineWrapping,\n        languageSupport ? languageSupport : [],\n      ],\n    });\n    this.#render();\n    // Used by tests.\n    this.dispatchEvent(new Event('code-generated'));\n  };\n\n  #highlightCodeForStep = (step: Models.Schema.Step, scroll = false): void => {\n    if (!this.#sourceMap) {\n      return;\n    }\n\n    const stepIndex = this.#steps.indexOf(step);\n    if (stepIndex === -1) {\n      return;\n    }\n\n    const editor = this.#shadow.querySelector('devtools-text-editor') as | TextEditor.TextEditor.TextEditor | undefined;\n    if (!editor) {\n      return;\n    }\n\n    const cm = editor.editor;\n    if (!cm) {\n      return;\n    }\n\n    const line = this.#sourceMap[stepIndex * 2];\n    const length = this.#sourceMap[stepIndex * 2 + 1];\n\n    let selection = editor.createSelection(\n        {lineNumber: line + length, columnNumber: 0},\n        {lineNumber: line, columnNumber: 0},\n    );\n    const lastLine = editor.state.doc.lineAt(selection.main.anchor);\n    selection = editor.createSelection(\n        {lineNumber: line + length - 1, columnNumber: lastLine.length + 1},\n        {lineNumber: line, columnNumber: 0},\n    );\n\n    cm.dispatch({\n      selection,\n      effects: scroll ?\n          [\n            CodeMirror.EditorView.scrollIntoView(selection.main, {\n              y: 'nearest',\n            }),\n          ] :\n          undefined,\n    });\n  };\n\n  #onCodeFormatChange = (event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void => {\n    this.#converterId = event.itemValue as string;\n    if (this.#recorderSettings) {\n      this.#recorderSettings.preferredCopyFormat = event.itemValue as string;\n    }\n\n    void this.#convertToCode();\n  };\n\n  #renderSections(): LitHtml.LitTemplate {\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"sections\">\n      ${\n        !this.#showCodeView\n          ? LitHtml.html`<div class=\"section-toolbar\">\n        <${Buttons.Button.Button.litTagName}\n          @click=${this.showCodeToggle}\n          class=\"show-code\"\n          .data=${\n            {\n              variant: Buttons.Button.Variant.SECONDARY,\n              title: Models.Tooltip.getTooltipForActions(\n                i18nString(UIStrings.showCode),\n                Actions.RecorderActions.ToggleCodeView,\n              ),\n            } as Buttons.Button.ButtonData\n          }\n        >\n          ${i18nString(UIStrings.showCode)}\n        </${Buttons.Button.Button.litTagName}>\n      </div>`\n          : ''\n      }\n      ${this.#sections.map(\n        (section, i) => LitHtml.html`\n            <div class=\"section\">\n              <div class=\"screenshot-wrapper\">\n                ${this.#renderScreenshot(section)}\n              </div>\n              <div class=\"content\">\n                <div class=\"steps\">\n                  <${StepView.litTagName}\n                    @click=${this.#onStepClick}\n                    @mouseover=${this.#onStepHover}\n                    .data=${\n                      {\n                        section,\n                        state: this.#getSectionState(section),\n                        isStartOfGroup: true,\n                        isEndOfGroup: section.steps.length === 0,\n                        isFirstSection: i === 0,\n                        isLastSection:\n                          i === this.#sections.length - 1 &&\n                          section.steps.length === 0,\n                        isSelected:\n                          this.#selectedStep === (section.causingStep || null),\n                        sectionIndex: i,\n                        isRecording: this.#isRecording,\n                        isPlaying: this.#replayState.isPlaying,\n                        error:\n                          this.#getSectionState(section) === State.Error\n                            ? this.#currentError\n                            : undefined,\n                        hasBreakpoint: false,\n                        removable: this.#steps.length > 1 && section.causingStep,\n                      } as StepViewData\n                    }\n                  >\n                  </${StepView.litTagName}>\n                  ${section.steps.map(step =>\n                    this.#renderStep(\n                      section,\n                      step,\n                      i === this.#sections.length - 1,\n                    ),\n                  )}\n                  ${!this.#recordingTogglingInProgress && this.#isRecording && i === this.#sections.length - 1 ? LitHtml.html`<devtools-button\n                    class=\"step add-assertion-button\"\n                    .data=${\n                      {\n                        variant: Buttons.Button.Variant.SECONDARY,\n                        title: i18nString(UIStrings.addAssertion),\n                      } as Buttons.Button.ButtonData\n                    }\n                    @click=${this.#dispatchAddAssertionEvent}\n                  >${i18nString(UIStrings.addAssertion)}</devtools-button>` : undefined}\n                  ${\n                    this.#isRecording && i === this.#sections.length - 1\n                      ? LitHtml.html`<div class=\"step recording\">${i18nString(\n                          UIStrings.recording,\n                        )}</div>`\n                      : null\n                  }\n                </div>\n              </div>\n            </div>\n      `,\n      )}\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #renderHeader(): LitHtml.LitTemplate|string {\n    if (!this.#userFlow) {\n      return '';\n    }\n    const {title} = this.#userFlow;\n    const isTitleEditable = !this.#replayState.isPlaying && !this.#isRecording;\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"header\">\n        <div class=\"header-title-wrapper\">\n          <div class=\"header-title\">\n            <span @blur=${this.#onTitleBlur}\n                  @keydown=${this.#onTitleInputKeyDown}\n                  id=\"title-input\"\n                  .contentEditable=${isTitleEditable ? 'true' : 'false'}\n                  class=${LitHtml.Directives.classMap({\n                    'has-error': this.#isTitleInvalid,\n                    'disabled': !isTitleEditable,\n                  })}\n                  .innerText=${LitHtml.Directives.live(title)}></span>\n            <div class=\"title-button-bar\">\n              <${Buttons.Button.Button.litTagName}\n                @click=${this.#onEditTitleButtonClick}\n                .data=${\n                  {\n                    disabled: !isTitleEditable,\n                    variant: Buttons.Button.Variant.TOOLBAR,\n                    iconName: 'edit',\n                    title: i18nString(UIStrings.editTitle),\n                  } as Buttons.Button.ButtonData\n                }\n              ></${Buttons.Button.Button.litTagName}>\n            </div>\n          </div>\n          ${\n            this.#isTitleInvalid\n              ? LitHtml.html`<div class=\"title-input-error-text\">\n            ${\n              i18nString(UIStrings.requiredTitleError)\n            }\n          </div>`\n              : ''\n          }\n        </div>\n        ${\n          !this.#isRecording && this.#replayAllowed\n            ? LitHtml.html`<div class=\"actions\">\n                <${Buttons.Button.Button.litTagName}\n                  @click=${this.#handleMeasurePerformanceClickEvent}\n                  .data=${\n                    {\n                      disabled: this.#replayState.isPlaying,\n                      variant: Buttons.Button.Variant.SECONDARY,\n                      iconName: 'performance',\n                      title: i18nString(UIStrings.performancePanel),\n                    } as Buttons.Button.ButtonData\n                  }\n                >\n                  ${i18nString(UIStrings.performancePanel)}\n                </${Buttons.Button.Button.litTagName}>\n                ${this.#renderReplayOrAbortButton()}\n              </div>`\n            : ''\n        }\n      </div>`;\n    // clang-format on\n  }\n\n  #renderFooter(): LitHtml.LitTemplate|string {\n    if (!this.#isRecording) {\n      return '';\n    }\n    const translation = this.#recordingTogglingInProgress ? i18nString(UIStrings.recordingIsBeingStopped) :\n                                                            i18nString(UIStrings.endRecording);\n    // clang-format off\n    return LitHtml.html`\n      <div class=\"footer\">\n        <div class=\"controls\">\n          <devtools-control-button\n            @click=${this.#dispatchRecordingFinished}\n            .disabled=${this.#recordingTogglingInProgress}\n            .shape=${'square'}\n            .label=${translation}\n            title=${Models.Tooltip.getTooltipForActions(\n              translation,\n              Actions.RecorderActions.StartRecording,\n            )}\n          >\n          </devtools-control-button>\n        </div>\n      </div>\n    `;\n    // clang-format on\n  }\n\n  #render(): void {\n    const classNames = {\n      wrapper: true,\n      'is-recording': this.#isRecording,\n      'is-playing': this.#replayState.isPlaying,\n      'was-successful': this.#lastReplayResult === Models.RecordingPlayer.ReplayResult.Success,\n      'was-failure': this.#lastReplayResult === Models.RecordingPlayer.ReplayResult.Failure,\n    };\n\n    // clang-format off\n    LitHtml.render(\n      LitHtml.html`\n      <div @click=${this.#onWrapperClick} class=${LitHtml.Directives.classMap(\n        classNames,\n      )}>\n        <div class=\"main\">\n          ${this.#renderHeader()}\n          ${\n            this.#extensionDescriptor\n              ? LitHtml.html`\n            <${ExtensionView.litTagName} .descriptor=${\n                  this.#extensionDescriptor\n                }>\n            </${ExtensionView.litTagName}>\n          `\n              : LitHtml.html`\n            ${this.#renderSettings()}\n            ${this.#renderTimelineArea()}\n          `\n          }\n          ${this.#renderFooter()}\n        </div>\n      </div>\n    `,\n      this.#shadow,\n      { host: this },\n    );\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent(\n    'devtools-recording-view',\n    RecordingView,\n);\n"]}