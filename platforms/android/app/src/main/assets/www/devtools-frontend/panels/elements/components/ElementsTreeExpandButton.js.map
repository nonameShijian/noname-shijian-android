{"version":3,"file":"ElementsTreeExpandButton.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/ElementsTreeExpandButton.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,gBAAgB,MAAM,2CAA2C,CAAC;AAC9E,OAAO,KAAK,OAAO,MAAM,kCAAkC,CAAC;AAE5D,OAAO,8BAA8B,MAAM,mCAAmC,CAAC;AAK/E,MAAM,OAAO,wBAAyB,SAAQ,WAAW;IACvD,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,sCAAsC,CAAC;IAC1E,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,aAAa,GAA8B,GAAG,EAAE,GAAE,CAAC,CAAC;IAEpD,IAAI,IAAI,CAAC,IAAkC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,8BAA8B,CAAC,CAAC;IACrE,CAAC;IAED,OAAO;QACL,mBAAmB;QACnB,6EAA6E;QAC7E,wFAAwF;QACxF,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;;iBAEd,IAAI,CAAC,aAAa,qFAAqF,EAClH,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC9B,kBAAkB;IACpB,CAAC;;AAGH,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,sCAAsC,EAAE,wBAAwB,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport elementsTreeExpandButtonStyles from './elementsTreeExpandButton.css.js';\n\nexport interface ElementsTreeExpandButtonData {\n  clickHandler: (event?: Event) => void;\n}\nexport class ElementsTreeExpandButton extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-elements-tree-expand-button`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #clickHandler: ((event?: Event) => void) = () => {};\n\n  set data(data: ElementsTreeExpandButtonData) {\n    this.#clickHandler = data.clickHandler;\n    this.#update();\n  }\n\n  #update(): void {\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [elementsTreeExpandButtonStyles];\n  }\n\n  #render(): void {\n    // clang-format off\n    // This button's innerText will be tested by e2e test and blink layout tests.\n    // It can't have any other characters like '\\n' or space, otherwise it will break tests.\n    LitHtml.render(LitHtml.html`<span\n        class=\"expand-button\"\n        @click=${this.#clickHandler}><span class=\"dot\"></span><span class=\"dot\"></span><span class=\"dot\"></span></span>`,\n      this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-elements-tree-expand-button', ElementsTreeExpandButton);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-elements-tree-expand-button': ElementsTreeExpandButton;\n  }\n}\n"]}