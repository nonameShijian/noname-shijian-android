{"version":3,"file":"MarkdownView.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/markdown_view/MarkdownView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport type * as Marked from '../../../third_party/marked/marked.js';\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport markdownViewStyles from './markdownView.css.js';\n\nimport {MarkdownLink, type MarkdownLinkData} from './MarkdownLink.js';\nimport {MarkdownImage, type MarkdownImageData} from './MarkdownImage.js';\n\nconst html = LitHtml.html;\nconst render = LitHtml.render;\n\nexport interface MarkdownViewData {\n  tokens: Marked.Marked.Token[];\n}\n\nexport class MarkdownView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-markdown-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #tokenData: readonly Marked.Marked.Token[] = [];\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [markdownViewStyles];\n  }\n\n  set data(data: MarkdownViewData) {\n    this.#tokenData = data.tokens;\n    this.#update();\n  }\n\n  #update(): void {\n    this.#render();\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class='message'>\n        ${this.#tokenData.map(renderToken)}\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-markdown-view', MarkdownView);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-markdown-view': MarkdownView;\n  }\n}\n\nconst renderChildTokens = (token: Marked.Marked.Token): LitHtml.TemplateResult[] => {\n  if ('tokens' in token && token.tokens) {\n    return token.tokens.map(renderToken);\n  }\n  throw new Error('Tokens not found');\n};\n\nconst unescape = (text: string): string => {\n  // Unescape will get rid of the escaping done by Marked to avoid double escaping due to escaping it also with Lit-html\n  // Table taken from: front_end/third_party/marked/package/src/helpers.js\n  const escapeReplacements = new Map<string, string>([\n    ['&amp;', '&'],\n    ['&lt;', '<'],\n    ['&gt;', '>'],\n    ['&quot;', '\"'],\n    ['&#39;', '\\''],\n  ]);\n  return text.replace(/&(amp|lt|gt|quot|#39);/g, (matchedString: string) => {\n    const replacement = escapeReplacements.get(matchedString);\n    return replacement ? replacement : matchedString;\n  });\n};\n\nconst renderText = (token: Marked.Marked.Token): LitHtml.TemplateResult => {\n  if ('tokens' in token && token.tokens) {\n    return html`${renderChildTokens(token)}`;\n  }\n  // Due to unescaping, unescaped html entities (see escapeReplacements' keys) will be rendered\n  // as their corresponding symbol while the rest will be rendered as verbatim.\n  // Marked's escape function can be found in front_end/third_party/marked/package/src/helpers.js\n  return html`${unescape('text' in token ? token.text : '')}`;\n};\n\nconst renderHeading = (heading: Marked.Marked.Tokens.Heading): LitHtml.TemplateResult => {\n  switch (heading.depth) {\n    case 1:\n      return html`<h1>${renderText(heading)}</h1>`;\n    case 2:\n      return html`<h2>${renderText(heading)}</h2>`;\n    case 3:\n      return html`<h3>${renderText(heading)}</h3>`;\n    case 4:\n      return html`<h4>${renderText(heading)}</h4>`;\n    case 5:\n      return html`<h5>${renderText(heading)}</h5>`;\n    default:\n      return html`<h6>${renderText(heading)}</h6>`;\n  }\n};\n\nfunction templateForToken(token: Marked.Marked.Token): LitHtml.TemplateResult|null {\n  switch (token.type) {\n    case 'paragraph':\n      return html`<p>${renderChildTokens(token)}`;\n    case 'list':\n      return html`<ul>${token.items.map(renderToken)}</ul>`;\n    case 'list_item':\n      return html`<li>${renderChildTokens(token)}`;\n    case 'text':\n      return renderText(token);\n    case 'codespan':\n      return html`<code>${unescape(token.text)}</code>`;\n    case 'space':\n      return html``;\n    case 'link':\n      return html`<${MarkdownLink.litTagName} .data=${{key: token.href, title: token.text} as MarkdownLinkData}></${\n          MarkdownLink.litTagName}>`;\n    case 'image':\n      return html`<${MarkdownImage.litTagName} .data=${{key: token.href, title: token.text} as MarkdownImageData}></${\n          MarkdownImage.litTagName}>`;\n    case 'heading':\n      return renderHeading(token);\n    case 'strong':\n      return html`<strong>${renderText(token)}</strong>`;\n    case 'em':\n      return html`<em>${renderText(token)}</em>`;\n    default:\n      return null;\n  }\n}\n\nexport const renderToken = (token: Marked.Marked.Token): LitHtml.TemplateResult => {\n  const template = templateForToken(token);\n  if (template === null) {\n    throw new Error(`Markdown token type '${token.type}' not supported.`);\n  }\n  return template;\n};\n"]}