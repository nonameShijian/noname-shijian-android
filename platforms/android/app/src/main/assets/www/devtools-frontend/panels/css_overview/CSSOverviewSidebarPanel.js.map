{"version":3,"file":"CSSOverviewSidebarPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/css_overview/CSSOverviewSidebarPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport cssOverviewSidebarPanelStyles from './cssOverviewSidebarPanel.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for the 'Clear overview' button in the CSS Overview report\n   */\n  clearOverview: 'Clear overview',\n  /**\n   * @description Accessible label for the CSS Overview panel sidebar\n   */\n  cssOverviewPanelSidebar: 'CSS Overview panel sidebar',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewSidebarPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class CSSOverviewSidebarPanel extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(\n    UI.Widget.VBox) {\n  containerElement: HTMLDivElement;\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static get ITEM_CLASS_NAME(): string {\n    return 'overview-sidebar-panel-item';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static get SELECTED(): string {\n    return 'selected';\n  }\n\n  constructor() {\n    super(true);\n\n    this.contentElement.classList.add('overview-sidebar-panel');\n    this.contentElement.addEventListener('click', this.#onItemClick.bind(this));\n    this.contentElement.addEventListener('keydown', this.#onItemKeyDown.bind(this));\n\n    // We need a container so that each item covers the full width of the\n    // longest item, so that the selected item's background expands fully\n    // even when the sidebar overflows.\n    // Also see crbug/1408003\n    this.containerElement =\n        this.contentElement.createChild('div', 'overview-sidebar-panel-container') as HTMLDivElement;\n    UI.ARIAUtils.setLabel(this.containerElement, i18nString(UIStrings.cssOverviewPanelSidebar));\n    UI.ARIAUtils.markAsTree(this.containerElement);\n\n    // Clear overview.\n    const clearResultsButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearOverview), 'clear');\n    clearResultsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.#reset, this);\n\n    // Toolbar.\n    const toolbarElement = this.containerElement.createChild('div', 'overview-toolbar');\n    const toolbar = new UI.Toolbar.Toolbar('', toolbarElement);\n    toolbar.appendToolbarItem(clearResultsButton);\n  }\n\n  addItem(name: string, id: string): void {\n    const item = this.containerElement.createChild('div', CSSOverviewSidebarPanel.ITEM_CLASS_NAME);\n    UI.ARIAUtils.markAsTreeitem(item);\n    item.textContent = name;\n    item.dataset.id = id;\n    item.tabIndex = 0;\n  }\n\n  #reset(): void {\n    this.dispatchEventToListeners(SidebarEvents.Reset);\n  }\n\n  #deselectAllItems(): void {\n    const items = this.containerElement.querySelectorAll(`.${CSSOverviewSidebarPanel.ITEM_CLASS_NAME}`);\n    items.forEach(item => {\n      item.classList.remove(CSSOverviewSidebarPanel.SELECTED);\n    });\n  }\n\n  #onItemClick(event: Event): void {\n    const target = (event.composedPath()[0] as HTMLElement);\n    if (!target.classList.contains(CSSOverviewSidebarPanel.ITEM_CLASS_NAME)) {\n      return;\n    }\n\n    const {id} = target.dataset;\n    if (!id) {\n      return;\n    }\n    this.select(id);\n    this.dispatchEventToListeners(SidebarEvents.ItemSelected, {id, isMouseEvent: true});\n  }\n\n  #onItemKeyDown(event: KeyboardEvent): void {\n    if (event.key !== 'Enter') {\n      return;\n    }\n    const target = (event.composedPath()[0] as HTMLElement);\n    if (!target.classList.contains(CSSOverviewSidebarPanel.ITEM_CLASS_NAME)) {\n      return;\n    }\n\n    const {id} = target.dataset;\n    if (!id) {\n      return;\n    }\n    this.select(id);\n    this.dispatchEventToListeners(SidebarEvents.ItemSelected, {id, isMouseEvent: false});\n    event.consume(true);\n  }\n\n  select(id: string): void {\n    const target = this.containerElement.querySelector(`[data-id=${CSS.escape(id)}]`);\n    if (!target) {\n      return;\n    }\n\n    if (target.classList.contains(CSSOverviewSidebarPanel.SELECTED)) {\n      return;\n    }\n\n    this.#deselectAllItems();\n    target.classList.add(CSSOverviewSidebarPanel.SELECTED);\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([cssOverviewSidebarPanelStyles]);\n  }\n}\n\nexport const enum SidebarEvents {\n  ItemSelected = 'ItemSelected',\n  Reset = 'Reset',\n}\n\nexport interface ItemSelectedEvent {\n  id: string;\n  isMouseEvent: boolean;\n}\n\nexport type EventTypes = {\n  [SidebarEvents.ItemSelected]: ItemSelectedEvent,\n  [SidebarEvents.Reset]: void,\n};\n"]}