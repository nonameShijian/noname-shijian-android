{"version":3,"file":"SourceMapManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/SourceMapManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {type FrameAssociated} from './FrameAssociated.js';\n\nimport {Type, type Target} from './Target.js';\nimport {Events as TargetManagerEvents, TargetManager} from './TargetManager.js';\n\nimport {PageResourceLoader, type PageResourceLoadInitiator} from './PageResourceLoader.js';\n\nimport {parseSourceMap, SourceMap, type SourceMapV3} from './SourceMap.js';\n\nexport class SourceMapManager<T extends FrameAssociated> extends Common.ObjectWrapper.ObjectWrapper<EventTypes<T>> {\n  readonly #target: Target;\n  #isEnabled: boolean;\n  readonly #clientData: Map<T, ClientData>;\n  readonly #sourceMaps: Map<SourceMap, T>;\n\n  constructor(target: Target) {\n    super();\n\n    this.#target = target;\n    this.#isEnabled = true;\n    this.#clientData = new Map();\n    this.#sourceMaps = new Map();\n\n    TargetManager.instance().addEventListener(TargetManagerEvents.InspectedURLChanged, this.inspectedURLChanged, this);\n  }\n\n  setEnabled(isEnabled: boolean): void {\n    if (isEnabled === this.#isEnabled) {\n      return;\n    }\n\n    // We need this copy, because `this.#clientData` is getting modified\n    // in the loop body and trying to iterate over it at the same time\n    // leads to an infinite loop.\n    const clientData = [...this.#clientData.entries()];\n    for (const [client] of clientData) {\n      this.detachSourceMap(client);\n    }\n    this.#isEnabled = isEnabled;\n    for (const [client, {relativeSourceURL, relativeSourceMapURL}] of clientData) {\n      this.attachSourceMap(client, relativeSourceURL, relativeSourceMapURL);\n    }\n  }\n\n  private static getBaseUrl(target: Target|null): Platform.DevToolsPath.UrlString {\n    while (target && target.type() !== Type.Frame) {\n      target = target.parentTarget();\n    }\n    return target?.inspectedURL() ?? Platform.DevToolsPath.EmptyUrlString;\n  }\n\n  static resolveRelativeSourceURL(target: Target|null, url: Platform.DevToolsPath.UrlString):\n      Platform.DevToolsPath.UrlString {\n    url = Common.ParsedURL.ParsedURL.completeURL(SourceMapManager.getBaseUrl(target), url) ?? url;\n    return url;\n  }\n\n  private inspectedURLChanged(event: Common.EventTarget.EventTargetEvent<Target>): void {\n    if (event.data !== this.#target) {\n      return;\n    }\n\n    // We need this copy, because `this.#clientData` is getting modified\n    // in the loop body and trying to iterate over it at the same time\n    // leads to an infinite loop.\n    const clientData = [...this.#clientData.entries()];\n    for (const [client, {relativeSourceURL, relativeSourceMapURL}] of clientData) {\n      this.detachSourceMap(client);\n      this.attachSourceMap(client, relativeSourceURL, relativeSourceMapURL);\n    }\n  }\n\n  sourceMapForClient(client: T): SourceMap|undefined {\n    return this.#clientData.get(client)?.sourceMap;\n  }\n\n  // This method actively awaits the source map, if still loading.\n  sourceMapForClientPromise(client: T): Promise<SourceMap|undefined> {\n    const clientData = this.#clientData.get(client);\n    if (!clientData) {\n      return Promise.resolve(undefined);\n    }\n\n    return clientData.sourceMapPromise;\n  }\n\n  clientForSourceMap(sourceMap: SourceMap): T|undefined {\n    return this.#sourceMaps.get(sourceMap);\n  }\n\n  // TODO(bmeurer): We are lying about the type of |relativeSourceURL| here.\n  attachSourceMap(\n      client: T, relativeSourceURL: Platform.DevToolsPath.UrlString, relativeSourceMapURL: string|undefined): void {\n    if (this.#clientData.has(client)) {\n      throw new Error('SourceMap is already attached or being attached to client');\n    }\n    if (!relativeSourceMapURL) {\n      return;\n    }\n\n    const clientData: ClientData = {\n      relativeSourceURL,\n      relativeSourceMapURL,\n      sourceMap: undefined,\n      sourceMapPromise: Promise.resolve(undefined),\n    };\n    if (this.#isEnabled) {\n      // The `// #sourceURL=foo` can be a random string, but is generally an absolute path.\n      // Complete it to inspected page url for relative links.\n      const sourceURL = SourceMapManager.resolveRelativeSourceURL(this.#target, relativeSourceURL);\n      const sourceMapURL = Common.ParsedURL.ParsedURL.completeURL(sourceURL, relativeSourceMapURL);\n      if (sourceMapURL) {\n        this.dispatchEventToListeners(Events.SourceMapWillAttach, {client});\n\n        const initiator = client.createPageResourceLoadInitiator();\n        clientData.sourceMapPromise =\n            loadSourceMap(sourceMapURL, initiator)\n                .then(\n                    payload => {\n                      const sourceMap = new SourceMap(sourceURL, sourceMapURL, payload);\n                      if (this.#clientData.get(client) === clientData) {\n                        clientData.sourceMap = sourceMap;\n                        this.#sourceMaps.set(sourceMap, client);\n                        this.dispatchEventToListeners(Events.SourceMapAttached, {client, sourceMap});\n                      }\n                      return sourceMap;\n                    },\n                    error => {\n                      Common.Console.Console.instance().warn(`DevTools failed to load source map: ${error.message}`);\n                      if (this.#clientData.get(client) === clientData) {\n                        this.dispatchEventToListeners(Events.SourceMapFailedToAttach, {client});\n                      }\n                      return undefined;\n                    });\n      }\n    }\n    this.#clientData.set(client, clientData);\n  }\n\n  detachSourceMap(client: T): void {\n    const clientData = this.#clientData.get(client);\n    if (!clientData) {\n      return;\n    }\n    this.#clientData.delete(client);\n    if (!this.#isEnabled) {\n      return;\n    }\n    const {sourceMap} = clientData;\n    if (sourceMap) {\n      this.#sourceMaps.delete(sourceMap);\n      this.dispatchEventToListeners(Events.SourceMapDetached, {client, sourceMap});\n    } else {\n      this.dispatchEventToListeners(Events.SourceMapFailedToAttach, {client});\n    }\n  }\n\n  dispose(): void {\n    TargetManager.instance().removeEventListener(\n        TargetManagerEvents.InspectedURLChanged, this.inspectedURLChanged, this);\n  }\n}\n\nasync function loadSourceMap(\n    url: Platform.DevToolsPath.UrlString, initiator: PageResourceLoadInitiator): Promise<SourceMapV3> {\n  try {\n    const {content} = await PageResourceLoader.instance().loadResource(url, initiator);\n    return parseSourceMap(content);\n  } catch (cause) {\n    throw new Error(`Could not load content for ${url}: ${cause.message}`, {cause});\n  }\n}\n\ntype ClientData = {\n  relativeSourceURL: Platform.DevToolsPath.UrlString,\n  // Stores the raw sourceMappingURL as provided by V8. These are not guaranteed to\n  // be valid URLs and will be checked and resolved once `attachSourceMap` is called.\n  relativeSourceMapURL: string,\n  sourceMap: SourceMap|undefined,\n  sourceMapPromise: Promise<SourceMap|undefined>,\n};\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  SourceMapWillAttach = 'SourceMapWillAttach',\n  SourceMapFailedToAttach = 'SourceMapFailedToAttach',\n  SourceMapAttached = 'SourceMapAttached',\n  SourceMapDetached = 'SourceMapDetached',\n}\n\nexport type EventTypes<T extends FrameAssociated> = {\n  [Events.SourceMapWillAttach]: {client: T},\n  [Events.SourceMapFailedToAttach]: {client: T},\n  [Events.SourceMapAttached]: {client: T, sourceMap: SourceMap},\n  [Events.SourceMapDetached]: {client: T, sourceMap: SourceMap},\n};\n"]}