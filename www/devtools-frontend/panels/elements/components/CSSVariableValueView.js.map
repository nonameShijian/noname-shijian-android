{"version":3,"file":"CSSVariableValueView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/CSSVariableValueView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,gBAAgB,MAAM,2CAA2C,CAAC;AAC9E,OAAO,KAAK,OAAO,MAAM,kCAAkC,CAAC;AAE5D,OAAO,0BAA0B,MAAM,+BAA+B,CAAC;AAEvE,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,OAAO,CAAC;AAE/B,MAAM,OAAO,oBAAqB,SAAQ,WAAW;IACnD,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,kCAAkC,CAAC;IACtE,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAC5C,cAAc,CAAS;IAEhC,YAAY,OAAe;QACzB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAC/D,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAA;oDACqC,IAAI,CAAC,cAAc;OAChE,EAAE,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QACH,kBAAkB;IACpB,CAAC;;AAGH,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,kCAAkC,EAAE,oBAAoB,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport cssVariableValueViewStyles from './cssVariableValueView.css.js';\n\nconst {render, html} = LitHtml;\n\nexport class CSSVariableValueView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-css-variable-value-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #variableValue: String;\n\n  constructor(content: String) {\n    super();\n    this.#variableValue = content;\n    this.#shadow.adoptedStyleSheets = [cssVariableValueViewStyles];\n    this.#render();\n  }\n\n  #render(): void {\n    // clang-format off\n    render(html`\n        <div class=\"variable-value-popup-wrapper\">${this.#variableValue}</div>\n      `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-css-variable-value-view', CSSVariableValueView);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-css-variable-value-view': CSSVariableValueView;\n  }\n}\n"]}