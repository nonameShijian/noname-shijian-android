{"version":3,"file":"CoverageView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/coverage/CoverageView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {CoverageDecorationManager} from './CoverageDecorationManager.js';\nimport {CoverageListView} from './CoverageListView.js';\nimport coverageViewStyles from './coverageView.css.js';\n\nimport {CoverageModel, Events, CoverageType, type CoverageInfo, type URLCoverageInfo} from './CoverageModel.js';\n\nconst UIStrings = {\n  /**\n   *@description Tooltip in Coverage List View of the Coverage tab for selecting JavaScript coverage mode\n   */\n  chooseCoverageGranularityPer:\n      'Choose coverage granularity: Per function has low overhead, per block has significant overhead.',\n  /**\n   *@description Text in Coverage List View of the Coverage tab\n   */\n  perFunction: 'Per function',\n  /**\n   *@description Text in Coverage List View of the Coverage tab\n   */\n  perBlock: 'Per block',\n  /**\n   *@description Text to clear everything\n   */\n  clearAll: 'Clear all',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon download button in the Coverage View of the Coverage tab\n   */\n  export: 'Export...',\n  /**\n   *@description Text in Coverage View of the Coverage tab\n   */\n  urlFilter: 'URL filter',\n  /**\n   *@description Label for the type filter in the Converage Panel\n   */\n  filterCoverageByType: 'Filter coverage by type',\n  /**\n   *@description Text for everything\n   */\n  all: 'All',\n  /**\n   *@description Text that appears on a button for the css resource type filter.\n   */\n  css: 'CSS',\n  /**\n   *@description Text in Timeline Tree View of the Performance panel\n   */\n  javascript: 'JavaScript',\n  /**\n   *@description Tooltip text that appears on the setting when hovering over it in Coverage View of the Coverage tab\n   */\n  includeExtensionContentScripts: 'Include extension content scripts',\n  /**\n   *@description Title for a type of source files\n   */\n  contentScripts: 'Content scripts',\n  /**\n   *@description Message in Coverage View of the Coverage tab\n   *@example {record button icon} PH1\n   */\n  clickTheReloadButtonSToReloadAnd: 'Click the reload button {PH1} to reload and start capturing coverage.',\n  /**\n   *@description Message in Coverage View of the Coverage tab\n   *@example {record button icon} PH1\n   */\n  clickTheRecordButtonSToStart: 'Click the record button {PH1} to start capturing coverage.',\n  /**\n   *@description Message in the Coverage View explaining that DevTools could not capture coverage.\n   */\n  bfcacheNoCapture: 'Could not capture coverage info because the page was served from the back/forward cache.',\n  /**\n   *@description  Message in the Coverage View explaining that DevTools could not capture coverage.\n   */\n  activationNoCapture: 'Could not capture coverage info because the page was prerendered in the background.',\n  /**\n   *@description  Message in the Coverage View prompting the user to reload the page.\n   *@example {reload button icon} PH1\n   */\n  reloadPrompt: 'Click the reload button {PH1} to reload and get coverage.',\n\n  /**\n   *@description Footer message in Coverage View of the Coverage tab\n   *@example {300k used, 600k unused} PH1\n   *@example {500k used, 800k unused} PH2\n   */\n  filteredSTotalS: 'Filtered: {PH1}  Total: {PH2}',\n  /**\n   *@description Footer message in Coverage View of the Coverage tab\n   *@example {1.5 MB} PH1\n   *@example {2.1 MB} PH2\n   *@example {71%} PH3\n   *@example {29%} PH4\n   */\n  sOfSSUsedSoFarSUnused: '{PH1} of {PH2} ({PH3}%) used so far, {PH4} unused.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/coverage/CoverageView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet coverageViewInstance: CoverageView|undefined;\n\nexport class CoverageView extends UI.Widget.VBox {\n  private model: CoverageModel|null;\n  private decorationManager: CoverageDecorationManager|null;\n  private readonly coverageTypeComboBox: UI.Toolbar.ToolbarComboBox;\n  private readonly coverageTypeComboBoxSetting: Common.Settings.Setting<number>;\n  private toggleRecordAction: UI.ActionRegistration.Action;\n  private readonly toggleRecordButton: UI.Toolbar.ToolbarButton;\n  private inlineReloadButton: Element|null;\n  private readonly startWithReloadButton: UI.Toolbar.ToolbarButton|undefined;\n  private readonly clearButton: UI.Toolbar.ToolbarButton;\n  private readonly saveButton: UI.Toolbar.ToolbarButton;\n  private textFilterRegExp: RegExp|null;\n  private readonly filterInput: UI.Toolbar.ToolbarInput;\n  private typeFilterValue: number|null;\n  private readonly filterByTypeComboBox: UI.Toolbar.ToolbarComboBox;\n  private showContentScriptsSetting: Common.Settings.Setting<boolean>;\n  private readonly contentScriptsCheckbox: UI.Toolbar.ToolbarSettingCheckbox;\n  private readonly coverageResultsElement: HTMLElement;\n  private readonly landingPage: UI.Widget.VBox;\n  private readonly bfcacheReloadPromptPage: UI.Widget.VBox;\n  private readonly activationReloadPromptPage: UI.Widget.VBox;\n  private listView: CoverageListView;\n  private readonly statusToolbarElement: HTMLElement;\n  private statusMessageElement: HTMLElement;\n\n  private constructor() {\n    super(true);\n\n    this.model = null;\n    this.decorationManager = null;\n\n    const toolbarContainer = this.contentElement.createChild('div', 'coverage-toolbar-container');\n    const toolbar = new UI.Toolbar.Toolbar('coverage-toolbar', toolbarContainer);\n    toolbar.makeWrappable(true);\n\n    this.coverageTypeComboBox = new UI.Toolbar.ToolbarComboBox(\n        this.onCoverageTypeComboBoxSelectionChanged.bind(this), i18nString(UIStrings.chooseCoverageGranularityPer));\n    const coverageTypes = [\n      {\n        label: i18nString(UIStrings.perFunction),\n        value: CoverageType.JavaScript | CoverageType.JavaScriptPerFunction,\n      },\n      {\n        label: i18nString(UIStrings.perBlock),\n        value: CoverageType.JavaScript,\n      },\n    ];\n    for (const type of coverageTypes) {\n      this.coverageTypeComboBox.addOption(this.coverageTypeComboBox.createOption(type.label, `${type.value}`));\n    }\n    this.coverageTypeComboBoxSetting = Common.Settings.Settings.instance().createSetting('coverageViewCoverageType', 0);\n    this.coverageTypeComboBox.setSelectedIndex(this.coverageTypeComboBoxSetting.get());\n    this.coverageTypeComboBox.setEnabled(true);\n    toolbar.appendToolbarItem(this.coverageTypeComboBox);\n    this.toggleRecordAction =\n        UI.ActionRegistry.ActionRegistry.instance().action('coverage.toggle-recording') as UI.ActionRegistration.Action;\n    this.toggleRecordButton = UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction);\n    toolbar.appendToolbarItem(this.toggleRecordButton);\n\n    const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    const mainTargetSupportsRecordOnReload = mainTarget && mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    this.inlineReloadButton = null;\n    if (mainTargetSupportsRecordOnReload) {\n      const startWithReloadAction = UI.ActionRegistry.ActionRegistry.instance().action('coverage.start-with-reload') as\n          UI.ActionRegistration.Action;\n      this.startWithReloadButton = UI.Toolbar.Toolbar.createActionButton(startWithReloadAction);\n      toolbar.appendToolbarItem(this.startWithReloadButton);\n      this.toggleRecordButton.setEnabled(false);\n      this.toggleRecordButton.setVisible(false);\n    }\n    this.clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'clear');\n    this.clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.clear.bind(this));\n    toolbar.appendToolbarItem(this.clearButton);\n\n    toolbar.appendSeparator();\n    this.saveButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.export), 'download');\n    this.saveButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      void this.exportReport();\n    });\n    toolbar.appendToolbarItem(this.saveButton);\n    this.saveButton.setEnabled(false);\n\n    this.textFilterRegExp = null;\n    toolbar.appendSeparator();\n    this.filterInput = new UI.Toolbar.ToolbarInput(i18nString(UIStrings.urlFilter), '', 0.4, 1);\n    this.filterInput.setEnabled(false);\n    this.filterInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this.onFilterChanged, this);\n    toolbar.appendToolbarItem(this.filterInput);\n\n    toolbar.appendSeparator();\n\n    this.typeFilterValue = null;\n    this.filterByTypeComboBox = new UI.Toolbar.ToolbarComboBox(\n        this.onFilterByTypeChanged.bind(this), i18nString(UIStrings.filterCoverageByType));\n    const options = [\n      {\n        label: i18nString(UIStrings.all),\n        value: '',\n      },\n      {\n        label: i18nString(UIStrings.css),\n        value: CoverageType.CSS,\n      },\n      {\n        label: i18nString(UIStrings.javascript),\n        value: CoverageType.JavaScript | CoverageType.JavaScriptPerFunction,\n      },\n    ];\n    for (const option of options) {\n      this.filterByTypeComboBox.addOption(this.filterByTypeComboBox.createOption(option.label, `${option.value}`));\n    }\n\n    this.filterByTypeComboBox.setSelectedIndex(0);\n    this.filterByTypeComboBox.setEnabled(false);\n    toolbar.appendToolbarItem(this.filterByTypeComboBox);\n\n    toolbar.appendSeparator();\n    this.showContentScriptsSetting = Common.Settings.Settings.instance().createSetting('showContentScripts', false);\n    this.showContentScriptsSetting.addChangeListener(this.onFilterChanged, this);\n    this.contentScriptsCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        this.showContentScriptsSetting, i18nString(UIStrings.includeExtensionContentScripts),\n        i18nString(UIStrings.contentScripts));\n    this.contentScriptsCheckbox.setEnabled(false);\n    toolbar.appendToolbarItem(this.contentScriptsCheckbox);\n\n    this.coverageResultsElement = this.contentElement.createChild('div', 'coverage-results');\n    this.landingPage = this.buildLandingPage();\n    this.bfcacheReloadPromptPage = this.buildReloadPromptPage(i18nString(UIStrings.bfcacheNoCapture), 'bfcache-page');\n    this.activationReloadPromptPage =\n        this.buildReloadPromptPage(i18nString(UIStrings.activationNoCapture), 'prerender-page');\n    this.listView = new CoverageListView(this.isVisible.bind(this, false));\n\n    this.statusToolbarElement = this.contentElement.createChild('div', 'coverage-toolbar-summary');\n    this.statusMessageElement = this.statusToolbarElement.createChild('div', 'coverage-message');\n    this.landingPage.show(this.coverageResultsElement);\n  }\n\n  static instance(): CoverageView {\n    if (!coverageViewInstance) {\n      coverageViewInstance = new CoverageView();\n    }\n    return coverageViewInstance;\n  }\n\n  static removeInstance(): void {\n    coverageViewInstance = undefined;\n  }\n\n  private buildLandingPage(): UI.Widget.VBox {\n    const widget = new UI.Widget.VBox();\n    let message;\n    if (this.startWithReloadButton) {\n      this.inlineReloadButton =\n          UI.UIUtils.createInlineButton(UI.Toolbar.Toolbar.createActionButtonForId('coverage.start-with-reload'));\n      message = i18n.i18n.getFormatLocalizedString(\n          str_, UIStrings.clickTheReloadButtonSToReloadAnd, {PH1: this.inlineReloadButton});\n    } else {\n      const recordButton =\n          UI.UIUtils.createInlineButton(UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction));\n      message = i18n.i18n.getFormatLocalizedString(str_, UIStrings.clickTheRecordButtonSToStart, {PH1: recordButton});\n    }\n    message.classList.add('message');\n    widget.contentElement.appendChild(message);\n    widget.element.classList.add('landing-page');\n    return widget;\n  }\n\n  private buildReloadPromptPage(message: Common.UIString.LocalizedString, className: string): UI.Widget.VBox {\n    const widget = new UI.Widget.VBox();\n    const reasonDiv = document.createElement('div');\n    reasonDiv.classList.add('message');\n    reasonDiv.textContent = message;\n    widget.contentElement.appendChild(reasonDiv);\n    this.inlineReloadButton =\n        UI.UIUtils.createInlineButton(UI.Toolbar.Toolbar.createActionButtonForId('coverage.reload'));\n    const messageElement =\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.reloadPrompt, {PH1: this.inlineReloadButton});\n    messageElement.classList.add('message');\n    widget.contentElement.appendChild(messageElement);\n    widget.element.classList.add(className);\n    return widget;\n  }\n\n  private clear(): void {\n    if (this.model) {\n      this.model.reset();\n    }\n    this.reset();\n  }\n\n  private reset(): void {\n    if (this.decorationManager) {\n      this.decorationManager.dispose();\n      this.decorationManager = null;\n    }\n    this.listView.reset();\n    this.listView.detach();\n    this.landingPage.show(this.coverageResultsElement);\n    this.statusMessageElement.textContent = '';\n    this.filterInput.setEnabled(false);\n    this.filterByTypeComboBox.setEnabled(false);\n    this.contentScriptsCheckbox.setEnabled(false);\n    this.saveButton.setEnabled(false);\n  }\n\n  toggleRecording(): void {\n    const enable = !this.toggleRecordAction.toggled();\n\n    if (enable) {\n      void this.startRecording({reload: false, jsCoveragePerBlock: this.isBlockCoverageSelected()});\n    } else {\n      void this.stopRecording();\n    }\n  }\n\n  isBlockCoverageSelected(): boolean {\n    const option = this.coverageTypeComboBox.selectedOption();\n    const coverageType = Number(option ? option.value : Number.NaN);\n    // Check that Coverage.CoverageType.JavaScriptPerFunction is not present.\n    return coverageType === CoverageType.JavaScript;\n  }\n\n  private selectCoverageType(jsCoveragePerBlock: boolean): void {\n    const selectedIndex = jsCoveragePerBlock ? 1 : 0;\n    this.coverageTypeComboBox.setSelectedIndex(selectedIndex);\n  }\n\n  private onCoverageTypeComboBoxSelectionChanged(): void {\n    this.coverageTypeComboBoxSetting.set(this.coverageTypeComboBox.selectedIndex());\n  }\n\n  async ensureRecordingStarted(): Promise<void> {\n    const enabled = this.toggleRecordAction.toggled();\n\n    if (enabled) {\n      await this.stopRecording();\n    }\n    await this.startRecording({reload: false, jsCoveragePerBlock: false});\n  }\n\n  async startRecording(options: {reload: (boolean|undefined), jsCoveragePerBlock: (boolean|undefined)}|\n                       null): Promise<void> {\n    let hadFocus, reloadButtonFocused;\n    if ((this.startWithReloadButton && this.startWithReloadButton.element.hasFocus()) ||\n        (this.inlineReloadButton && this.inlineReloadButton.hasFocus())) {\n      reloadButtonFocused = true;\n    } else if (this.hasFocus()) {\n      hadFocus = true;\n    }\n\n    this.reset();\n    const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!mainTarget) {\n      return;\n    }\n\n    const {reload, jsCoveragePerBlock} = {reload: false, jsCoveragePerBlock: false, ...options};\n\n    if (!this.model || reload) {\n      this.model = mainTarget.model(CoverageModel);\n    }\n    if (!this.model) {\n      return;\n    }\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.CoverageStarted);\n    if (jsCoveragePerBlock) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.CoverageStartedPerBlock);\n    }\n    const success = await this.model.start(Boolean(jsCoveragePerBlock));\n    if (!success) {\n      return;\n    }\n    this.selectCoverageType(Boolean(jsCoveragePerBlock));\n    this.model.addEventListener(Events.CoverageUpdated, this.onCoverageDataReceived, this);\n    const resourceTreeModel =\n        mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel) as SDK.ResourceTreeModel.ResourceTreeModel | null;\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n        this.onPrimaryPageChanged, this);\n    this.decorationManager = new CoverageDecorationManager(this.model as CoverageModel);\n    this.toggleRecordAction.setToggled(true);\n    this.clearButton.setEnabled(false);\n    if (this.startWithReloadButton) {\n      this.startWithReloadButton.setEnabled(false);\n      this.startWithReloadButton.setVisible(false);\n      this.toggleRecordButton.setEnabled(true);\n      this.toggleRecordButton.setVisible(true);\n      if (reloadButtonFocused) {\n        this.toggleRecordButton.focus();\n      }\n    }\n    this.coverageTypeComboBox.setEnabled(false);\n    this.filterInput.setEnabled(true);\n    this.filterByTypeComboBox.setEnabled(true);\n    this.contentScriptsCheckbox.setEnabled(true);\n    if (this.landingPage.isShowing()) {\n      this.landingPage.detach();\n    }\n    this.listView.show(this.coverageResultsElement);\n    if (hadFocus && !reloadButtonFocused) {\n      this.listView.focus();\n    }\n    if (reload && resourceTreeModel) {\n      resourceTreeModel.reloadPage();\n    } else {\n      void this.model.startPolling();\n    }\n  }\n\n  private onCoverageDataReceived(event: Common.EventTarget.EventTargetEvent<CoverageInfo[]>): void {\n    const data = event.data;\n    this.updateViews(data);\n  }\n\n  async stopRecording(): Promise<void> {\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n        this.onPrimaryPageChanged, this);\n    if (this.hasFocus()) {\n      this.listView.focus();\n    }\n    // Stopping the model triggers one last poll to get the final data.\n    if (this.model) {\n      await this.model.stop();\n      this.model.removeEventListener(Events.CoverageUpdated, this.onCoverageDataReceived, this);\n    }\n    this.toggleRecordAction.setToggled(false);\n    this.coverageTypeComboBox.setEnabled(true);\n    if (this.startWithReloadButton) {\n      this.startWithReloadButton.setEnabled(true);\n      this.startWithReloadButton.setVisible(true);\n      this.toggleRecordButton.setEnabled(false);\n      this.toggleRecordButton.setVisible(false);\n    }\n    this.clearButton.setEnabled(true);\n  }\n\n  processBacklog(): void {\n    this.model && void this.model.processJSBacklog();\n  }\n\n  private async onPrimaryPageChanged(\n      event: Common.EventTarget.EventTargetEvent<\n          {frame: SDK.ResourceTreeModel.ResourceTreeFrame, type: SDK.ResourceTreeModel.PrimaryPageChangeType}>):\n      Promise<void> {\n    const frame = event.data.frame;\n    const coverageModel = frame.resourceTreeModel().target().model(CoverageModel);\n    if (!coverageModel) {\n      return;\n    }\n    // If the primary page target has changed (due to MPArch activation), switch to new CoverageModel.\n    if (this.model !== coverageModel) {\n      if (this.model) {\n        await this.model.stop();\n        this.model.removeEventListener(Events.CoverageUpdated, this.onCoverageDataReceived, this);\n      }\n      this.model = coverageModel;\n      const success = await this.model.start(this.isBlockCoverageSelected());\n      if (!success) {\n        return;\n      }\n\n      this.model.addEventListener(Events.CoverageUpdated, this.onCoverageDataReceived, this);\n      this.decorationManager = new CoverageDecorationManager(this.model as CoverageModel);\n    }\n\n    if (this.bfcacheReloadPromptPage.isShowing()) {\n      this.bfcacheReloadPromptPage.detach();\n      this.listView.show(this.coverageResultsElement);\n    }\n    if (this.activationReloadPromptPage.isShowing()) {\n      this.activationReloadPromptPage.detach();\n      this.listView.show(this.coverageResultsElement);\n    }\n    if (frame.backForwardCacheDetails.restoredFromCache) {\n      this.listView.detach();\n      this.bfcacheReloadPromptPage.show(this.coverageResultsElement);\n    }\n    if (event.data.type === SDK.ResourceTreeModel.PrimaryPageChangeType.Activation) {\n      this.listView.detach();\n      this.activationReloadPromptPage.show(this.coverageResultsElement);\n    }\n\n    this.model.reset();\n    this.decorationManager && this.decorationManager.reset();\n    this.listView.reset();\n    void this.model.startPolling();\n  }\n\n  private updateViews(updatedEntries: CoverageInfo[]): void {\n    this.updateStats();\n    this.listView.update(this.model && this.model.entries() || []);\n    this.saveButton.setEnabled(this.model !== null && this.model.entries().length > 0);\n    this.decorationManager && this.decorationManager.update(updatedEntries);\n  }\n\n  private updateStats(): void {\n    const all = {total: 0, unused: 0};\n    const filtered = {total: 0, unused: 0};\n    let filterApplied = false;\n    if (this.model) {\n      for (const info of this.model.entries()) {\n        all.total += info.size();\n        all.unused += info.unusedSize();\n        if (this.isVisible(false, info)) {\n          filtered.total += info.size();\n          filtered.unused += info.unusedSize();\n        } else {\n          filterApplied = true;\n        }\n      }\n    }\n    this.statusMessageElement.textContent = filterApplied ?\n        i18nString(UIStrings.filteredSTotalS, {PH1: formatStat(filtered), PH2: formatStat(all)}) :\n        formatStat(all);\n\n    function formatStat({total, unused}: {total: number, unused: number}): string {\n      const used = total - unused;\n      const percentUsed = total ? Math.round(100 * used / total) : 0;\n      return i18nString(UIStrings.sOfSSUsedSoFarSUnused, {\n        PH1: Platform.NumberUtilities.bytesToString(used),\n        PH2: Platform.NumberUtilities.bytesToString(total),\n        PH3: percentUsed,\n        PH4: Platform.NumberUtilities.bytesToString(unused),\n      });\n    }\n  }\n\n  private onFilterChanged(): void {\n    if (!this.listView) {\n      return;\n    }\n    const text = this.filterInput.value();\n    this.textFilterRegExp = text ? Platform.StringUtilities.createPlainTextSearchRegex(text, 'i') : null;\n    this.listView.updateFilterAndHighlight(this.textFilterRegExp);\n    this.updateStats();\n  }\n\n  private onFilterByTypeChanged(): void {\n    if (!this.listView) {\n      return;\n    }\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.CoverageReportFiltered);\n\n    const option = this.filterByTypeComboBox.selectedOption();\n    const type = option && option.value;\n    this.typeFilterValue = parseInt(type || '', 10) || null;\n    this.listView.updateFilterAndHighlight(this.textFilterRegExp);\n    this.updateStats();\n  }\n\n  private isVisible(ignoreTextFilter: boolean, coverageInfo: URLCoverageInfo): boolean {\n    const url = coverageInfo.url();\n    if (url.startsWith(CoverageView.EXTENSION_BINDINGS_URL_PREFIX)) {\n      return false;\n    }\n    if (coverageInfo.isContentScript() && !this.showContentScriptsSetting.get()) {\n      return false;\n    }\n    if (this.typeFilterValue && !(coverageInfo.type() & this.typeFilterValue)) {\n      return false;\n    }\n\n    return ignoreTextFilter || !this.textFilterRegExp || this.textFilterRegExp.test(url);\n  }\n\n  private async exportReport(): Promise<void> {\n    const fos = new Bindings.FileUtils.FileOutputStream();\n    const fileName =\n        `Coverage-${Platform.DateUtilities.toISO8601Compact(new Date())}.json` as Platform.DevToolsPath.RawPathString;\n    const accepted = await fos.open(fileName);\n    if (!accepted) {\n      return;\n    }\n    this.model && await this.model.exportReport(fos);\n  }\n\n  selectCoverageItemByUrl(url: string): void {\n    this.listView.selectByUrl(url);\n  }\n\n  static readonly EXTENSION_BINDINGS_URL_PREFIX = 'extensions::';\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([coverageViewStyles]);\n  }\n}\n\nlet actionDelegateInstance: ActionDelegate;\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const coverageViewId = 'coverage';\n    void UI.ViewManager.ViewManager.instance()\n        .showView(coverageViewId, /** userGesture= */ false, /** omitFocus= */ true)\n        .then(() => {\n          const view = UI.ViewManager.ViewManager.instance().view(coverageViewId);\n          return view && view.widget();\n        })\n        .then(widget => this.innerHandleAction(widget as CoverageView, actionId));\n\n    return true;\n  }\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!actionDelegateInstance || forceNew) {\n      actionDelegateInstance = new ActionDelegate();\n    }\n    return actionDelegateInstance;\n  }\n\n  private innerHandleAction(coverageView: CoverageView, actionId: string): void {\n    let target = null;\n    let resourceTreeModel = null;\n    switch (actionId) {\n      case 'coverage.toggle-recording':\n        coverageView.toggleRecording();\n        break;\n      case 'coverage.start-with-reload':\n        void coverageView.startRecording({reload: true, jsCoveragePerBlock: coverageView.isBlockCoverageSelected()});\n        break;\n      case 'coverage.reload':\n        target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n        if (target) {\n          resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n          if (resourceTreeModel) {\n            resourceTreeModel.reloadPage();\n          }\n        }\n        break;\n      default:\n        console.assert(false, `Unknown action: ${actionId}`);\n    }\n  }\n}\n"]}