{"version":3,"file":"CoverageListView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/coverage/CoverageListView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport coverageListViewStyles from './coverageListView.css.js';\n\nimport {CoverageType, type URLCoverageInfo} from './CoverageModel.js';\n\nconst UIStrings = {\n  /**\n   *@description Text that appears on a button for the css resource type filter.\n   */\n  css: 'CSS',\n  /**\n   *@description Text in Coverage List View of the Coverage tab\n   */\n  jsPerFunction: 'JS (per function)',\n  /**\n   *@description Text in Coverage List View of the Coverage tab\n   */\n  jsPerBlock: 'JS (per block)',\n  /**\n   *@description Text for web URLs\n   */\n  url: 'URL',\n  /**\n   *@description Text that refers to some types\n   */\n  type: 'Type',\n  /**\n   *@description Text in Coverage List View of the Coverage tab\n   */\n  totalBytes: 'Total Bytes',\n  /**\n   *@description Text in Coverage List View of the Coverage tab\n   */\n  unusedBytes: 'Unused Bytes',\n  /**\n   *@description Text in the Coverage List View of the Coverage Tab\n   */\n  usageVisualization: 'Usage Visualization',\n  /**\n   *@description Data grid name for Coverage data grids\n   */\n  codeCoverage: 'Code Coverage',\n  /**\n   *@description Cell title in Coverage List View of the Coverage tab. The coverage tool tells\n   *developers which functions (logical groups of lines of code) were actually run/executed. If a\n   *function does get run, then it is marked in the UI to indicate that it was covered.\n   */\n  jsCoverageWithPerFunction:\n      'JS coverage with per function granularity: Once a function was executed, the whole function is marked as covered.',\n  /**\n   *@description Cell title in Coverage List View of the Coverage tab. The coverage tool tells\n   *developers which blocks (logical groups of lines of code, smaller than a function) were actually\n   *run/executed. If a block does get run, then it is marked in the UI to indicate that it was\n   *covered.\n   */\n  jsCoverageWithPerBlock:\n      'JS coverage with per block granularity: Once a block of JavaScript was executed, that block is marked as covered.',\n  /**\n   *@description Accessible text for the value in bytes in memory allocation or coverage view.\n   */\n  sBytes: '{n, plural, =1 {# byte} other {# bytes}}',\n  /**\n   *@description Accessible text for the unused bytes column in the coverage tool that describes the total unused bytes and percentage of the file unused.\n   *@example {88%} percentage\n   */\n  sBytesS: '{n, plural, =1 {# byte, {percentage}} other {# bytes, {percentage}}}',\n  /**\n   *@description Tooltip text for the bar in the coverage list view of the coverage tool that illustrates the relation between used and unused bytes.\n   *@example {1000} PH1\n   *@example {12.34} PH2\n   */\n  sBytesSBelongToFunctionsThatHave: '{PH1} bytes ({PH2}) belong to functions that have not (yet) been executed.',\n  /**\n   *@description Tooltip text for the bar in the coverage list view of the coverage tool that illustrates the relation between used and unused bytes.\n   *@example {1000} PH1\n   *@example {12.34} PH2\n   */\n  sBytesSBelongToBlocksOf: '{PH1} bytes ({PH2}) belong to blocks of JavaScript that have not (yet) been executed.',\n  /**\n   *@description Message in Coverage View of the Coverage tab\n   *@example {1000} PH1\n   *@example {12.34} PH2\n   */\n  sBytesSBelongToFunctionsThatHaveExecuted: '{PH1} bytes ({PH2}) belong to functions that have executed at least once.',\n  /**\n   *@description Message in Coverage View of the Coverage tab\n   *@example {1000} PH1\n   *@example {12.34} PH2\n   */\n  sBytesSBelongToBlocksOfJavascript:\n      '{PH1} bytes ({PH2}) belong to blocks of JavaScript that have executed at least once.',\n  /**\n   *@description Accessible text for the visualization column of coverage tool. Contains percentage of unused bytes to used bytes.\n   *@example {12.3} PH1\n   *@example {12.3} PH2\n   */\n  sOfFileUnusedSOfFileUsed: '{PH1} % of file unused, {PH2} % of file used',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/coverage/CoverageListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function coverageTypeToString(type: CoverageType): string {\n  const types = [];\n  if (type & CoverageType.CSS) {\n    types.push(i18nString(UIStrings.css));\n  }\n  if (type & CoverageType.JavaScriptPerFunction) {\n    types.push(i18nString(UIStrings.jsPerFunction));\n  } else if (type & CoverageType.JavaScript) {\n    types.push(i18nString(UIStrings.jsPerBlock));\n  }\n  return types.join('+');\n}\n\nexport class CoverageListView extends UI.Widget.VBox {\n  private readonly nodeForCoverageInfo: Map<URLCoverageInfo, GridNode>;\n  private readonly isVisibleFilter: (arg0: URLCoverageInfo) => boolean;\n  private highlightRegExp: RegExp|null;\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<GridNode>;\n\n  constructor(isVisibleFilter: (arg0: URLCoverageInfo) => boolean) {\n    super(true);\n    this.nodeForCoverageInfo = new Map();\n    this.isVisibleFilter = isVisibleFilter;\n    this.highlightRegExp = null;\n\n    const columns: DataGrid.DataGrid.ColumnDescriptor[] = [\n      {id: 'url', title: i18nString(UIStrings.url), width: '250px', weight: 3, fixedWidth: false, sortable: true},\n      {id: 'type', title: i18nString(UIStrings.type), width: '45px', weight: 1, fixedWidth: true, sortable: true},\n      {\n        id: 'size',\n        title: i18nString(UIStrings.totalBytes),\n        width: '60px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.Right,\n        weight: 1,\n      },\n      {\n        id: 'unusedSize',\n        title: i18nString(UIStrings.unusedBytes),\n        width: '100px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.Right,\n        sort: DataGrid.DataGrid.Order.Descending,\n        weight: 1,\n      },\n      {\n        id: 'bars',\n        title: i18nString(UIStrings.usageVisualization),\n        width: '250px',\n        fixedWidth: false,\n        sortable: true,\n        weight: 1,\n      },\n    ];\n    this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid<GridNode>({\n      displayName: i18nString(UIStrings.codeCoverage),\n      columns,\n      editCallback: undefined,\n      refreshCallback: undefined,\n      deleteCallback: undefined,\n    });\n    this.dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.Last);\n    this.dataGrid.element.classList.add('flex-auto');\n    this.dataGrid.element.addEventListener('keydown', this.onKeyDown.bind(this), false);\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.OpenedNode, this.onOpenedNode, this);\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this.sortingChanged, this);\n\n    const dataGridWidget = this.dataGrid.asWidget();\n    dataGridWidget.show(this.contentElement);\n    this.setDefaultFocusedChild(dataGridWidget);\n  }\n\n  update(coverageInfo: URLCoverageInfo[]): void {\n    let hadUpdates = false;\n    const maxSize = coverageInfo.reduce((acc, entry) => Math.max(acc, entry.size()), 0);\n    const rootNode = this.dataGrid.rootNode();\n    for (const entry of coverageInfo) {\n      let node = this.nodeForCoverageInfo.get(entry);\n      if (node) {\n        if (this.isVisibleFilter(node.coverageInfo)) {\n          hadUpdates = node.refreshIfNeeded(maxSize) || hadUpdates;\n        }\n        continue;\n      }\n      node = new GridNode(entry, maxSize);\n      this.nodeForCoverageInfo.set(entry, node);\n      if (this.isVisibleFilter(node.coverageInfo)) {\n        rootNode.appendChild(node);\n        hadUpdates = true;\n      }\n    }\n    if (hadUpdates) {\n      this.sortingChanged();\n    }\n  }\n\n  reset(): void {\n    this.nodeForCoverageInfo.clear();\n    this.dataGrid.rootNode().removeChildren();\n  }\n\n  updateFilterAndHighlight(highlightRegExp: RegExp|null): void {\n    this.highlightRegExp = highlightRegExp;\n    let hadTreeUpdates = false;\n    for (const node of this.nodeForCoverageInfo.values()) {\n      const shouldBeVisible = this.isVisibleFilter(node.coverageInfo);\n      const isVisible = Boolean(node.parent);\n      if (shouldBeVisible) {\n        node.setHighlight(this.highlightRegExp);\n      }\n      if (shouldBeVisible === isVisible) {\n        continue;\n      }\n      hadTreeUpdates = true;\n      if (!shouldBeVisible) {\n        node.remove();\n      } else {\n        this.dataGrid.rootNode().appendChild(node);\n      }\n    }\n    if (hadTreeUpdates) {\n      this.sortingChanged();\n    }\n  }\n\n  selectByUrl(url: string): void {\n    for (const [info, node] of this.nodeForCoverageInfo.entries()) {\n      if (info.url() === url) {\n        node.revealAndSelect();\n        break;\n      }\n    }\n  }\n\n  private onOpenedNode(): void {\n    void this.revealSourceForSelectedNode();\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    if (!(event.key === 'Enter')) {\n      return;\n    }\n    event.consume(true);\n    void this.revealSourceForSelectedNode();\n  }\n\n  private async revealSourceForSelectedNode(): Promise<void> {\n    const node = this.dataGrid.selectedNode;\n    if (!node) {\n      return;\n    }\n    const coverageInfo = (node as GridNode).coverageInfo;\n    const sourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(coverageInfo.url());\n    if (!sourceCode) {\n      return;\n    }\n\n    if (this.dataGrid.selectedNode !== node) {\n      return;\n    }\n    void Common.Revealer.reveal(sourceCode);\n  }\n\n  private sortingChanged(): void {\n    const columnId = this.dataGrid.sortColumnId();\n    if (!columnId) {\n      return;\n    }\n    const sortFunction = GridNode.sortFunctionForColumn(columnId) as (\n                             (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n                              arg1: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>) => number) |\n        null;\n    if (!sortFunction) {\n      return;\n    }\n    this.dataGrid.sortNodes(sortFunction, !this.dataGrid.isSortOrderAscending());\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([coverageListViewStyles]);\n  }\n}\n\nlet percentageFormatter: Intl.NumberFormat|null = null;\n\nfunction getPercentageFormatter(): Intl.NumberFormat {\n  if (!percentageFormatter) {\n    percentageFormatter = new Intl.NumberFormat(i18n.DevToolsLocale.DevToolsLocale.instance().locale, {\n      style: 'percent',\n      maximumFractionDigits: 1,\n    });\n  }\n  return percentageFormatter;\n}\n\nexport class GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode<GridNode> {\n  coverageInfo: URLCoverageInfo;\n  private lastUsedSize!: number|undefined;\n  private url: Platform.DevToolsPath.UrlString;\n  private maxSize: number;\n  private highlightRegExp: RegExp|null;\n\n  constructor(coverageInfo: URLCoverageInfo, maxSize: number) {\n    super();\n    this.coverageInfo = coverageInfo;\n    this.url = coverageInfo.url();\n    this.maxSize = maxSize;\n    this.highlightRegExp = null;\n  }\n\n  setHighlight(highlightRegExp: RegExp|null): void {\n    if (this.highlightRegExp === highlightRegExp) {\n      return;\n    }\n    this.highlightRegExp = highlightRegExp;\n    this.refresh();\n  }\n\n  refreshIfNeeded(maxSize: number): boolean {\n    if (this.lastUsedSize === this.coverageInfo.usedSize() && maxSize === this.maxSize) {\n      return false;\n    }\n    this.lastUsedSize = this.coverageInfo.usedSize();\n    this.maxSize = maxSize;\n    this.refresh();\n    return true;\n  }\n\n  override createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    switch (columnId) {\n      case 'url': {\n        UI.Tooltip.Tooltip.install(cell, this.url);\n        const outer = cell.createChild('div', 'url-outer');\n        const prefix = outer.createChild('div', 'url-prefix');\n        const suffix = outer.createChild('div', 'url-suffix');\n        const splitURL = /^(.*)(\\/[^/]*)$/.exec(this.url);\n        prefix.textContent = splitURL ? splitURL[1] : this.url;\n        suffix.textContent = splitURL ? splitURL[2] : '';\n        if (this.highlightRegExp) {\n          this.highlight(outer, this.url);\n        }\n        this.setCellAccessibleName(this.url, cell, columnId);\n        break;\n      }\n      case 'type': {\n        cell.textContent = coverageTypeToString(this.coverageInfo.type());\n        if (this.coverageInfo.type() & CoverageType.JavaScriptPerFunction) {\n          UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.jsCoverageWithPerFunction));\n        } else if (this.coverageInfo.type() & CoverageType.JavaScript) {\n          UI.Tooltip.Tooltip.install(cell, i18nString(UIStrings.jsCoverageWithPerBlock));\n        }\n        break;\n      }\n      case 'size': {\n        const sizeSpan = cell.createChild('span');\n        sizeSpan.textContent = Platform.NumberUtilities.withThousandsSeparator(this.coverageInfo.size() || 0);\n        const sizeAccessibleName = i18nString(UIStrings.sBytes, {n: this.coverageInfo.size() || 0});\n        this.setCellAccessibleName(sizeAccessibleName, cell, columnId);\n        break;\n      }\n      case 'unusedSize': {\n        const unusedSize = this.coverageInfo.unusedSize() || 0;\n        const unusedSizeSpan = cell.createChild('span');\n        const unusedPercentsSpan = cell.createChild('span', 'percent-value');\n        unusedSizeSpan.textContent = Platform.NumberUtilities.withThousandsSeparator(unusedSize);\n        const unusedPercentFormatted = getPercentageFormatter().format(this.coverageInfo.unusedPercentage());\n        unusedPercentsSpan.textContent = unusedPercentFormatted;\n        const unusedAccessibleName = i18nString(UIStrings.sBytesS, {n: unusedSize, percentage: unusedPercentFormatted});\n        this.setCellAccessibleName(unusedAccessibleName, cell, columnId);\n        break;\n      }\n      case 'bars': {\n        const barContainer = cell.createChild('div', 'bar-container');\n        const unusedPercent = getPercentageFormatter().format(this.coverageInfo.unusedPercentage());\n        const usedPercent = getPercentageFormatter().format(this.coverageInfo.usedPercentage());\n        if (this.coverageInfo.unusedSize() > 0) {\n          const unusedSizeBar = barContainer.createChild('div', 'bar bar-unused-size');\n          unusedSizeBar.style.width = ((this.coverageInfo.unusedSize() / this.maxSize) * 100 || 0) + '%';\n          if (this.coverageInfo.type() & CoverageType.JavaScriptPerFunction) {\n            UI.Tooltip.Tooltip.install(\n                unusedSizeBar,\n                i18nString(\n                    UIStrings.sBytesSBelongToFunctionsThatHave,\n                    {PH1: this.coverageInfo.unusedSize(), PH2: unusedPercent}));\n          } else if (this.coverageInfo.type() & CoverageType.JavaScript) {\n            UI.Tooltip.Tooltip.install(\n                unusedSizeBar,\n                i18nString(\n                    UIStrings.sBytesSBelongToBlocksOf, {PH1: this.coverageInfo.unusedSize(), PH2: unusedPercent}));\n          }\n        }\n        if (this.coverageInfo.usedSize() > 0) {\n          const usedSizeBar = barContainer.createChild('div', 'bar bar-used-size');\n          usedSizeBar.style.width = ((this.coverageInfo.usedSize() / this.maxSize) * 100 || 0) + '%';\n          if (this.coverageInfo.type() & CoverageType.JavaScriptPerFunction) {\n            UI.Tooltip.Tooltip.install(\n                usedSizeBar,\n                i18nString(\n                    UIStrings.sBytesSBelongToFunctionsThatHaveExecuted,\n                    {PH1: this.coverageInfo.usedSize(), PH2: usedPercent}));\n          } else if (this.coverageInfo.type() & CoverageType.JavaScript) {\n            UI.Tooltip.Tooltip.install(\n                usedSizeBar,\n                i18nString(\n                    UIStrings.sBytesSBelongToBlocksOfJavascript,\n                    {PH1: this.coverageInfo.usedSize(), PH2: usedPercent}));\n          }\n        }\n        this.setCellAccessibleName(\n            i18nString(UIStrings.sOfFileUnusedSOfFileUsed, {PH1: unusedPercent, PH2: usedPercent}), cell, columnId);\n      }\n    }\n    return cell;\n  }\n\n  private highlight(element: Element, textContent: string): void {\n    if (!this.highlightRegExp) {\n      return;\n    }\n    const matches = this.highlightRegExp.exec(textContent);\n    if (!matches || !matches.length) {\n      return;\n    }\n    const range = new TextUtils.TextRange.SourceRange(matches.index, matches[0].length);\n    UI.UIUtils.highlightRangesWithStyleClass(element, [range], 'filter-highlight');\n  }\n\n  static sortFunctionForColumn(columnId: string): ((arg0: GridNode, arg1: GridNode) => number)|null {\n    const compareURL = (a: GridNode, b: GridNode): number => a.url.localeCompare(b.url);\n    switch (columnId) {\n      case 'url':\n        return compareURL;\n      case 'type':\n        return (a: GridNode, b: GridNode): number => {\n          const typeA = coverageTypeToString(a.coverageInfo.type());\n          const typeB = coverageTypeToString(b.coverageInfo.type());\n          return typeA.localeCompare(typeB) || compareURL(a, b);\n        };\n      case 'size':\n        return (a: GridNode, b: GridNode): number => a.coverageInfo.size() - b.coverageInfo.size() || compareURL(a, b);\n      case 'bars':\n      case 'unusedSize':\n        return (a: GridNode, b: GridNode): number =>\n                   a.coverageInfo.unusedSize() - b.coverageInfo.unusedSize() || compareURL(a, b);\n      default:\n        console.assert(false, 'Unknown sort field: ' + columnId);\n        return null;\n    }\n  }\n}\n"]}