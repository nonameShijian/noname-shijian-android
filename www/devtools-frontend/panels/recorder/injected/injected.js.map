{"version":3,"file":"injected.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/injected/injected.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,eAAe,MAAM,sBAAsB,CAAC;AACxD,OAAO,KAAK,cAAc,MAAM,qBAAqB,CAAC;AAatD,MAAM,gBAAgB;IACpB,gBAAgB,CAAmC;IACnD,cAAc,CACV,QAA+B,EAC/B,OAAgD;QAElD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QACD,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,eAAe,CAAC,eAAe,CACvD,QAAQ,EACR,OAAO,CACV,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IACD,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;IACpC,CAAC;IAED,IAAI,yBAAyB;QAC3B,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACtD;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED,eAAe,CAAiC;IAChD,mBAAmB,CACf,QAA+B,EAC/B,eAAwB,EACxB,KAAe;QAEjB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QACD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAC9B;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,cAAc,CAAC,cAAc,CACpD,QAAQ,EACR,eAAe,EACf,KAAK,CACR,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;SAC/B;IACH,CAAC;CACF;AAED,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;IAC5B,MAAM,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;CAClD","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as RecordingClient from './RecordingClient.js';\nimport * as SelectorPicker from './SelectorPicker.js';\nimport type * as Step from './Step.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport {type AccessibilityBindings} from './selectors/ARIASelector.js';\n\ndeclare global {\n  interface Window {\n    stopShortcut(payload: string): void;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    DevToolsRecorder: DevToolsRecorder;\n  }\n}\n\nclass DevToolsRecorder {\n  #recordingClient?: RecordingClient.RecordingClient;\n  startRecording(\n      bindings: AccessibilityBindings,\n      options?: RecordingClient.RecordingClientOptions,\n      ): void {\n    if (this.#recordingClient) {\n      throw new Error('Recording client already started.');\n    }\n    if (this.#selectorPicker) {\n      throw new Error('Selector picker is active.');\n    }\n    this.#recordingClient = new RecordingClient.RecordingClient(\n        bindings,\n        options,\n    );\n    this.#recordingClient.start();\n  }\n  stopRecording(): void {\n    if (!this.#recordingClient) {\n      throw new Error('Recording client was not started.');\n    }\n    this.#recordingClient.stop();\n    this.#recordingClient = undefined;\n  }\n\n  get recordingClientForTesting(): RecordingClient.RecordingClient {\n    if (!this.#recordingClient) {\n      throw new Error('Recording client was not started.');\n    }\n    return this.#recordingClient;\n  }\n\n  #selectorPicker?: SelectorPicker.SelectorPicker;\n  startSelectorPicker(\n      bindings: AccessibilityBindings,\n      customAttribute?: string,\n      debug?: boolean,\n      ): void {\n    if (this.#selectorPicker) {\n      throw new Error('Selector picker already started.');\n    }\n    if (this.#recordingClient) {\n      this.#recordingClient.stop();\n    }\n    this.#selectorPicker = new SelectorPicker.SelectorPicker(\n        bindings,\n        customAttribute,\n        debug,\n    );\n    this.#selectorPicker.start();\n  }\n  stopSelectorPicker(): void {\n    if (!this.#selectorPicker) {\n      throw new Error('Selector picker was not started.');\n    }\n    this.#selectorPicker.stop();\n    this.#selectorPicker = undefined;\n    if (this.#recordingClient) {\n      this.#recordingClient.start();\n    }\n  }\n}\n\nif (!window.DevToolsRecorder) {\n  window.DevToolsRecorder = new DevToolsRecorder();\n}\n\nexport {\n  type Step,\n  type RecordingClient,\n  type SelectorPicker,\n  type DevToolsRecorder,\n};\n"]}