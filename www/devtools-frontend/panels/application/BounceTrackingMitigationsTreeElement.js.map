{"version":3,"file":"BounceTrackingMitigationsTreeElement.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/BounceTrackingMitigationsTreeElement.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,EAAC,2BAA2B,EAAC,MAAM,kCAAkC,CAAC;AAC7E,OAAO,KAAK,qBAAqB,MAAM,4BAA4B,CAAC;AAEpE,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,yBAAyB,EAAE,6BAA6B;CACzD,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,4DAA4D,EAAE,SAAS,CAAC,CAAC;AAClH,MAAM,CAAC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAE7E,MAAM,OAAO,oCAAqC,SAAQ,2BAA2B;IAC3E,IAAI,CAA8C;IAE1D,YAAY,cAA8B;QACxC,KAAK,CAAC,cAAc,EAAE,UAAU,CAAC,SAAS,CAAC,yBAAyB,CAAC,EAAE,KAAK,CAAC,CAAC;QAC9E,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;QACnE,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,IAAa,OAAO;QAClB,OAAO,gCAAmE,CAAC;IAC7E,CAAC;IAEQ,QAAQ,CAAC,cAAwB;QACxC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,0CAA0C,CACtD,IAAI,qBAAqB,CAAC,6BAA6B,CAAC,6BAA6B,EAAE,CAAC,CAAC;SAC9F;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC,CAAC;QAClH,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,MAAM,OAAO,0CAA2C,SAAQ,EAAE,CAAC,eAAe,CAAC,eAAe;IAC/E,6BAA6B,CACwC;IAEtF,YAAY,6BACqF;QAC/F,KAAK,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,6BAA6B,GAAG,6BAA6B,CAAC;QACnE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACpE,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEkB,KAAK,CAAC,QAAQ;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;CACF","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport * as ApplicationComponents from './components/components.js';\nimport {type ResourcesPanel} from './ResourcesPanel.js';\nimport * as Host from '../../core/host/host.js';\n\nconst UIStrings = {\n  /**\n   * @description Hover text for the Bounce Tracking Mitigations element in the Application Panel sidebar.\n   */\n  bounceTrackingMitigations: 'Bounce Tracking Mitigations',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/BounceTrackingMitigationsTreeElement.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class BounceTrackingMitigationsTreeElement extends ApplicationPanelTreeElement {\n  private view?: BounceTrackingMitigationsViewWidgetWrapper;\n\n  constructor(resourcesPanel: ResourcesPanel) {\n    super(resourcesPanel, i18nString(UIStrings.bounceTrackingMitigations), false);\n    const icon = UI.Icon.Icon.create('database', 'resource-tree-item');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'bounce-tracking-mitigations://' as Platform.DevToolsPath.UrlString;\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new BounceTrackingMitigationsViewWidgetWrapper(\n          new ApplicationComponents.BounceTrackingMitigationsView.BounceTrackingMitigationsView());\n    }\n    this.showView(this.view);\n    Host.userMetrics.panelShown(Host.UserMetrics.PanelCodes[Host.UserMetrics.PanelCodes.bounce_tracking_mitigations]);\n    return false;\n  }\n}\n\nexport class BounceTrackingMitigationsViewWidgetWrapper extends UI.ThrottledWidget.ThrottledWidget {\n  private readonly bounceTrackingMitigationsView:\n      ApplicationComponents.BounceTrackingMitigationsView.BounceTrackingMitigationsView;\n\n  constructor(bounceTrackingMitigationsView:\n                  ApplicationComponents.BounceTrackingMitigationsView.BounceTrackingMitigationsView) {\n    super(/* isWebComponent */ false);\n    this.bounceTrackingMitigationsView = bounceTrackingMitigationsView;\n    this.contentElement.appendChild(this.bounceTrackingMitigationsView);\n    this.update();\n  }\n\n  protected override async doUpdate(): Promise<void> {\n    this.update();\n  }\n}\n"]}