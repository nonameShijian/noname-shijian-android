{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/text_editor/config.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as WindowBoundsService from '../../../services/window_bounds/window_bounds.js';\nimport * as CM from '../../../third_party/codemirror.next/codemirror.next.js';\nimport * as UI from '../../legacy/legacy.js';\nimport * as CodeHighlighter from '../code_highlighter/code_highlighter.js';\nimport * as Icon from '../icon_button/icon_button.js';\n\nimport {editorTheme} from './theme.js';\n\nconst LINES_TO_SCAN_FOR_INDENTATION_GUESSING = 1000;\n\nconst UIStrings = {\n  /**\n   *@description Label text for the editor\n   */\n  codeEditor: 'Code editor',\n  /**\n   *@description Aria alert to read the suggestion for the suggestion box when typing in text editor\n   *@example {name} PH1\n   *@example {2} PH2\n   *@example {5} PH3\n   */\n  sSuggestionSOfS: '{PH1}, suggestion {PH2} of {PH3}',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/text_editor/config.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst empty: CM.Extension = [];\n\nexport const dynamicSetting = CM.Facet.define<DynamicSetting<unknown>>();\n\n// The code below is used to wire up dynamic settings to editors. When\n// you include the result of calling `instance()` in an editor\n// configuration, the TextEditor class will take care of listening to\n// changes in the setting, and updating the configuration as\n// appropriate.\n\nexport class DynamicSetting<T> {\n  compartment = new CM.Compartment();\n\n  constructor(\n      readonly settingName: string,\n      private readonly getExtension: (value: T) => CM.Extension,\n  ) {\n  }\n\n  settingValue(): T {\n    return Common.Settings.Settings.instance().moduleSetting(this.settingName).get() as T;\n  }\n\n  instance(): CM.Extension {\n    return [\n      this.compartment.of(this.getExtension(this.settingValue())),\n      dynamicSetting.of(this as DynamicSetting<unknown>),\n    ];\n  }\n\n  sync(state: CM.EditorState, value: T): CM.StateEffect<unknown>|null {\n    const cur = this.compartment.get(state);\n    const needed = this.getExtension(value);\n    return cur === needed ? null : this.compartment.reconfigure(needed);\n  }\n\n  static bool(name: string, enabled: CM.Extension, disabled: CM.Extension = empty): DynamicSetting<boolean> {\n    return new DynamicSetting<boolean>(name, val => val ? enabled : disabled);\n  }\n\n  static none: readonly DynamicSetting<unknown>[] = [];\n}\n\nexport const tabMovesFocus = DynamicSetting.bool('textEditorTabMovesFocus', [], CM.keymap.of([{\n  key: 'Tab',\n  run: (view: CM.EditorView): boolean => view.state.doc.length ? CM.indentMore(view) : false,\n  shift: (view: CM.EditorView): boolean => view.state.doc.length ? CM.indentLess(view) : false,\n}]));\n\nconst disableConservativeCompletion = CM.StateEffect.define();\n\n// When enabled, this suppresses the behavior of showCompletionHint\n// and accepting of completions with Enter until the user selects a\n// completion beyond the initially selected one. Used in the console.\nexport const conservativeCompletion = CM.StateField.define<boolean>({\n  create() {\n    return true;\n  },\n  update(value, tr) {\n    if (CM.completionStatus(tr.state) !== 'active') {\n      return true;\n    }\n    if ((CM.selectedCompletionIndex(tr.startState) ?? 0) !== (CM.selectedCompletionIndex(tr.state) ?? 0) ||\n        tr.effects.some(e => e.is(disableConservativeCompletion))) {\n      return false;\n    }\n    return value;\n  },\n});\n\nfunction acceptCompletionIfNotConservative(view: CM.EditorView): boolean {\n  return !view.state.field(conservativeCompletion, false) && CM.acceptCompletion(view);\n}\n\nfunction acceptCompletionIfAtEndOfLine(view: CM.EditorView): boolean {\n  const cursorPosition = view.state.selection.main.head;\n  const line = view.state.doc.lineAt(cursorPosition);\n  const column = cursorPosition - line.from;\n  const isCursorAtEndOfLine = column >= line.length;\n  if (isCursorAtEndOfLine) {\n    return CM.acceptCompletion(view);\n  }\n\n  // We didn't handle this key press\n  // so it will be handled by default behavior.\n  return false;\n}\n\n// This is a wrapper around CodeMirror's own moveCompletionSelection command, which\n// selects the first selection if the state of the selection is conservative, and\n// otherwise behaves as normal.\nfunction moveCompletionSelectionIfNotConservative(\n    forward: boolean, by: 'option'|'page' = 'option'): ((view: CM.EditorView) => boolean) {\n  return view => {\n    if (CM.completionStatus(view.state) !== 'active') {\n      return false;\n    }\n    if (view.state.field(conservativeCompletion, false)) {\n      view.dispatch({effects: disableConservativeCompletion.of(null)});\n      announceSelectedCompletionInfo(view);\n      return true;\n    }\n    const moveSelectionResult = CM.moveCompletionSelection(forward, by)(view);\n    announceSelectedCompletionInfo(view);\n    return moveSelectionResult;\n  };\n}\n\nfunction moveCompletionSelectionBackwardWrapper(): ((view: CM.EditorView) => boolean) {\n  return view => {\n    if (CM.completionStatus(view.state) !== 'active') {\n      return false;\n    }\n    CM.moveCompletionSelection(false)(view);\n    announceSelectedCompletionInfo(view);\n    return true;\n  };\n}\n\nfunction announceSelectedCompletionInfo(view: CM.EditorView): void {\n  const ariaMessage = i18nString(UIStrings.sSuggestionSOfS, {\n    PH1: CM.selectedCompletion(view.state)?.label || '',\n    PH2: (CM.selectedCompletionIndex(view.state) || 0) + 1,\n    PH3: CM.currentCompletions(view.state).length,\n  });\n\n  UI.ARIAUtils.alert(ariaMessage);\n}\n\nexport const autocompletion = new DynamicSetting<boolean>(\n    'textEditorAutocompletion',\n    (activateOnTyping: boolean): CM.Extension =>\n        [CM.autocompletion({\n          activateOnTyping,\n          icons: false,\n          optionClass: (option: CM.Completion): string => option.type === 'secondary' ? 'cm-secondaryCompletion' : '',\n          tooltipClass: (state: CM.EditorState): string => {\n            return state.field(conservativeCompletion, false) ? 'cm-conservativeCompletion' : '';\n          },\n          defaultKeymap: false,\n        }),\n         CM.Prec.highest(CM.keymap.of([\n           {key: 'End', run: acceptCompletionIfAtEndOfLine},\n           {key: 'ArrowRight', run: acceptCompletionIfAtEndOfLine},\n           {key: 'Ctrl-Space', run: CM.startCompletion},\n           {key: 'Escape', run: CM.closeCompletion},\n           {key: 'ArrowDown', run: moveCompletionSelectionIfNotConservative(true)},\n           {key: 'ArrowUp', run: moveCompletionSelectionBackwardWrapper()},\n           {mac: 'Ctrl-n', run: moveCompletionSelectionIfNotConservative(true)},\n           {mac: 'Ctrl-p', run: moveCompletionSelectionBackwardWrapper()},\n           {key: 'PageDown', run: CM.moveCompletionSelection(true, 'page')},\n           {key: 'PageUp', run: CM.moveCompletionSelection(false, 'page')},\n           {key: 'Enter', run: acceptCompletionIfNotConservative},\n         ]))]);\n\nexport const bracketMatching = DynamicSetting.bool('textEditorBracketMatching', CM.bracketMatching());\n\nexport const codeFolding = DynamicSetting.bool('textEditorCodeFolding', [\n  CM.foldGutter({\n    markerDOM(open: boolean): HTMLElement {\n      const iconName = open ? 'triangle-down' : 'triangle-right';\n      const icon = new Icon.Icon.Icon();\n      icon.setAttribute('class', open ? 'cm-foldGutterElement' : 'cm-foldGutterElement cm-foldGutterElement-folded');\n      icon.data = {\n        iconName,\n        color: 'var(--icon-fold-marker)',\n        width: '14px',\n        height: '14px',\n      };\n      return icon;\n    },\n  }),\n  CM.keymap.of(CM.foldKeymap),\n]);\n\nexport function guessIndent(doc: CM.Text): string {\n  const values: {[indent: string]: number} = Object.create(null);\n  let scanned = 0;\n  for (let cur = doc.iterLines(1, Math.min(doc.lines + 1, LINES_TO_SCAN_FOR_INDENTATION_GUESSING)); !cur.next().done;) {\n    let space = (/^\\s*/.exec(cur.value) as string[])[0];\n    if (space.length === cur.value.length || !space.length || cur.value[space.length] === '*') {\n      continue;\n    }\n    if (space[0] === '\\t') {\n      space = '\\t';\n    } else if (/[^ ]/.test(space)) {\n      continue;\n    }\n    scanned++;\n    values[space] = (values[space] || 0) + 1;\n  }\n  const minOccurrence = scanned * 0.05;\n  const shortest = Object.entries(values).reduce((shortest, [string, count]): string|null => {\n    return count < minOccurrence || shortest && shortest.length < string.length ? shortest : string;\n  }, null as string | null);\n  return shortest ?? Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get();\n}\n\nconst deriveIndentUnit = CM.Prec.highest(CM.indentUnit.compute([], (state: CM.EditorState) => guessIndent(state.doc)));\n\nexport const autoDetectIndent = DynamicSetting.bool('textEditorAutoDetectIndent', deriveIndentUnit);\n\nfunction matcher(decorator: CM.MatchDecorator): CM.Extension {\n  return CM.ViewPlugin.define(\n      view => ({\n        decorations: decorator.createDeco(view),\n        update(u): void {\n          this.decorations = decorator.updateDeco(u, this.decorations);\n        },\n      }),\n      {\n        decorations: v => v.decorations,\n      });\n}\n\nconst WhitespaceDeco = new Map<string, CM.Decoration>();\n\nfunction getWhitespaceDeco(space: string): CM.Decoration {\n  const cached = WhitespaceDeco.get(space);\n  if (cached) {\n    return cached;\n  }\n  const result = CM.Decoration.mark({\n    attributes: space === '\\t' ? {\n      class: 'cm-highlightedTab',\n    } :\n                                 {class: 'cm-highlightedSpaces', 'data-display': '·'.repeat(space.length)},\n  });\n  WhitespaceDeco.set(space, result);\n  return result;\n}\n\nconst showAllWhitespace = matcher(new CM.MatchDecorator({\n  regexp: /\\t| +/g,\n  decoration: (match: RegExpExecArray): CM.Decoration => getWhitespaceDeco(match[0]),\n  boundary: /\\S/,\n}));\n\nconst showTrailingWhitespace = matcher(new CM.MatchDecorator({\n  regexp: /\\s+$/g,\n  decoration: CM.Decoration.mark({class: 'cm-trailingWhitespace'}),\n  boundary: /\\S/,\n}));\n\nexport const showWhitespace = new DynamicSetting<string>('showWhitespacesInEditor', value => {\n  if (value === 'all') {\n    return showAllWhitespace;\n  }\n  if (value === 'trailing') {\n    return showTrailingWhitespace;\n  }\n  return empty;\n});\n\nexport const allowScrollPastEof = DynamicSetting.bool('allowScrollPastEof', CM.scrollPastEnd());\n\nconst cachedIndentUnit: {[indent: string]: CM.Extension} = Object.create(null);\n\nfunction getIndentUnit(indent: string): CM.Extension {\n  let value = cachedIndentUnit[indent];\n  if (!value) {\n    value = cachedIndentUnit[indent] = CM.indentUnit.of(indent);\n  }\n  return value;\n}\n\nexport const indentUnit = new DynamicSetting<string>('textEditorIndent', getIndentUnit);\n\nexport const domWordWrap = DynamicSetting.bool('domWordWrap', CM.EditorView.lineWrapping);\n\nfunction detectLineSeparator(text: string): CM.Extension {\n  if (/\\r\\n/.test(text) && !/(^|[^\\r])\\n/.test(text)) {\n    return CM.EditorState.lineSeparator.of('\\r\\n');\n  }\n  return [];\n}\n\nconst baseKeymap = CM.keymap.of([\n  {key: 'Tab', run: CM.acceptCompletion},\n  {key: 'Ctrl-m', run: CM.cursorMatchingBracket, shift: CM.selectMatchingBracket},\n  {key: 'Mod-/', run: CM.toggleComment},\n  {key: 'Mod-d', run: CM.selectNextOccurrence},\n  {key: 'Alt-ArrowLeft', mac: 'Ctrl-ArrowLeft', run: CM.cursorSyntaxLeft, shift: CM.selectSyntaxLeft},\n  {key: 'Alt-ArrowRight', mac: 'Ctrl-ArrowRight', run: CM.cursorSyntaxRight, shift: CM.selectSyntaxRight},\n  {key: 'Ctrl-ArrowLeft', mac: 'Alt-ArrowLeft', run: CM.cursorSubwordBackward, shift: CM.selectSubwordBackward},\n  {key: 'Ctrl-ArrowRight', mac: 'Alt-ArrowRight', run: CM.cursorSubwordForward, shift: CM.selectSubwordForward},\n  ...CM.standardKeymap,\n  ...CM.historyKeymap,\n]);\n\nfunction themeIsDark(): boolean {\n  const setting = Common.Settings.Settings.instance().moduleSetting('uiTheme').get();\n  return setting === 'systemPreferred' ? window.matchMedia('(prefers-color-scheme: dark)').matches : setting === 'dark';\n}\n\nexport const dummyDarkTheme = CM.EditorView.theme({}, {dark: true});\nexport const themeSelection = new CM.Compartment();\n\nexport function theme(): CM.Extension {\n  return [editorTheme, themeIsDark() ? themeSelection.of(dummyDarkTheme) : themeSelection.of([])];\n}\n\nlet sideBarElement: HTMLElement|null = null;\n\nfunction getTooltipSpace(): DOMRect {\n  if (!sideBarElement) {\n    sideBarElement =\n        WindowBoundsService.WindowBoundsService.WindowBoundsServiceImpl.instance().getDevToolsBoundingElement();\n  }\n  return sideBarElement.getBoundingClientRect();\n}\n\nexport function baseConfiguration(text: string|CM.Text): CM.Extension {\n  return [\n    theme(),\n    CM.highlightSpecialChars(),\n    CM.highlightSelectionMatches(),\n    CM.history(),\n    CM.drawSelection(),\n    CM.EditorState.allowMultipleSelections.of(true),\n    CM.indentOnInput(),\n    CM.syntaxHighlighting(CodeHighlighter.CodeHighlighter.highlightStyle),\n    baseKeymap,\n    CM.EditorView.clickAddsSelectionRange.of(mouseEvent => mouseEvent.altKey || mouseEvent.ctrlKey),\n    tabMovesFocus.instance(),\n    bracketMatching.instance(),\n    indentUnit.instance(),\n    CM.Prec.lowest(CM.EditorView.contentAttributes.of({'aria-label': i18nString(UIStrings.codeEditor)})),\n    text instanceof CM.Text ? [] : detectLineSeparator(text),\n    CM.tooltips({\n      parent: getTooltipHost() as unknown as HTMLElement,\n      tooltipSpace: getTooltipSpace,\n    }),\n  ];\n}\n\nexport const closeBrackets: CM.Extension = [\n  CM.closeBrackets(),\n  CM.keymap.of(CM.closeBracketsKeymap),\n];\n\n// Root editor tooltips at the top of the document, creating a special\n// element with the editor styles mounted in it for them. This is\n// annoying, but necessary because a scrollable parent node clips them\n// otherwise, `position: fixed` doesn't work due to `contain` styles,\n// and appending them directly to `document.body` doesn't work because\n// the necessary style sheets aren't available there.\nlet tooltipHost: ShadowRoot|null = null;\n\nfunction getTooltipHost(): ShadowRoot {\n  if (!tooltipHost) {\n    const styleModules = CM.EditorState\n                             .create({\n                               extensions: [\n                                 editorTheme,\n                                 themeIsDark() ? dummyDarkTheme : [],\n                                 CM.syntaxHighlighting(CodeHighlighter.CodeHighlighter.highlightStyle),\n                                 CM.showTooltip.of({\n                                   pos: 0,\n                                   create() {\n                                     return {dom: document.createElement('div')};\n                                   },\n                                 }),\n                               ],\n                             })\n                             .facet(CM.EditorView.styleModule);\n    const host = document.body.appendChild(document.createElement('div'));\n    host.className = 'editor-tooltip-host';\n    tooltipHost = host.attachShadow({mode: 'open'});\n    CM.StyleModule.mount(tooltipHost, styleModules);\n  }\n  return tooltipHost;\n}\n\nclass CompletionHint extends CM.WidgetType {\n  constructor(readonly text: string) {\n    super();\n  }\n\n  override eq(other: CompletionHint): boolean {\n    return this.text === other.text;\n  }\n\n  toDOM(): HTMLElement {\n    const span = document.createElement('span');\n    span.className = 'cm-completionHint';\n    span.textContent = this.text;\n    return span;\n  }\n}\n\nexport const showCompletionHint = CM.ViewPlugin.fromClass(class {\n  decorations: CM.DecorationSet = CM.Decoration.none;\n  currentHint: string|null = null;\n\n  update(update: CM.ViewUpdate): void {\n    const top = this.currentHint = this.topCompletion(update.state);\n    if (!top || update.state.field(conservativeCompletion, false)) {\n      this.decorations = CM.Decoration.none;\n    } else {\n      this.decorations = CM.Decoration.set(\n          [CM.Decoration.widget({widget: new CompletionHint(top), side: 1}).range(update.state.selection.main.head)]);\n    }\n  }\n\n  topCompletion(state: CM.EditorState): string|null {\n    const completion = CM.selectedCompletion(state);\n    if (!completion) {\n      return null;\n    }\n    let {label, apply} = completion;\n    if (typeof apply === 'string') {\n      label = apply;\n      apply = undefined;\n    }\n    if (apply || label.length > 100 || label.indexOf('\\n') > -1 || completion.type === 'secondary') {\n      return null;\n    }\n    const pos = state.selection.main.head;\n    const lineBefore = state.doc.lineAt(pos);\n    if (pos !== lineBefore.to) {\n      return null;\n    }\n    const partBefore = (label[0] === '\\''    ? /'(\\\\.|[^'\\\\])*$/ :\n                            label[0] === '\"' ? /\"(\\\\.|[^\"\\\\])*$/ :\n                                               /#?[\\w$]+$/)\n                           .exec(lineBefore.text);\n    if (partBefore && !label.startsWith(partBefore[0])) {\n      return null;\n    }\n    return label.slice(partBefore ? partBefore[0].length : 0);\n  }\n}, {decorations: p => p.decorations});\n\nexport function contentIncludingHint(view: CM.EditorView): string {\n  const plugin = view.plugin(showCompletionHint);\n  let content = view.state.doc.toString();\n  if (plugin && plugin.currentHint) {\n    const {head} = view.state.selection.main;\n    content = content.slice(0, head) + plugin.currentHint + content.slice(head);\n  }\n  return content;\n}\n"]}