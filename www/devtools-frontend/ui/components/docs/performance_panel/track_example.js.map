{"version":3,"file":"track_example.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/components/docs/performance_panel/track_example.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as FrontendHelpers from '../../../../../test/unittests/front_end/helpers/TraceHelpers.js';\nimport * as TimelineModel from '../../../../models/timeline_model/timeline_model.js';\nimport * as Timeline from '../../../../panels/timeline/timeline.js';\nimport * as ComponentSetup from '../../helpers/helpers.js';\n\nimport type * as PerfUI from '../../../legacy/components/perf_ui/perf_ui.js';\nawait ComponentSetup.ComponentServerSetup.setup();\n\nconst params = new URLSearchParams(window.location.search);\nconst track = params.get('track');\nconst fileName = params.get('fileName');\nconst expanded = params.get('expanded');\nconst darkMode = params.get('darkMode');\n\nconst customStartWindowTime = params.get('windowStart');\nconst customEndWindowTime = params.get('windowEnd');\nconst p = document.createElement('p');\n// Expand the track by default for test.\nawait renderContent(expanded === 'false' ? false : true);\n\ntype FlameChartData = {\n  flameChart: PerfUI.FlameChart.FlameChart,\n  dataProvider: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartDataProvider|\n              Timeline.TimelineFlameChartNetworkDataProvider.TimelineFlameChartNetworkDataProvider,\n};\nasync function renderContent(expanded: boolean) {\n  if (darkMode) {\n    document.documentElement.classList.add('-theme-with-dark-background');\n  }\n\n  const container = document.getElementById('container');\n  if (!container) {\n    throw new Error('could not find container');\n  }\n  container.appendChild(p);\n  if (!track || !fileName) {\n    document.title = 'Performance panel track example';\n    p.innerText =\n        'Use the `track` and `fileName` URL search params to load a track example (f.e. track_example.html?track=Timings&fileName=timings-track)';\n    return;\n  }\n  const file = `${fileName}.json.gz`;\n  document.title = `Performance panel ${track} track`;\n  p.innerText = `${track} track is loading`;\n  p.classList.add('loading');\n  let flameChartData: FlameChartData;\n  try {\n    // @ts-expect-error: allow to check if a const string array contains a string.\n    if (Timeline.CompatibilityTracksAppender.TrackNames.includes(track)) {\n      const trackAppenderName = track as Timeline.CompatibilityTracksAppender.TrackAppenderName;\n      flameChartData = await FrontendHelpers.getMainFlameChartWithTracks(file, new Set([trackAppenderName]), expanded);\n    } else if (track in TimelineModel.TimelineModel.TrackType) {\n      flameChartData = await FrontendHelpers.getMainFlameChartWithLegacyTrack(\n          file, track as TimelineModel.TimelineModel.TrackType, expanded);\n    } else if (track === 'Network') {\n      flameChartData = await FrontendHelpers.getNetworkFlameChartWithLegacyTrack(file, expanded);\n    } else {\n      p.classList.remove('loading');\n      p.innerText = `Invalid track name: ${track}`;\n      return;\n    }\n    container.innerHTML = '';\n    const {flameChart, dataProvider} = flameChartData;\n    const timingsTrackOffset = flameChart.levelToOffset(dataProvider.maxStackDepth());\n    container.style.height = `${timingsTrackOffset}px`;\n    if (customStartWindowTime && customEndWindowTime) {\n      flameChart.setWindowTimes(Number(customStartWindowTime), Number(customEndWindowTime), false);\n    }\n    flameChart.show(container);\n  } catch (error) {\n    p.classList.remove('loading');\n    p.innerText = error;\n    console.error(error);\n  }\n}\n"]}